{
  "hash": "24d51149fb04a5d2e64c08b5d9142b82",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Comparison of Models for Competing Risk Analysis\"\ndescription: | \n  Competing risk model의 C-index, AUC, Brier score를 계산하고 비교하는 R 코드 소개\nauthor:\n  name: \"Suhyun Han\"\n  email: amyhan258@naver.com\n  url: https://github.com/amyhan258\ndate: 2025-04-03\nformat: html\n---\n\n\n\n## 1. Data preprocess and prepare\n\nstatus: 1=melanoma 사망, 2=생존, 3=melanoma 외 사망\\\nstatus_competing: 0=생존, 1=melanoma 사망, 2=melanoma 외 사망\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(data.table);library(survival);library(boot);library(magrittr);library(riskRegression);library(prodlim);library(pec);library(rmarkdown)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'boot'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:survival':\n\n    aml\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nriskRegression version 2023.03.22\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'pec'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:riskRegression':\n\n    ipcw, selectCox\n```\n\n\n:::\n\n```{.r .cell-code}\nmelanoma_dt <- as.data.table(melanoma) %>% .[,c(\"sex\",\"ulcer\"):=lapply(.SD,as.factor),.SDcols=c(\"sex\",\"ulcer\")] %>% \n  .[,status_competing:=factor(ifelse(status==1,1,ifelse(status==2,0,2)), levels=0:2)] %>% \n  .[,time_Y:=time/365.25] %>% .[,-c(\"year\",\"status\",\"time\")]\n\nmodel_var_list <- list(c(\"sex\",\"age\"), c(\"sex\",\"age\",\"thickness\"), c(\"sex\",\"age\",\"ulcer\"), c(\"sex\",\"age\",\"thickness\",\"ulcer\"))\n\nHist_formula_list <- list( Hist(time_Y, status_competing) ~ sex+age,\n                           Hist(time_Y, status_competing) ~ sex+age+thickness,\n                           Hist(time_Y, status_competing) ~ sex+age+ulcer,\n                           Hist(time_Y, status_competing) ~ sex+age+thickness+ulcer ) \n```\n:::\n\n\n\n## 2. Each model\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninvisible(capture.output({\n  table_1 <- lapply (1:length(model_var_list), function(i) { \n  # Harrell_C_index_info\n  fgr_data_for_Harrell_C_index <- survival::finegray(as.formula(paste0(\"Surv(time_Y, status_competing) ~ \",paste(model_var_list[[i]],collapse=\"+\"))), data=melanoma_dt, etype=1)\n  fgr_model_for_Harrell_C_index <- coxph(as.formula(paste0(\"Surv(fgstart, fgstop, fgstatus) ~ \",paste(model_var_list[[i]],collapse=\"+\"))), data=fgr_data_for_Harrell_C_index)\n  Harrell_C_index_info <- survival::concordance(fgr_model_for_Harrell_C_index)\n  \n  # Wolbers_C_index_info\n  fgr_model_for_Wolbers_C_index <- riskRegression::FGR(Hist_formula_list[[i]], data=melanoma_dt, cause=1)\n  Wolbers_C_index_info <- pec::cindex(object=fgr_model_for_Wolbers_C_index, formula=Hist_formula_list[[i]], data=melanoma_dt, cause=1, confInt=T, verbose=F)\n  \n  cindex_values <- numeric()\n  for(b in 1:20){\n    indices <- sample(seq_len(nrow(melanoma_dt)), size=nrow(melanoma_dt), replace=T)\n    boot_data <- melanoma_dt[indices]\n    fgr_model_for_Wolbers_C_index_boot <- riskRegression::FGR(Hist_formula_list[[i]], data=boot_data, cause=1)\n    Wolbers_C_index_info_boot <- pec::cindex(object=fgr_model_for_Wolbers_C_index_boot, formula=Hist_formula_list[[i]], data=boot_data, cause=1, verbose=F)\n    cindex_values[[b]] <- Wolbers_C_index_info_boot$AppCindex$FGR\n  }\n  Wolbers_C_index_lower <- quantile(cindex_values, probs=0.05/2)\n  Wolbers_C_index_upper <- quantile(cindex_values, probs=(1-(0.05/2)))\n\n  # AUC_and_Brier_info\n  fgr_model_for_AUC_and_Brier <- riskRegression::FGR(Hist_formula_list[[i]], data=melanoma_dt, cause=1)\n  AUC_and_Brier_info <- riskRegression::Score(list(fgr_model_for_AUC_and_Brier), formula=Hist_formula_list[[i]] , data=melanoma_dt, times=c(5,10), null.model=F)\n\n  # return\n  data.table( \"Model\"=LETTERS[i],\n              \"Harrell_C_index\"=paste0(sprintf(\"%.04f\",Harrell_C_index_info$concordance),\"(\",\n                                       sprintf(\"%.04f\",Harrell_C_index_info$concordance-qnorm(0.975)*sqrt(Harrell_C_index_info$var)),\"-\",\n                                       sprintf(\"%.04f\",Harrell_C_index_info$concordance+qnorm(0.975)*sqrt(Harrell_C_index_info$var)),\")\"),\n              \"Wolbers_C_index\"= paste0(sprintf(\"%.04f\",Wolbers_C_index_info$AppCindex$FGR),\"(\",\n                                        sprintf(\"%.04f\",Wolbers_C_index_lower),\"-\",\n                                        sprintf(\"%.04f\",Wolbers_C_index_upper),\")\"),\n              \"AUC_t=5\"=paste0(sprintf(\"%.04f\",AUC_and_Brier_info$AUC$score[1]$AUC),\" (\",\n                               sprintf(\"%.04f\",AUC_and_Brier_info$AUC$score[1]$lower),\"-\",\n                               sprintf(\"%.04f\",AUC_and_Brier_info$AUC$score[1]$upper),\")\"),\n              \"AUC_t=10\"=paste0(sprintf(\"%.04f\",AUC_and_Brier_info$AUC$score[2]$AUC),\" (\",\n                               sprintf(\"%.04f\",AUC_and_Brier_info$AUC$score[2]$lower),\"-\",\n                               sprintf(\"%.04f\",AUC_and_Brier_info$AUC$score[2]$upper),\")\"),\n              \"Brier_t=5\"=paste0(sprintf(\"%.04f\",AUC_and_Brier_info$Brier$score[1]$Brier),\" (\",\n                               sprintf(\"%.04f\",AUC_and_Brier_info$Brier$score[1]$lower),\"-\",\n                               sprintf(\"%.04f\",AUC_and_Brier_info$Brier$score[1]$upper),\")\"),\n              \"Brier_t=10\"=paste0(sprintf(\"%.04f\",AUC_and_Brier_info$Brier$score[2]$Brier),\" (\",\n                               sprintf(\"%.04f\",AUC_and_Brier_info$Brier$score[2]$lower),\"-\",\n                               sprintf(\"%.04f\",AUC_and_Brier_info$Brier$score[2]$upper),\")\")\n  ) }) %>% \n    do.call(rbind,.)\n}))\n```\n:::\n\n\n\n## 3. Compare two model\n\nCompare Harrell_C_index\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable_2_Harrell_C_index <- lapply(1:length(model_var_list), function(i) {\n  fgr_data_for_Harrell_C_index <- survival::finegray(as.formula(paste0(\"Surv(time_Y, status_competing) ~ \",paste(model_var_list[[i]],collapse=\"+\"))), data=melanoma_dt, etype=1)\n  fgr_model_for_Harrell_C_index <- coxph(as.formula(paste0(\"Surv(fgstart, fgstop, fgstatus) ~ \",paste(model_var_list[[i]],collapse=\"+\"))), data=fgr_data_for_Harrell_C_index)\n \n  lapply(1:length(model_var_list), function(j) {\n    fgr_data_for_Harrell_C_index_new <- finegray(as.formula(paste0(\"Surv(time_Y, status_competing) ~ \",paste(model_var_list[[j]],collapse=\"+\"))), data=melanoma_dt, etype=1)\n    fgr_model_for_Harrell_C_index_new <- coxph(as.formula(paste0(\"Surv(fgstart, fgstop, fgstatus) ~ \",paste(model_var_list[[j]],collapse=\"+\"))), data=fgr_data_for_Harrell_C_index_new)\n  \n    ctest <- concordance(fgr_model_for_Harrell_C_index, fgr_model_for_Harrell_C_index_new)\n    contr <- c(-1, 1)\n    dtest <- contr %*% coef(ctest)\n    dvar <- contr %*% vcov(ctest) %*% contr\n    z <- dtest/sqrt(dvar)\n    p_value_temp <- 2 * (1 - pnorm(abs(z))) \n    p_value <- ifelse(p_value_temp<0.001,\"<0.001\",sprintf(\"%.03f\",p_value_temp))\n    return(p_value)\n  }) %>% unlist()\n}) %>% do.call(rbind,.) %>% as.data.table() %>% setnames(c(\"A\",\"B\",\"C\",\"D\")) %>% cbind(Harrell_C_index=c(\"A\",\"B\",\"C\",\"D\"),.) %>% replace(is.na(.),\"-\")\nrmarkdown::paged_table(table_2_Harrell_C_index)\n```\n:::\n\n\n\nCompare Wolbers_C_index\\\nbootstraping이므로 하나의 pair(model1, model2)에 대해 1번만 코드 실행\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(10)\ninvisible(capture.output({\n   table_2_Wolbers_C_index <- lapply(1:(length(model_var_list)-1), function(i) {\n  cindex_values <- numeric()\n  for(b in 1:20){\n    indices <- sample(seq_len(nrow(melanoma_dt)), size=nrow(melanoma_dt), replace=T)\n    boot_data <- melanoma_dt[indices]\n    fgr_model_for_Wolbers_C_index_boot <- riskRegression::FGR(Hist_formula_list[[i]], data=boot_data, cause=1)\n    Wolbers_C_index_info_boot <- pec::cindex(object=fgr_model_for_Wolbers_C_index_boot, formula=Hist_formula_list[[i]], data=boot_data, cause=1, verbose=F)\n    cindex_values[[b]] <- Wolbers_C_index_info_boot$AppCindex$FGR\n  }\n\n  lapply ((i+1):length(model_var_list), function(j) { # A와 B,C,D 비교, B와 C,D 비교, C와 D 비교 \n    cindex_values_new <- numeric()\n    for(b in 1:20){\n      indices_new <- sample(seq_len(nrow(melanoma_dt)), size=nrow(melanoma_dt), replace=T)\n      boot_data_new <- melanoma_dt[indices_new]\n      fgr_model_for_Wolbers_C_index_boot_new <- riskRegression::FGR(Hist_formula_list[[j]], data=boot_data_new, cause=1)\n      Wolbers_C_index_info_boot_new <- pec::cindex(object=fgr_model_for_Wolbers_C_index_boot_new, formula=Hist_formula_list[[j]], data=boot_data_new, cause=1, verbose=F)\n      cindex_values_new[[b]] <- Wolbers_C_index_info_boot_new$AppCindex$FGR\n    }\n      \n    p_value_temp <- t.test(cindex_values-cindex_values_new, mu=0)$p.value\n    return( ifelse(p_value_temp<0.001,\"<0.001\",sprintf(\"%.03f\",p_value_temp)) )\n  }) %>% unlist() %>% c(rep(\"-\",(i-1)),.)\n}) %>% do.call(rbind,.) %>% as.data.table() %>% setnames(c(\"B\",\"C\",\"D\")) %>% \n  cbind(\"A\"=rep(\"-\",3),.) %>% rbind(\"D\"=data.table(\"-\",\"-\",\"-\",\"-\"), use.names=F) %>% cbind(Wolbers_C_index=c(\"A\",\"B\",\"C\",\"D\"),.) %>% replace(is.na(.),\"-\")\n}))\nrmarkdown::paged_table(table_2_Wolbers_C_index)\n```\n:::\n\n\n\nCompare AUC_and_Brier\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninvisible(capture.output({\n  table_2_AUC_and_Brier <- lapply(1:length(model_var_list), function(i) {\n  fgr_model_AUC_and_Brier <- riskRegression::FGR(Hist_formula_list[[i]], data=melanoma_dt, cause=1)\n  \n  lapply (1:length(model_var_list), function(j) {\n    fgr_model_AUC_and_Brier_new <- riskRegression::FGR(Hist_formula_list[[j]], data=melanoma_dt, cause=1)\n    \n    AUC_and_Brier <- riskRegression::Score(list(fgr_model_AUC_and_Brier,fgr_model_AUC_and_Brier_new),\n                                           formula=Hist(time_Y, status_competing) ~ 1, data=melanoma_dt, times=c(5,10), null.model=F)\n    \n    data.table(\"V1\"=c(sprintf(\"%.03f\",AUC_and_Brier$AUC$contrasts$p), sprintf(\"%.03f\",AUC_and_Brier$Brier$contrasts$p))) %>% setnames(as.character(j))\n  }) %>% do.call(cbind,.)\n  })\n}))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable_2_AUC_t_5 <- lapply(1:length(model_var_list), function(k){\n  table_2_AUC_and_Brier[[k]][1]\n}) %>% do.call(rbind,.) %>% setnames(c(\"A\",\"B\",\"C\",\"D\")) %>% cbind(AUC_t_5=c(\"A\",\"B\",\"C\",\"D\"),.)\nfor (i in seq(length(model_var_list))) {\n  table_2_AUC_t_5[i,(i+1):=\"-\"]\n}\nrmarkdown::paged_table(table_2_AUC_t_5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable_2_AUC_t_10 <- lapply(1:length(model_var_list), function(k){\n  table_2_AUC_and_Brier[[k]][2]\n}) %>% do.call(rbind,.) %>% setnames(c(\"A\",\"B\",\"C\",\"D\")) %>% cbind(AUC_t_10=c(\"A\",\"B\",\"C\",\"D\"),.)\nfor (i in seq(length(model_var_list))) {\n  table_2_AUC_t_10[i,(i+1):=\"-\"]\n}\nrmarkdown::paged_table(table_2_AUC_t_10)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable_2_Brier_t_5 <- lapply(1:length(model_var_list), function(k){\n  table_2_AUC_and_Brier[[k]][3]\n}) %>% do.call(rbind,.) %>% setnames(c(\"A\",\"B\",\"C\",\"D\")) %>% cbind(Brier_t_5=c(\"A\",\"B\",\"C\",\"D\"),.)\nfor (i in seq(length(model_var_list))) {\n  table_2_Brier_t_5[i,(i+1):=\"-\"]\n}\nrmarkdown::paged_table(table_2_Brier_t_5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable_2_Brier_t_10 <- lapply(1:length(model_var_list), function(k){\n  table_2_AUC_and_Brier[[k]][4]\n}) %>% do.call(rbind,.) %>% setnames(c(\"A\",\"B\",\"C\",\"D\")) %>% cbind(Brier_t_10=c(\"A\",\"B\",\"C\",\"D\"),.) %>% replace(is.na(.),\"-\")\nfor (i in seq(length(model_var_list))) {\n  table_2_Brier_t_10[i,(i+1):=\"-\"]\n}\nrmarkdown::paged_table(table_2_Brier_t_10)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}