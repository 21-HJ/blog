<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>チャラトゥブログ</title>
<link>https://blog.zarathu.com/jp/</link>
<atom:link href="https://blog.zarathu.com/jp/index.xml" rel="self" type="application/rss+xml"/>
<description>Zarathuからのニュース、洞察、詳細なケーススタディ</description>
<generator>quarto-1.4.553</generator>
<lastBuildDate>Fri, 29 Mar 2024 15:00:00 GMT</lastBuildDate>
<item>
  <title>bslib: input_task_button 소개</title>
  <dc:creator>Jinhwan Kim</dc:creator>
  <link>https://blog.zarathu.com/jp/posts/2024-03-30-input-task-button/</link>
  <description><![CDATA[ <!-- Google tag (gtag.js) --><script async="" src="https://www.googletagmanager.com/gtag/js?id=G-L0DYYSH9KM"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L0DYYSH9KM');
</script><section id="bslib" class="level2"><h2 class="anchored" data-anchor-id="bslib">bslib</h2>
<p>bslibとはbootstrapのcssをRで使えるようにしたパッケージです。</p>
<p>正確な原文の説明は<strong>Tools for theming Shiny and R Markdown via Bootstrap 3, 4, or 5.</strong> で、ShinyとRmarkdown(もちろんQuartoを含む)で色んなテーマを活用することができます。</p>
<p><img src="https://blog.zarathu.com/jp/posts/2024-03-30-input-task-button/img/themer.gif" width="100%"></p>
<p>この記事ではbslibの活用方法の中でShinyに集中して説明します。</p>
<p>実際、Shinyは基本的にデザインのためbootstrapを使います。 しかし、Shinyはパッケージを構成してるコンポーネントと、関係が複雑に絡まっていて、かなり<strong>重い</strong>パッケージになってしまい、このため、アップデートで影響を受ける部分が多く、機能中心のアップデートをすることが知られています。</p>
<p>つまり、UIを主に扱うbootstrapの部分は5年前のバージョンである3.4.1バージョンを使っていて、別のテーマ設定をしない場合、特有のブルー/グレーのテーマを基本的に使うことになります。(最近のバージョンは5.3.3)</p>
<p><img src="https://blog.zarathu.com/jp/posts/2024-03-30-input-task-button/img/shiny-bootstrap.png" width="100%"></p>
<p>それでshinyでは停滞したUIをアップデートするため、UIを扱う別のRパッケージを作って上書きするように最近bootstrapの機能を提供するようになりました。</p>
<div class="callout callout-style-simple callout-warning">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>この記事ではbslibの主な使い方は説明しません。</p>
</div>
</div>
</div>
</section><section id="actionbutton" class="level2"><h2 class="anchored" data-anchor-id="actionbutton">actionButton</h2>
<p>Shinyが提供する機能は本当に多様ですが、核心的な機能を挙げるなら、<code>actionButton</code>を挙げることができます。</p>
<p>actionButton`とはユーザがボタンを押すとserverで予め宣言した特定の動作を実行する機能で、普通はユーザがデータをアップロードしたら、このデータを活用して計算結果を生成するために使います。</p>
<p>actionButtonの使用例としては下記のコードのように(<code><a href="https://rdrr.io/pkg/shiny/man/actionButton.html">?shiny::actionButton</a></code>で確認することができます)ユーザーが選択した観測数に合うヒストグラムを描くことができます。</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://shiny.posit.co/">shiny</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/fluidPage.html">fluidPage</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/sliderInput.html">sliderInput</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"obs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of observations"</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/actionButton.html">actionButton</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"goButton"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Go!"</span>, class <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"btn-success"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/plotOutput.html">plotOutput</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"distPlot"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">distPlot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/renderPlot.html">renderPlot</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">goButton</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dist</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/isolate.html">isolate</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/stats/Normal.html">rnorm</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">obs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/graphics/hist.html">hist</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dist</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/shinyApp.html">shinyApp</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p><img src="https://blog.zarathu.com/jp/posts/2024-03-30-input-task-button/img/action.png" width="100%"></p>
</section><section id="long-actionbutton" class="level2"><h2 class="anchored" data-anchor-id="long-actionbutton">long actionButton</h2>
<p>ところで、この <code>actionButton</code> の問題点の一つは、もし演算に時間がかかる場合、ユーザーはボタンを押して結果を待っている間は何もできないということです。</p>
<p>さらに、単純に何もできないだけでなく、ボタンがクリックされなかったと勘違いしてボタンを何度もクリックすることもあります。</p>
<p>もし、大容量の誘電体データを活用した計算のためのShinyであれば、1回の計算に分単位の時間が必要な場合もあり、これは様々な問題を引き起こす可能性があります。</p>
<p>特に、何度もクリックした場合、長い時間をかけて演算を終えた直後にまた同じ演算をまたやって、また待って、…という悪循環に陥ることもあります。</p>
<p><img src="https://blog.zarathu.com/jp/posts/2024-03-30-input-task-button/img/waiting.jpg" width="100%"></p>
</section><section id="shiny-with-loading" class="level2"><h2 class="anchored" data-anchor-id="shiny-with-loading">shiny with loading</h2>
<p>actionButton`のこの問題を解決するため、色んな方法がありました。</p>
<ol type="1">
<li>
<a href="https://shiny.posit.co/r/articles/build/progress/">**progress indicator</a>を使う方法</li>
</ol>
<p>この方法はshinyで基本的に提供するProgress Indicator UIを活用する方法で、演算の過程/段階が進むにつれて進行度をユーザーに見せることができます。</p>
<div class="cell">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">plot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/renderPlot.html">renderPlot</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">goPlot</span> </span>
<span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dat</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/data.frame.html">data.frame</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/numeric.html">numeric</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/numeric.html">numeric</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/withProgress.html">withProgress</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Making plot'</span>, value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">n</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span></span>
<span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">i</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">n</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dat</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/cbind.html">rbind</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dat</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/data.frame.html">data.frame</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/stats/Normal.html">rnorm</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/stats/Normal.html">rnorm</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/withProgress.html">incProgress</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">n</span>, detail <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/paste.html">paste</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Doing part"</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">i</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/Sys.sleep.html">Sys.sleep</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/graphics/plot.default.html">plot</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dat</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dat</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/shinyUI.html">shinyUI</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/bootstrapPage.html">basicPage</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/plotOutput.html">plotOutput</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'plot'</span>, width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"300px"</span>, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"300px"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/actionButton.html">actionButton</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'goPlot'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Go plot'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/shinyApp.html">shinyApp</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ui <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span>, server <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p><img src="https://blog.zarathu.com/jp/posts/2024-03-30-input-task-button/img/progress.png" width="100%"></p>
<p>しかし、これは <code>withProgress</code>, <code>incProgress</code> または <code>Progress</code> などの関数やオブジェクトを時間がかかる演算に<strong>追加でコードを書かなければならない</strong>というデメリットがあります。</p>
<p>2.別のRパッケージを使う</p>
<p>Rのエコシステムには解決しようとする色んな問題があり、その問題毎のRパッケージがあると考えても過言ではないですが、actionButtonと演算結果の間の長い空白をUIに表記するための機能も同じです。</p>
<p>以前のprogress indicatorと似て<strong>追加コードを書いて解決する必要があり</strong>もう少しデザインや詳細設定をすることができるカスタム機能があると思ってください。</p>
<p>以下はいくつかの例示パッケージと事例です(アルファベット順)。</p>
<ul>
<li><a href="https://github.com/dreamRs/shinybusy/">shinybusy</a></li>
</ul>
<p><img src="https://blog.zarathu.com/jp/posts/2024-03-30-input-task-button/img/shinybusy.gif" width="100%"></p>
<ul>
<li><a href="https://github.com/daattali/shinycssloaders">shinycssloaders</a></li>
</ul>
<p><img src="https://blog.zarathu.com/jp/posts/2024-03-30-input-task-button/img/shinycssloaders.gif" width="100%"></p>
<ul>
<li><a href="https://github.com/emitanaka/shinycustomloader">shinycustomloader</a></li>
</ul>
<p><img src="https://blog.zarathu.com/jp/posts/2024-03-30-input-task-button/img/shinycustomloader.gif" width="100%"></p>
<ul>
<li><a href="https://github.com/JohnCoene/waiter/">waiter</a></li>
</ul>
<p><img src="https://blog.zarathu.com/jp/posts/2024-03-30-input-task-button/img/waiter-basic.gif" width="100%"></p>
</section><section id="input_task_button" class="level2"><h2 class="anchored" data-anchor-id="input_task_button">input_task_button</h2>
<p>input_task_button<code>は上の方法とは違って</code>actionButton<code>を拡張した機能で、</code>actionButton`を押すと演算が進行中であることを知らせてボタンが無効になり、演算が終わったら再びボタンが有効になる機能を提供します。</p>
<p>何より一番大きな違いは<code>actionButton</code>を置き換えることができるので追加コードを使う必要がないことです。</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb3-2"></span>
<span id="cb3-3">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sliderInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"obs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of observations"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>),</span>
<span id="cb3-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># actionButton("goButton", "Go!", class = "btn-success"),</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">input_task_button</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"goButton"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Go!"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"success"</span>),</span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"distPlot"</span>)</span>
<span id="cb3-8">)</span>
<span id="cb3-9"></span>
<span id="cb3-10">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(input, output) {</span>
<span id="cb3-11">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>distPlot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderPlot</span>({</span>
<span id="cb3-12">    input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>goButton</span>
<span id="cb3-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.sleep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb3-14">    dist <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isolate</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>obs))</span>
<span id="cb3-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(dist)</span>
<span id="cb3-16">  })</span>
<span id="cb3-17">}</span>
<span id="cb3-18"></span>
<span id="cb3-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
</div>
<p><img src="https://blog.zarathu.com/jp/posts/2024-03-30-input-task-button/img/input_task_button.gif" width="100%"></p>
<p><code>input_task_button</code> の使用のため、5行目の <code>actionButton</code> を6行目の <code>input_task_button</code> に置き換え、さらに、意図的に長くかかる演算を作るため、13行目の <code><a href="https://rdrr.io/r/base/Sys.sleep.html">Sys.sleep()</a></code> コードを活用して5秒を遅延させました。</p>
<p>input_task_buttonの使い方は次のようになります。</p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>input_task_button<code>は</code>actionButton` を無理なく置き換えることができますが、若干のパラメータ修正が必要です。</p>
</div>
</div>
</div>
<table class="table">
<thead><tr class="header">
<th style="text-align: center;">actionButton</th>
<th style="text-align: center;">input_task_button</th>
<th style="text-align: center;">役割</th>
<th style="text-align: center;"></th>
</tr></thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">inputId</td>
<td style="text-align: center;">id</td>
<td style="text-align: center;">ボタンID</td>
<td style="text-align: center;"></td>
</tr>
<tr class="even">
<td style="text-align: center;">label</td>
<td style="text-align: center;">label</td>
<td style="text-align: center;">ボタンラベル</td>
<td style="text-align: center;"></td>
</tr>
<tr class="odd">
<td style="text-align: center;">icon</td>
<td style="text-align: center;">icon</td>
<td style="text-align: center;">ボタンアイコン</td>
<td style="text-align: center;"></td>
</tr>
<tr class="even">
<td style="text-align: center;"></td>
<td style="text-align: center;">label_busy</td>
<td style="text-align: center;">ボタン非アクティブ時のラベル</td>
<td style="text-align: center;"></td>
</tr>
<tr class="odd">
<td style="text-align: center;"></td>
<td style="text-align: center;">icon_busy</td>
<td style="text-align: center;">ボタン非アクティブ時のアイコン</td>
<td style="text-align: center;"></td>
</tr>
<tr class="even">
<td style="text-align: center;">class</td>
<td style="text-align: center;">type</td>
<td style="text-align: center;">ボタンテーマ/色</td>
<td style="text-align: center;"></td>
</tr>
</tbody>
</table>
<ul>
<li><a href="https://github.com/rstudio/bslib/releases/tag/v0.7.0">リリースノート原文</a></li>
<li><a href="https://rstudio.github.io/bslib/reference/input_task_button.html">input_task_buttonマニュアル</a></li>
</ul></section><section id="まとめ" class="level2"><h2 class="anchored" data-anchor-id="まとめ">まとめ</h2>
<p>今回はbslibの最新機能であるinput_task_buttonと簡単な使用事例を紹介しました。</p>
<p>これは潜在的にユーザーエクスペリエンスを向上させる機能であり、既存のshinyでは追加コードを書かなければならない手間を解決してくれる機能だと思います。</p>
<p>特に、他のウェブアプリケーションとは違ってShinyでは大容量データ演算のため時間が長くかかる場合が多いですが、比較的貧弱なUI/UXを持っていて、既存の<code>actionButton</code>を<code>input_task_button</code>に置き換える場合、これを補完するのに大きな助けになると思います。</p>
<p>今回の記事が参考になったかと思いますが、次の記事でまたお会いしましょう！</p>


</section><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/">CC BY-NC 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{kim2024,
  author = {Kim, Jinhwan},
  title = {Bslib: Input\_task\_button {소개}},
  date = {2024-03-30},
  url = {https://blog.zarathu.com/jp/posts/2024-03-30-input-task-button},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-kim2024" class="csl-entry quarto-appendix-citeas">
Kim, Jinhwan. 2024. <span>“Bslib: Input_task_button 소개.”</span> March
30, 2024. <a href="https://blog.zarathu.com/jp/posts/2024-03-30-input-task-button">https://blog.zarathu.com/jp/posts/2024-03-30-input-task-button</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>shiny</category>
  <category>bslib</category>
  <category>ux</category>
  <guid>https://blog.zarathu.com/jp/posts/2024-03-30-input-task-button/</guid>
  <pubDate>Fri, 29 Mar 2024 15:00:00 GMT</pubDate>
  <media:content url="https://blog.zarathu.com/jp/posts/2024-03-30-input-task-button/img/button.png" medium="image" type="image/png" height="88" width="144"/>
</item>
<item>
  <title>Process macro 소개</title>
  <dc:creator>Heeseok Choi</dc:creator>
  <link>https://blog.zarathu.com/jp/posts/2024-03-14-process-macro/</link>
  <description><![CDATA[ <!-- Google tag (gtag.js) --><script async="" src="https://www.googletagmanager.com/gtag/js?id=G-L0DYYSH9KM"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L0DYYSH9KM');
</script><section id="개요" class="level1"><h1>개요</h1>
<p>Process macro에 대해 알아보고 R에서 사용가능한 패키지를 소개합니다.</p>
</section><section id="process-macro" class="level1"><h1>Process macro</h1>
<p>Process macro는 회귀분석을 바탕으로 하는 매개효과, 조절효과 분석을 위한 도구입니다.</p>
<p>사회과학, 경영학, 보건학 등에서 광범위하게 직접효과, 간접효과, 상호작용 등을 확인하기 위해 쓰입니다.</p>
<section id="매개효과" class="level2"><h2 class="anchored" data-anchor-id="매개효과">매개효과</h2>
<p>매개효과 분석은 설명변수가 반응변수에 영향을 미치는 경로, 매커니즘을 확인하기 위한 분석방법입니다. 단순매개모형(4번 모델)은 다음과 같은 다이아그램으로 표현할 수 있습니다.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://blog.zarathu.com/jp/posts/2024-03-14-process-macro/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption>Figure.1</figcaption></figure>
</div>
</div>
</div>
<p>먼저 R에서 process macro를 사용하려면 패키지를 설치하거나 파일을 다운받아야 합니다. 패키지로는 가톨릭대학교 문건웅 교수님이 만든 <a href="https://github.com/cardiomoon/processR">processR</a>이라는 패키지를 다음과 같이 다운로드하고 불러올 수 있습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">devtools</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://remotes.r-lib.org/reference/install_github.html">install_github</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cardiomoon/processR"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">processR</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p><code>processR</code> 패키지를 사용하려면 <code>lavaan</code> 패키지가 필요합니다. 아래 코드로 다운로드하고 불러올 수 있습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/utils/install.packages.html">install.packages</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lavaan"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://lavaan.ugent.be">lavaan</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>아래 코드로 <code>processR</code> 패키지에서 지원하는 모델의 번호를 확인할 수 있습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">pmacro</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">no</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1]  0.0  1.0  2.0  3.0  4.0  4.2  5.0  6.0  6.3  6.4  7.0  8.0  9.0 10.0 11.0
[16] 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0 28.0 29.0
[31] 30.0 31.0 35.0 36.0 40.0 41.0 45.0 49.0 50.0 58.0 59.0 60.0 61.0 62.0 63.0
[46] 64.0 65.0 66.0 67.0 74.0 75.0 76.0 25.0 26.0 27.0 58.2  4.3</code></pre>
</div>
</div>
<p>직접 다운받아 사용하시려면 process macro를 개발한 Andrew F. Hayes가 제공하는 파일을 <a href="https://haskayne.ucalgary.ca/CCRAM/resource-hub">여기</a>서 내려받을 수 있습니다. <code>process.R</code>파일을 실행시키거나 분석을 진행할 R파일 상단에 <code>source("process.R")</code>코드를 실행하면 함수를 사용할 수 있습니다. <code>processR</code>패키지와 <code>process.R</code>파일은 서로 다른 도구이니 혼동하지 않도록 주의해야 합니다. 이 포스트에서 <code>processR</code> 패키지에서 제공하는 함수는 코드 상단에 <code># processR</code>로, <code>process.R</code>에서 제공하는 함수는 <code># process.R</code>로 주석을 달아놓겠습니다.</p>
<p>예시 데이터로 단순매개효과를 설명해보겠습니다.</p>
<p>미국의 1,338명의 의료비용에 대한 데이터입니다.</p>
<div class="cell">
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/utils/read.table.html">read.csv</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Medical_Cost.csv"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<thead><tr class="header">
<th style="text-align: right;">age</th>
<th style="text-align: left;">sex</th>
<th style="text-align: right;">bmi</th>
<th style="text-align: right;">children</th>
<th style="text-align: left;">smoker</th>
<th style="text-align: left;">region</th>
<th style="text-align: right;">charges</th>
</tr></thead>
<tbody>
<tr class="odd">
<td style="text-align: right;">19</td>
<td style="text-align: left;">female</td>
<td style="text-align: right;">27.900</td>
<td style="text-align: right;">0</td>
<td style="text-align: left;">yes</td>
<td style="text-align: left;">southwest</td>
<td style="text-align: right;">16884.924</td>
</tr>
<tr class="even">
<td style="text-align: right;">18</td>
<td style="text-align: left;">male</td>
<td style="text-align: right;">33.770</td>
<td style="text-align: right;">1</td>
<td style="text-align: left;">no</td>
<td style="text-align: left;">southeast</td>
<td style="text-align: right;">1725.552</td>
</tr>
<tr class="odd">
<td style="text-align: right;">28</td>
<td style="text-align: left;">male</td>
<td style="text-align: right;">33.000</td>
<td style="text-align: right;">3</td>
<td style="text-align: left;">no</td>
<td style="text-align: left;">southeast</td>
<td style="text-align: right;">4449.462</td>
</tr>
<tr class="even">
<td style="text-align: right;">33</td>
<td style="text-align: left;">male</td>
<td style="text-align: right;">22.705</td>
<td style="text-align: right;">0</td>
<td style="text-align: left;">no</td>
<td style="text-align: left;">northwest</td>
<td style="text-align: right;">21984.471</td>
</tr>
<tr class="odd">
<td style="text-align: right;">32</td>
<td style="text-align: left;">male</td>
<td style="text-align: right;">28.880</td>
<td style="text-align: right;">0</td>
<td style="text-align: left;">no</td>
<td style="text-align: left;">northwest</td>
<td style="text-align: right;">3866.855</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><code>process.R</code>의 <code>process()</code>함수를 실행해보겠습니다. 인자는 다음과 같습니다.</p>
<ul>
<li><p>data = 데이터셋</p></li>
<li><p>x = 설명변수</p></li>
<li><p>y = 반응변수</p></li>
<li><p>m = 매개변수</p></li>
<li><p>model = 모델번호</p></li>
<li><p>boot = 부트스트래핑 횟수</p></li>
<li><p>total = 총효과 출력(0이면 출력하지 않음)</p></li>
</ul>
<div class="cell">
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sex</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/ifelse.html">ifelse</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sex</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"male"</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">smoker</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/ifelse.html">ifelse</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">smoker</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yes"</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># process.R</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">process</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost</span>, x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"smoker"</span>, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"charges"</span>, m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bmi"</span>, model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, boot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
********************* PROCESS for R Version 4.3.1 ********************* 
 
           Written by Andrew F. Hayes, Ph.D.  www.afhayes.com              
   Documentation available in Hayes (2022). www.guilford.com/p/hayes3   
 
*********************************************************************** 
               
Model : 4      
    Y : charges
    X : smoker 
    M : bmi    

Sample size: 1338


*********************************************************************** 
Outcome Variable: bmi

Model Summary: 
          R      R-sq       MSE         F       df1       df2         p
     0.0038    0.0000   37.2152    0.0188    1.0000 1336.0000    0.8910

Model: 
             coeff        se         t         p      LLCI      ULCI
constant   30.6518    0.1870  163.8953    0.0000   30.2849   31.0187
smoker      0.0567    0.4133    0.1371    0.8910   -0.7541    0.8674

*********************************************************************** 
Outcome Variable: charges

Model Summary: 
          R      R-sq           MSE         F       df1       df2         p
     0.8111    0.6579 50238769.3992 1283.9234    2.0000 1335.0000    0.0000

Model: 
              coeff        se         t         p       LLCI       ULCI
constant -3459.0955  998.2795   -3.4651    0.0005 -5417.4628 -1500.7282
smoker   23593.9810  480.1805   49.1357    0.0000 22651.9905 24535.9715
bmi        388.0152   31.7875   12.2065    0.0000   325.6564   450.3741

************************ TOTAL EFFECT MODEL *************************** 
Outcome Variable: charges

Model Summary: 
          R      R-sq           MSE         F       df1       df2         p
     0.7873    0.6198 55804130.1996 2177.6149    1.0000 1336.0000    0.0000

Model: 
              coeff        se         t         p       LLCI       ULCI
constant  8434.2683  229.0142   36.8286    0.0000  7985.0017  8883.5348
smoker   23615.9635  506.0753   46.6649    0.0000 22623.1748 24608.7523

************ TOTAL, DIRECT, AND INDIRECT EFFECTS OF X ON Y ************

Total effect of X on Y:
      effect        se         t         p       LLCI       ULCI
  23615.9635  506.0753   46.6649    0.0000 22623.1748 24608.7523

Direct effect of X on Y:
      effect        se         t         p       LLCI       ULCI
  23593.9810  480.1805   49.1357    0.0000 22651.9905 24535.9715

Indirect effect(s) of X on Y:
       Effect
bmi   21.9825

******************** ANALYSIS NOTES AND ERRORS ************************ 

Level of confidence for all confidence intervals in output: 95</code></pre>
</div>
</div>
<p>우선 Figure.1에서 보았던 경로의 이름을 정하겠습니다.<br><img src="https://latex.codecogs.com/png.latex?X%20%E2%86%92%20M%20:%20a"><br><img src="https://latex.codecogs.com/png.latex?M%20%E2%86%92%20Y%20:%20b"><br><img src="https://latex.codecogs.com/png.latex?X%20%E2%86%92%20Y%20:%20c'"><br> 단순매개모형에서 설명변수가 0, 1로 이루어진 변수일때, <img src="https://latex.codecogs.com/png.latex?a%20=%20%5B%5Cbar%7BM%7D%7C(X%20=%201)%5D%20-%20%5B%5Cbar%7BM%7D%7C(X%20=%200)%5D%20=%200.0567">이며 X가 1일때 M의 평균과 X가 0일때 M의 평균의 차이와 같고 <code>lm(bmi ~ smoker, data = cost)</code>의 기울기와 같습니다.<br><img src="https://latex.codecogs.com/png.latex?b%20=%20%5B%5Chat%7BY%7D%7C(M%20=%20m,%20X%20=%20x)%5D%20-%20%5B%5Chat%7BY%7D%7C(M%20=%20m%20-%201,%20X%20=%20x)%5D%20=%20388.0152">이며 이는 <code>lm(charges ~ smoker + bmi, data = cost)</code>에서 bmi의 기울기와 같고 아래처럼 계산할 수도 있습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">model</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/stats/lm.html">lm</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">charges</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">bmi</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">smoker</span>, data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost.1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost.1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">bmi</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost.1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">bmi</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/stats/predict.html">predict</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">model</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/stats/predict.html">predict</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">model</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost.1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>       1 
388.0152 </code></pre>
</div>
</div>
<p><img src="https://latex.codecogs.com/png.latex?c'%20=%20%5B%5Chat%7BY%7D%7C(X%20=%20x,%20M%20=%20m)%5D%20-%20%5B%5Chat%7BY%7D%7C(X%20=%20x%20-%201,%20M%20=%20m)%5D%20=%2023593.9810">이며 <code>lm(charges ~ smoker + bmi, data = cost)</code>의 smoker의 기울기와 같고 다음과 같이 계산할 수도 있습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">model</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/stats/lm.html">lm</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">charges</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">bmi</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">smoker</span>, data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">smoke1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">smoke1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">smoker</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">smoke0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">smoke0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">smoker</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/stats/predict.html">predict</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">model</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">smoke1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/stats/predict.html">predict</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">model</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">smoke0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>       1 
23593.98 </code></pre>
</div>
</div>
<p>단순매개모형에서 <img src="https://latex.codecogs.com/png.latex?ab">를 간접효과, <img src="https://latex.codecogs.com/png.latex?c'">을 직접효과, 이 둘을 더한 값을 <img src="https://latex.codecogs.com/png.latex?c">(총효과)라고 하며 총효과는 <code>lm(charges ~ smoker, data = cost)</code>의 기울기와 같습니다.<br> 간접효과는 매개변수를 통했을 때 흡연자는 비흡연자보다 의료비용이 21.9825만큼 높다는 것을 의미하며, 직접효과는 매개변수가 고정되어있을 때 흡연자는 의료비용이 23593.981만큼 더 높다는 것을 의미합니다.<br> 이제 <code>processR</code> 패키지를 실행해보겠습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># processR</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">labels</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/list.html">list</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"smoker"</span>, Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"charges"</span>, M <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bmi"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">meanSummaryTable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">labels</span>, data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output-display">
<div class="tabwid">
<style>.cl-b97c7df0{}.cl-b973a036{font-family:'DejaVu Sans';font-size:12pt;font-weight:normal;font-style:italic;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-b973a040{font-family:'DejaVu Sans';font-size:12pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-b9778188{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:2pt;padding-top:2pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-b9778192{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:2pt;padding-top:2pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-b9779baa{width:2.5in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(237, 189, 62, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9779bb4{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(237, 189, 62, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9779bb5{width:2.5in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(237, 189, 62, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9779bbe{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(237, 189, 62, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9779bbf{width:2.5in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9779bc8{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9779bc9{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9779bca{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9779bd2{width:2.5in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9779bd3{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style>
<table data-quarto-disable-processing="true" class="cl-b97c7df0">
<thead>
<tr style="overflow-wrap:break-word;">
<th class="cl-b9779baa"><p class="cl-b9778188"><span class="cl-b973a036"></span></p></th>
<th class="cl-b9779bb4"><p class="cl-b9778188"><span class="cl-b973a036"> </span></p></th>
<th class="cl-b9779bb4"><p class="cl-b9778188"><span class="cl-b973a036">Y</span></p></th>
<th class="cl-b9779bb4"><p class="cl-b9778188"><span class="cl-b973a036">M</span></p></th>
<th class="cl-b9779bb4"><p class="cl-b9778188"><span class="cl-b973a036">Y</span></p></th>
</tr>
<tr style="overflow-wrap:break-word;">
<th class="cl-b9779bb5"><p class="cl-b9778188"><span class="cl-b973a036"></span></p></th>
<th class="cl-b9779bbe"><p class="cl-b9778188"><span class="cl-b973a036"></span></p></th>
<th class="cl-b9779bbe"><p class="cl-b9778188"><span class="cl-b973a036">charges</span></p></th>
<th class="cl-b9779bbe"><p class="cl-b9778188"><span class="cl-b973a036">bmi</span></p></th>
<th class="cl-b9779bbe"><p class="cl-b9778188"><span class="cl-b973a036">adjusted</span></p></th>
</tr>
</thead>
<tbody>
<tr style="overflow-wrap:break-word;">
<td class="cl-b9779bbf"><p class="cl-b9778192"><span class="cl-b973a040">smoker(X) = 0</span></p></td>
<td class="cl-b9779bc8"><p class="cl-b9778192"><span class="cl-b973a040">Mean</span></p></td>
<td class="cl-b9779bc8"><p class="cl-b9778192"><span class="cl-b973a040">8434.268</span></p></td>
<td class="cl-b9779bc8"><p class="cl-b9778192"><span class="cl-b973a040">30.652</span></p></td>
<td class="cl-b9779bc8"><p class="cl-b9778192"><span class="cl-b973a040">8438.77</span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-b9779bbf"><p class="cl-b9778192"><span class="cl-b973a040"></span></p></td>
<td class="cl-b9779bc8"><p class="cl-b9778192"><span class="cl-b973a040">SD</span></p></td>
<td class="cl-b9779bc8"><p class="cl-b9778192"><span class="cl-b973a040">5993.782</span></p></td>
<td class="cl-b9779bc8"><p class="cl-b9778192"><span class="cl-b973a040">6.043</span></p></td>
<td class="cl-b9779bc8"><p class="cl-b9778192"><span class="cl-b973a040"></span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-b9779bbf"><p class="cl-b9778192"><span class="cl-b973a040">smoker(X) = 1</span></p></td>
<td class="cl-b9779bc8"><p class="cl-b9778192"><span class="cl-b973a040">Mean</span></p></td>
<td class="cl-b9779bc8"><p class="cl-b9778192"><span class="cl-b973a040">32050.232</span></p></td>
<td class="cl-b9779bc8"><p class="cl-b9778192"><span class="cl-b973a040">30.708</span></p></td>
<td class="cl-b9779bc8"><p class="cl-b9778192"><span class="cl-b973a040">32032.751</span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-b9779bbf"><p class="cl-b9778192"><span class="cl-b973a040"></span></p></td>
<td class="cl-b9779bc9"><p class="cl-b9778192"><span class="cl-b973a040">SD</span></p></td>
<td class="cl-b9779bc9"><p class="cl-b9778192"><span class="cl-b973a040">11541.547</span></p></td>
<td class="cl-b9779bc9"><p class="cl-b9778192"><span class="cl-b973a040">6.319</span></p></td>
<td class="cl-b9779bc9"><p class="cl-b9778192"><span class="cl-b973a040"></span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-b9779bbf"><p class="cl-b9778192"><span class="cl-b973a040"></span></p></td>
<td class="cl-b9779bca"><p class="cl-b9778192"><span class="cl-b973a040">Mean</span></p></td>
<td class="cl-b9779bca"><p class="cl-b9778192"><span class="cl-b973a040">13270.422</span></p></td>
<td class="cl-b9779bca"><p class="cl-b9778192"><span class="cl-b973a040">30.663</span></p></td>
<td class="cl-b9779bca"><p class="cl-b9778192"><span class="cl-b973a040"></span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-b9779bd2"><p class="cl-b9778192"><span class="cl-b973a040"></span></p></td>
<td class="cl-b9779bd3"><p class="cl-b9778192"><span class="cl-b973a040">SD</span></p></td>
<td class="cl-b9779bd3"><p class="cl-b9778192"><span class="cl-b973a040">12110.011</span></p></td>
<td class="cl-b9779bd3"><p class="cl-b9778192"><span class="cl-b973a040">6.098</span></p></td>
<td class="cl-b9779bd3"><p class="cl-b9778192"><span class="cl-b973a040"></span></p></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<p>Adjusted mean은 <img src="https://latex.codecogs.com/png.latex?adjusted%5C;mean(%5Cbar%7BY%7D%5E*)%20=%20i_%7BY%7D%20+%20b%5Cbar%7BM%7D%20+%20c'X">로 계산할 수 있습니다. 설명변수가 0일때는 <img src="https://latex.codecogs.com/png.latex?%5Cbar%7BY%7D%5E*%20=%20-3459.10%20+%20388.02%20*%2030.6634%20+%2023593.98%20*%200">이고 설명변수가 1일때는 <img src="https://latex.codecogs.com/png.latex?%5Cbar%7BY%7D%5E*%20=%20-3459.10%20+%20388.02%20*%2030.6634%20+%2023593.98%20*%201">로 계산할 수 있습니다. 보정평균은 <img src="https://latex.codecogs.com/png.latex?X">일때 평균적인 <img src="https://latex.codecogs.com/png.latex?M">의 값을 가지는 사람은 보정평균만큼의 <img src="https://latex.codecogs.com/png.latex?Y">를 갖는다는 것을 의미합니다.</p>
<p>아래처럼 각 계수를 깔끔하게 출력하는 함수도 존재합니다.</p>
<div class="cell">
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># processR</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">modelsSummaryTable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">labels</span>, data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output-display">
<div class="tabwid">
<style>.cl-b9b76618{}.cl-b9aea3b6{font-family:'DejaVu Sans';font-size:12pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-b9aea3c0{font-family:'DejaVu Sans';font-size:12pt;font-weight:bold;font-style:italic;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-b9aea3c1{font-family:'DejaVu Sans';font-size:12pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-b9aea3c2{font-family:'DejaVu Sans';font-size:12pt;font-weight:normal;font-style:italic;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-b9aea3ca{font-family:'DejaVu Sans';font-size:7.2pt;font-weight:normal;font-style:italic;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;position: relative;top:3.6pt;}.cl-b9b23800{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-b9b2380a{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-b9b25006{width:0.3in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b25010{width:1.1in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b2501a{width:0.001in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b2501b{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b2501c{width:0.3in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(255, 255, 255, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b25024{width:1.1in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b25025{width:1.1in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b25026{width:0.001in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b2502e{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b2502f{width:0.001in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(255, 255, 255, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b25038{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b25039{width:0.3in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b2503a{width:1.1in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b25042{width:1.1in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b25043{width:0.001in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b25044{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b2504c{width:0.3in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(190, 190, 190, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b2504d{width:1.1in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(190, 190, 190, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b2504e{width:1.1in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(190, 190, 190, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b25056{width:0.001in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(190, 190, 190, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b25057{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(190, 190, 190, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b25058{width:0.3in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(190, 190, 190, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b25060{width:1.1in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(190, 190, 190, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b25061{width:0.001in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(190, 190, 190, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b25062{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(190, 190, 190, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b2506a{width:0.001in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b2506b{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b2506c{width:0.3in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b25074{width:1.1in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b25075{width:0.001in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9b2507e{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style>
<table data-quarto-disable-processing="true" class="cl-b9b76618">
<thead>
<tr style="overflow-wrap:break-word;">
<th class="cl-b9b25006"><p class="cl-b9b23800"><span class="cl-b9aea3b6"></span></p></th>
<th colspan="11" class="cl-b9b25010"><p class="cl-b9b23800"><span class="cl-b9aea3b6">Consequent</span></p></th>
</tr>
<tr style="overflow-wrap:break-word;">
<th class="cl-b9b2501c"><p class="cl-b9b23800"><span class="cl-b9aea3b6"></span></p></th>
<th class="cl-b9b25024"><p class="cl-b9b23800"><span class="cl-b9aea3b6"></span></p></th>
<th colspan="4" class="cl-b9b25025"><p class="cl-b9b23800"><span class="cl-b9aea3b6">bmi(M)</span></p></th>
<th class="cl-b9b25026"><p class="cl-b9b23800"><span class="cl-b9aea3b6"></span></p></th>
<th class="cl-b9b25024"><p class="cl-b9b23800"><span class="cl-b9aea3b6"></span></p></th>
<th colspan="4" class="cl-b9b2502e"><p class="cl-b9b23800"><span class="cl-b9aea3b6">charges(Y)</span></p></th>
</tr>
<tr style="overflow-wrap:break-word;">
<th class="cl-b9b2501c"><p class="cl-b9b23800"><span class="cl-b9aea3b6">Antecedent</span></p></th>
<th class="cl-b9b25024"><p class="cl-b9b23800"><span class="cl-b9aea3b6"></span></p></th>
<th class="cl-b9b25024"><p class="cl-b9b23800"><span class="cl-b9aea3c0">Coef</span></p></th>
<th class="cl-b9b25024"><p class="cl-b9b23800"><span class="cl-b9aea3c0">SE</span></p></th>
<th class="cl-b9b25024"><p class="cl-b9b23800"><span class="cl-b9aea3c0">t</span></p></th>
<th class="cl-b9b25024"><p class="cl-b9b23800"><span class="cl-b9aea3b6">p</span></p></th>
<th class="cl-b9b2502f"><p class="cl-b9b23800"><span class="cl-b9aea3b6"></span></p></th>
<th class="cl-b9b25024"><p class="cl-b9b23800"><span class="cl-b9aea3b6"></span></p></th>
<th class="cl-b9b25038"><p class="cl-b9b23800"><span class="cl-b9aea3c0">Coef</span></p></th>
<th class="cl-b9b25038"><p class="cl-b9b23800"><span class="cl-b9aea3c0">SE</span></p></th>
<th class="cl-b9b25038"><p class="cl-b9b23800"><span class="cl-b9aea3c0">t</span></p></th>
<th class="cl-b9b25038"><p class="cl-b9b23800"><span class="cl-b9aea3b6">p</span></p></th>
</tr>
</thead>
<tbody>
<tr style="overflow-wrap:break-word;">
<td class="cl-b9b25039"><p class="cl-b9b23800"><span class="cl-b9aea3c1">smoker(X)</span></p></td>
<td class="cl-b9b2503a"><p class="cl-b9b23800"><span class="cl-b9aea3c2">a</span><span class="cl-b9aea3ca"></span></p></td>
<td class="cl-b9b25042"><p class="cl-b9b2380a"><span class="cl-b9aea3c1">0.057</span></p></td>
<td class="cl-b9b25042"><p class="cl-b9b2380a"><span class="cl-b9aea3c1">0.413</span></p></td>
<td class="cl-b9b25042"><p class="cl-b9b2380a"><span class="cl-b9aea3c1">0.137</span></p></td>
<td class="cl-b9b25042"><p class="cl-b9b2380a"><span class="cl-b9aea3c1">.891</span></p></td>
<td class="cl-b9b25043"><p class="cl-b9b2380a"><span class="cl-b9aea3c1"></span></p></td>
<td class="cl-b9b2503a"><p class="cl-b9b23800"><span class="cl-b9aea3c2">c'</span><span class="cl-b9aea3ca"></span></p></td>
<td class="cl-b9b25044"><p class="cl-b9b2380a"><span class="cl-b9aea3c1">23593.981</span></p></td>
<td class="cl-b9b25044"><p class="cl-b9b2380a"><span class="cl-b9aea3c1">480.180</span></p></td>
<td class="cl-b9b25044"><p class="cl-b9b2380a"><span class="cl-b9aea3c1">49.136</span></p></td>
<td class="cl-b9b25044"><p class="cl-b9b2380a"><span class="cl-b9aea3c1">&lt;.001</span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-b9b25039"><p class="cl-b9b23800"><span class="cl-b9aea3c1">bmi(M)</span></p></td>
<td class="cl-b9b2503a"><p class="cl-b9b23800"><span class="cl-b9aea3c2"></span><span class="cl-b9aea3ca"></span></p></td>
<td class="cl-b9b25042"><p class="cl-b9b2380a"><span class="cl-b9aea3c1"></span></p></td>
<td class="cl-b9b25042"><p class="cl-b9b2380a"><span class="cl-b9aea3c1"></span></p></td>
<td class="cl-b9b25042"><p class="cl-b9b2380a"><span class="cl-b9aea3c1"></span></p></td>
<td class="cl-b9b25042"><p class="cl-b9b2380a"><span class="cl-b9aea3c1"></span></p></td>
<td class="cl-b9b25043"><p class="cl-b9b2380a"><span class="cl-b9aea3c1"></span></p></td>
<td class="cl-b9b2503a"><p class="cl-b9b23800"><span class="cl-b9aea3c2">b</span><span class="cl-b9aea3ca"></span></p></td>
<td class="cl-b9b25044"><p class="cl-b9b2380a"><span class="cl-b9aea3c1">388.015</span></p></td>
<td class="cl-b9b25044"><p class="cl-b9b2380a"><span class="cl-b9aea3c1">31.787</span></p></td>
<td class="cl-b9b25044"><p class="cl-b9b2380a"><span class="cl-b9aea3c1">12.207</span></p></td>
<td class="cl-b9b25044"><p class="cl-b9b2380a"><span class="cl-b9aea3c1">&lt;.001</span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-b9b2504c"><p class="cl-b9b23800"><span class="cl-b9aea3c1">Constant</span></p></td>
<td class="cl-b9b2504d"><p class="cl-b9b23800"><span class="cl-b9aea3c2">i</span><span class="cl-b9aea3ca">M</span></p></td>
<td class="cl-b9b2504e"><p class="cl-b9b2380a"><span class="cl-b9aea3c1">30.652</span></p></td>
<td class="cl-b9b2504e"><p class="cl-b9b2380a"><span class="cl-b9aea3c1">0.187</span></p></td>
<td class="cl-b9b2504e"><p class="cl-b9b2380a"><span class="cl-b9aea3c1">163.895</span></p></td>
<td class="cl-b9b2504e"><p class="cl-b9b2380a"><span class="cl-b9aea3c1">&lt;.001</span></p></td>
<td class="cl-b9b25056"><p class="cl-b9b2380a"><span class="cl-b9aea3c1"></span></p></td>
<td class="cl-b9b2504d"><p class="cl-b9b23800"><span class="cl-b9aea3c2">i</span><span class="cl-b9aea3ca">Y</span></p></td>
<td class="cl-b9b25057"><p class="cl-b9b2380a"><span class="cl-b9aea3c1">-3459.096</span></p></td>
<td class="cl-b9b25057"><p class="cl-b9b2380a"><span class="cl-b9aea3c1">998.279</span></p></td>
<td class="cl-b9b25057"><p class="cl-b9b2380a"><span class="cl-b9aea3c1">-3.465</span></p></td>
<td class="cl-b9b25057"><p class="cl-b9b2380a"><span class="cl-b9aea3c1">.001</span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-b9b25058"><p class="cl-b9b23800"><span class="cl-b9aea3c1">Observations</span></p></td>
<td class="cl-b9b25060"><p class="cl-b9b23800"><span class="cl-b9aea3c2"></span><span class="cl-b9aea3ca"></span></p></td>
<td colspan="4" class="cl-b9b25060"><p class="cl-b9b23800"><span class="cl-b9aea3c1">1338</span></p></td>
<td class="cl-b9b25061"><p class="cl-b9b23800"><span class="cl-b9aea3c1"></span></p></td>
<td class="cl-b9b25060"><p class="cl-b9b23800"><span class="cl-b9aea3c2"></span><span class="cl-b9aea3ca"></span></p></td>
<td colspan="4" class="cl-b9b25062"><p class="cl-b9b23800"><span class="cl-b9aea3c1">1338</span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-b9b25039"><p class="cl-b9b23800"><span class="cl-b9aea3c1">R2</span></p></td>
<td class="cl-b9b2503a"><p class="cl-b9b23800"><span class="cl-b9aea3c2"></span><span class="cl-b9aea3ca"></span></p></td>
<td colspan="4" class="cl-b9b2503a"><p class="cl-b9b23800"><span class="cl-b9aea3c1">0.000</span></p></td>
<td class="cl-b9b2506a"><p class="cl-b9b23800"><span class="cl-b9aea3c1"></span></p></td>
<td class="cl-b9b2503a"><p class="cl-b9b23800"><span class="cl-b9aea3c2"></span><span class="cl-b9aea3ca"></span></p></td>
<td colspan="4" class="cl-b9b2506b"><p class="cl-b9b23800"><span class="cl-b9aea3c1">0.658</span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-b9b25039"><p class="cl-b9b23800"><span class="cl-b9aea3c1">Adjusted R2</span></p></td>
<td class="cl-b9b2503a"><p class="cl-b9b23800"><span class="cl-b9aea3c2"></span><span class="cl-b9aea3ca"></span></p></td>
<td colspan="4" class="cl-b9b2503a"><p class="cl-b9b23800"><span class="cl-b9aea3c1">-0.001</span></p></td>
<td class="cl-b9b2506a"><p class="cl-b9b23800"><span class="cl-b9aea3c1"></span></p></td>
<td class="cl-b9b2503a"><p class="cl-b9b23800"><span class="cl-b9aea3c2"></span><span class="cl-b9aea3ca"></span></p></td>
<td colspan="4" class="cl-b9b2506b"><p class="cl-b9b23800"><span class="cl-b9aea3c1">0.657</span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-b9b25039"><p class="cl-b9b23800"><span class="cl-b9aea3c1">Residual SE</span></p></td>
<td class="cl-b9b2503a"><p class="cl-b9b23800"><span class="cl-b9aea3c2"></span><span class="cl-b9aea3ca"></span></p></td>
<td colspan="4" class="cl-b9b2503a"><p class="cl-b9b23800"><span class="cl-b9aea3c1">6.100 ( df = 1336)</span></p></td>
<td class="cl-b9b2506a"><p class="cl-b9b23800"><span class="cl-b9aea3c1"></span></p></td>
<td class="cl-b9b2503a"><p class="cl-b9b23800"><span class="cl-b9aea3c2"></span><span class="cl-b9aea3ca"></span></p></td>
<td colspan="4" class="cl-b9b2506b"><p class="cl-b9b23800"><span class="cl-b9aea3c1">7087.931 ( df = 1335)</span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-b9b2506c"><p class="cl-b9b23800"><span class="cl-b9aea3c1">F statistic</span></p></td>
<td class="cl-b9b25074"><p class="cl-b9b23800"><span class="cl-b9aea3c2"></span><span class="cl-b9aea3ca"></span></p></td>
<td colspan="4" class="cl-b9b25074"><p class="cl-b9b23800"><span class="cl-b9aea3c1">F(1,1336) = 0.019, p = .891</span></p></td>
<td class="cl-b9b25075"><p class="cl-b9b23800"><span class="cl-b9aea3c1"></span></p></td>
<td class="cl-b9b25074"><p class="cl-b9b23800"><span class="cl-b9aea3c2"></span><span class="cl-b9aea3ca"></span></p></td>
<td colspan="4" class="cl-b9b2507e"><p class="cl-b9b23800"><span class="cl-b9aea3c1">F(2,1335) = 1283.923, p &lt; .001</span></p></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<p>간접효과, 직접효과, 총효과를 다음 함수로 출력할 수 있습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># processR</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">model</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tripleEquation</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">labels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">semfit</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sem</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">model</span>, data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">medSummaryTable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">semfit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output-display">
<div class="tabwid">
<style>.cl-b9f1936a{}.cl-b9ea1284{font-family:'DejaVu Sans';font-size:12pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-b9ea128e{font-family:'DejaVu Sans';font-size:12pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-b9ed582c{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:2pt;padding-top:2pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-b9ed5836{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:2pt;padding-top:2pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-b9ed6dda{width:1.513in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9ed6de4{width:1.537in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9ed6de5{width:1.186in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9ed6de6{width:2.491in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9ed6dee{width:1.513in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9ed6def{width:1.537in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9ed6df8{width:1.186in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9ed6e02{width:2.491in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9ed6e03{width:1.513in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9ed6e04{width:1.537in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9ed6e0c{width:1.186in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9ed6e0d{width:2.491in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9ed6e16{width:1.513in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9ed6e17{width:1.537in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9ed6e20{width:1.186in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-b9ed6e21{width:2.491in;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style>
<table data-quarto-disable-processing="true" class="cl-b9f1936a">
<thead><tr style="overflow-wrap:break-word;">
<th class="cl-b9ed6dda"><p class="cl-b9ed582c"><span class="cl-b9ea1284">Effect</span></p></th>
<th class="cl-b9ed6de4"><p class="cl-b9ed582c"><span class="cl-b9ea1284">Equation</span></p></th>
<th class="cl-b9ed6de5"><p class="cl-b9ed582c"><span class="cl-b9ea1284">estimate</span></p></th>
<th class="cl-b9ed6de6"><p class="cl-b9ed582c"><span class="cl-b9ea1284">95% CI</span></p></th>
</tr></thead>
<tbody>
<tr style="overflow-wrap:break-word;">
<td class="cl-b9ed6dee"><p class="cl-b9ed582c"><span class="cl-b9ea128e">indirect</span></p></td>
<td class="cl-b9ed6def"><p class="cl-b9ed582c"><span class="cl-b9ea128e">(a)*(b)</span></p></td>
<td class="cl-b9ed6df8"><p class="cl-b9ed5836"><span class="cl-b9ea128e">21.983</span></p></td>
<td class="cl-b9ed6e02"><p class="cl-b9ed582c"><span class="cl-b9ea128e">(-292.098 to 336.063)</span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-b9ed6e03"><p class="cl-b9ed582c"><span class="cl-b9ea128e">direct</span></p></td>
<td class="cl-b9ed6e04"><p class="cl-b9ed582c"><span class="cl-b9ea128e">c</span></p></td>
<td class="cl-b9ed6e0c"><p class="cl-b9ed5836"><span class="cl-b9ea128e">23593.981</span></p></td>
<td class="cl-b9ed6e0d"><p class="cl-b9ed582c"><span class="cl-b9ea128e">(22653.900 to 24534.062)</span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-b9ed6e03"><p class="cl-b9ed582c"><span class="cl-b9ea128e">total</span></p></td>
<td class="cl-b9ed6e04"><p class="cl-b9ed582c"><span class="cl-b9ea128e">direct+indirect</span></p></td>
<td class="cl-b9ed6e0c"><p class="cl-b9ed5836"><span class="cl-b9ea128e">23615.964</span></p></td>
<td class="cl-b9ed6e0d"><p class="cl-b9ed582c"><span class="cl-b9ea128e">(22624.816 to 24607.111)</span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-b9ed6e16"><p class="cl-b9ed582c"><span class="cl-b9ea128e">prop.mediated</span></p></td>
<td class="cl-b9ed6e17"><p class="cl-b9ed582c"><span class="cl-b9ea128e">indirect/total</span></p></td>
<td class="cl-b9ed6e20"><p class="cl-b9ed5836"><span class="cl-b9ea128e">0.001</span></p></td>
<td class="cl-b9ed6e21"><p class="cl-b9ed582c"><span class="cl-b9ea128e">(-0.012 to 0.014)</span></p></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</section><section id="조절효과" class="level2"><h2 class="anchored" data-anchor-id="조절효과">조절효과</h2>
<p>조절효과는 설명변수가 반응변수에 미치는 영향이 다른 변수에 의해 변화될 때, 이 변화를 조절효과라고 하며, 이러한 영향을 주는 변수를 조절변수라고 합니다.</p>
<p>단순조절효과(1번모델)는 다음의 다이아그램으로 나타낼 수 있습니다.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://blog.zarathu.com/jp/posts/2024-03-14-process-macro/index_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption>Figure.2</figcaption></figure>
</div>
</div>
</div>
<p><code>process()</code>함수로 단순조절효과를 알아보겠습니다. <code>plot</code> 인자는 출력결과 하단에 테이블을 만드어줍니다.</p>
<div class="cell">
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># process.R</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">process</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost</span>, x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"smoker"</span>, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"charges"</span>, w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>, model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, plot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
********************* PROCESS for R Version 4.3.1 ********************* 
 
           Written by Andrew F. Hayes, Ph.D.  www.afhayes.com              
   Documentation available in Hayes (2022). www.guilford.com/p/hayes3   
 
*********************************************************************** 
               
Model : 1      
    Y : charges
    X : smoker 
    W : age    

Sample size: 1338


*********************************************************************** 
Outcome Variable: charges

Model Summary: 
          R      R-sq           MSE         F       df1       df2         p
     0.8495    0.7217 40903347.7298 1153.1995    3.0000 1334.0000    0.0000

Model: 
              coeff        se         t         p       LLCI       ULCI
constant -2091.4206  582.5654   -3.5900    0.0003 -3234.2647  -948.5764
smoker   22385.5487 1278.7311   17.5061    0.0000 19877.0057 24894.0917
age        267.2489   13.9285   19.1872    0.0000   239.9247   294.5731
Int_1       37.9887   31.0950    1.2217    0.2220   -23.0116    98.9890

Product terms key:
Int_1  :  smoker  x  age      

Test(s) of highest order unconditional interaction(s):
      R2-chng         F       df1       df2         p
X*W    0.0003    1.4925    1.0000 1334.0000    0.2220
----------
Focal predictor: smoker (X)
      Moderator: age (W)

Data for visualizing the conditional effect of the focal predictor:
     smoker       age    charges
     0.0000   22.0000  3788.0555
     1.0000   22.0000 27009.3554
     0.0000   39.0000  8331.2870
     1.0000   39.0000 32198.3946
     0.0000   56.0000 12874.5186
     1.0000   56.0000 37387.4338

******************** ANALYSIS NOTES AND ERRORS ************************ 

Level of confidence for all confidence intervals in output: 95</code></pre>
</div>
</div>
<p>단순조절효과의 계수는 <code>lm(charges ~ smoker + age + smoker * charges, data = cost)</code>의 계수와 동일합니다.</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Chat%7BY%7D%20=%20i_%7BY%7D%20+%20b_%7B1%7DX%20+%20b_%7B2%7DW%20+%20b_%7B3%7DXW">일때, <img src="https://latex.codecogs.com/png.latex?b_%7B1%7D%20=%2023385.55">, <img src="https://latex.codecogs.com/png.latex?b_%7B2%7D%20=%20267.25">, <img src="https://latex.codecogs.com/png.latex?b_%7B3%7D%20=%2037.99">이며 각 계수를 다음과 같은 의미를 가지고 있습니다.</p>
<ul>
<li><p><img src="https://latex.codecogs.com/png.latex?b_%7B1%7D%20=%20W">가 <img src="https://latex.codecogs.com/png.latex?0">일때 <img src="https://latex.codecogs.com/png.latex?X">가 <img src="https://latex.codecogs.com/png.latex?Y">에 미치는 조건부 효과이고 <img src="https://latex.codecogs.com/png.latex?X">가 <img src="https://latex.codecogs.com/png.latex?Y">에 미치는 조건부 효과는 <img src="https://latex.codecogs.com/png.latex?%5Ctheta_%7BX%E2%86%92Y%7D%20=%20b_%7B1%7D%20+%20b_%7B3%7DW">로 계산합니다.</p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?b_%7B2%7D%20=%20X">가 <img src="https://latex.codecogs.com/png.latex?0">일때 <img src="https://latex.codecogs.com/png.latex?W">가 <img src="https://latex.codecogs.com/png.latex?Y">에 미치는 조건부 효과이고 <img src="https://latex.codecogs.com/png.latex?W">가 <img src="https://latex.codecogs.com/png.latex?Y">에 미치는 조건부 효과는 <img src="https://latex.codecogs.com/png.latex?%5Ctheta_%7BW%E2%86%92Y%7D%20=%20b_%7B2%7D%20+%20b_%7B3%7DX">로 계산합니다.</p></li>
<li><p><img src="https://latex.codecogs.com/png.latex?b_%7B3%7D%20=%20W">가 한 단위 바뀔 때, <img src="https://latex.codecogs.com/png.latex?X">의 한 단위 변화가 <img src="https://latex.codecogs.com/png.latex?Y">에 영향을 미치는 정도의 차이입니다.</p></li>
</ul>
<p><code>proceeR</code> 패키지로 확인해보겠습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">labels</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/list.html">list</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"smoker"</span>, Y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"charges"</span>, W <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">model</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/stats/lm.html">lm</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">charges</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">smoker</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">age</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">smoker</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">age</span>, data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">cost</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># processR</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">m.summary</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">modelsSummary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/list.html">list</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">model</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">labels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">modelsSummaryTable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">m.summary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output-display">
<div class="tabwid">
<style>.cl-ba64d0a0{}.cl-ba5c94b2{font-family:'DejaVu Sans';font-size:12pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-ba5c94bc{font-family:'DejaVu Sans';font-size:12pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-ba5c94bd{font-family:'DejaVu Sans';font-size:12pt;font-weight:normal;font-style:italic;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-ba5c94c6{font-family:'DejaVu Sans';font-size:7.2pt;font-weight:normal;font-style:italic;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;position: relative;top:3.6pt;}.cl-ba601b96{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-ba601ba0{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-ba603270{width:0.3in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba603271{width:1.1in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba60327a{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 2pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba60327b{width:0.3in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(255, 255, 255, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba603284{width:1.1in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba603285{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba603286{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba60328e{width:0.3in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba60328f{width:1.1in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba603290{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba603298{width:0.3in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(190, 190, 190, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba603299{width:1.1in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(190, 190, 190, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba6032a2{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(190, 190, 190, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba6032a3{width:0.3in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(190, 190, 190, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba6032ac{width:1.1in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(190, 190, 190, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba6032ad{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(190, 190, 190, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba6032ae{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba6032b6{width:0.3in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba6032b7{width:1.1in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-ba6032b8{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style>
<table data-quarto-disable-processing="true" class="cl-ba64d0a0">
<thead>
<tr style="overflow-wrap:break-word;">
<th class="cl-ba603270"><p class="cl-ba601b96"><span class="cl-ba5c94b2"></span></p></th>
<th colspan="5" class="cl-ba603271"><p class="cl-ba601b96"><span class="cl-ba5c94b2">Consequent</span></p></th>
</tr>
<tr style="overflow-wrap:break-word;">
<th class="cl-ba60327b"><p class="cl-ba601b96"><span class="cl-ba5c94b2"></span></p></th>
<th class="cl-ba603284"><p class="cl-ba601b96"><span class="cl-ba5c94b2"></span></p></th>
<th colspan="4" class="cl-ba603285"><p class="cl-ba601b96"><span class="cl-ba5c94b2">charges(Y)</span></p></th>
</tr>
<tr style="overflow-wrap:break-word;">
<th class="cl-ba60327b"><p class="cl-ba601b96"><span class="cl-ba5c94b2">Antecedent</span></p></th>
<th class="cl-ba603284"><p class="cl-ba601b96"><span class="cl-ba5c94b2"></span></p></th>
<th class="cl-ba603286"><p class="cl-ba601b96"><span class="cl-ba5c94b2">Coef</span></p></th>
<th class="cl-ba603286"><p class="cl-ba601b96"><span class="cl-ba5c94b2">SE</span></p></th>
<th class="cl-ba603286"><p class="cl-ba601b96"><span class="cl-ba5c94b2">t</span></p></th>
<th class="cl-ba603286"><p class="cl-ba601b96"><span class="cl-ba5c94b2">p</span></p></th>
</tr>
</thead>
<tbody>
<tr style="overflow-wrap:break-word;">
<td class="cl-ba60328e"><p class="cl-ba601b96"><span class="cl-ba5c94bc">smoker(X)</span></p></td>
<td class="cl-ba60328f"><p class="cl-ba601b96"><span class="cl-ba5c94bd">c</span><span class="cl-ba5c94c6">1</span></p></td>
<td class="cl-ba603290"><p class="cl-ba601ba0"><span class="cl-ba5c94bc">22385.549</span></p></td>
<td class="cl-ba603290"><p class="cl-ba601ba0"><span class="cl-ba5c94bc">1278.731</span></p></td>
<td class="cl-ba603290"><p class="cl-ba601ba0"><span class="cl-ba5c94bc">17.506</span></p></td>
<td class="cl-ba603290"><p class="cl-ba601ba0"><span class="cl-ba5c94bc">&lt;.001</span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-ba60328e"><p class="cl-ba601b96"><span class="cl-ba5c94bc">age(W)</span></p></td>
<td class="cl-ba60328f"><p class="cl-ba601b96"><span class="cl-ba5c94bd">c</span><span class="cl-ba5c94c6">2</span></p></td>
<td class="cl-ba603290"><p class="cl-ba601ba0"><span class="cl-ba5c94bc">267.249</span></p></td>
<td class="cl-ba603290"><p class="cl-ba601ba0"><span class="cl-ba5c94bc">13.929</span></p></td>
<td class="cl-ba603290"><p class="cl-ba601ba0"><span class="cl-ba5c94bc">19.187</span></p></td>
<td class="cl-ba603290"><p class="cl-ba601ba0"><span class="cl-ba5c94bc">&lt;.001</span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-ba60328e"><p class="cl-ba601b96"><span class="cl-ba5c94bc">smoker:age(X:W)</span></p></td>
<td class="cl-ba60328f"><p class="cl-ba601b96"><span class="cl-ba5c94bd">c</span><span class="cl-ba5c94c6">3</span></p></td>
<td class="cl-ba603290"><p class="cl-ba601ba0"><span class="cl-ba5c94bc">37.989</span></p></td>
<td class="cl-ba603290"><p class="cl-ba601ba0"><span class="cl-ba5c94bc">31.095</span></p></td>
<td class="cl-ba603290"><p class="cl-ba601ba0"><span class="cl-ba5c94bc">1.222</span></p></td>
<td class="cl-ba603290"><p class="cl-ba601ba0"><span class="cl-ba5c94bc">.222</span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-ba603298"><p class="cl-ba601b96"><span class="cl-ba5c94bc">Constant</span></p></td>
<td class="cl-ba603299"><p class="cl-ba601b96"><span class="cl-ba5c94bd">i</span><span class="cl-ba5c94c6">Y</span></p></td>
<td class="cl-ba6032a2"><p class="cl-ba601ba0"><span class="cl-ba5c94bc">-2091.421</span></p></td>
<td class="cl-ba6032a2"><p class="cl-ba601ba0"><span class="cl-ba5c94bc">582.565</span></p></td>
<td class="cl-ba6032a2"><p class="cl-ba601ba0"><span class="cl-ba5c94bc">-3.590</span></p></td>
<td class="cl-ba6032a2"><p class="cl-ba601ba0"><span class="cl-ba5c94bc">&lt;.001</span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-ba6032a3"><p class="cl-ba601b96"><span class="cl-ba5c94bc">Observations</span></p></td>
<td class="cl-ba6032ac"><p class="cl-ba601b96"><span class="cl-ba5c94bd"></span><span class="cl-ba5c94c6"></span></p></td>
<td colspan="4" class="cl-ba6032ad"><p class="cl-ba601b96"><span class="cl-ba5c94bc">1338</span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-ba60328e"><p class="cl-ba601b96"><span class="cl-ba5c94bc">R2</span></p></td>
<td class="cl-ba60328f"><p class="cl-ba601b96"><span class="cl-ba5c94bd"></span><span class="cl-ba5c94c6"></span></p></td>
<td colspan="4" class="cl-ba6032ae"><p class="cl-ba601b96"><span class="cl-ba5c94bc">0.722</span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-ba60328e"><p class="cl-ba601b96"><span class="cl-ba5c94bc">Adjusted R2</span></p></td>
<td class="cl-ba60328f"><p class="cl-ba601b96"><span class="cl-ba5c94bd"></span><span class="cl-ba5c94c6"></span></p></td>
<td colspan="4" class="cl-ba6032ae"><p class="cl-ba601b96"><span class="cl-ba5c94bc">0.721</span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-ba60328e"><p class="cl-ba601b96"><span class="cl-ba5c94bc">Residual SE</span></p></td>
<td class="cl-ba60328f"><p class="cl-ba601b96"><span class="cl-ba5c94bd"></span><span class="cl-ba5c94c6"></span></p></td>
<td colspan="4" class="cl-ba6032ae"><p class="cl-ba601b96"><span class="cl-ba5c94bc">6395.573 ( df = 1334)</span></p></td>
</tr>
<tr style="overflow-wrap:break-word;">
<td class="cl-ba6032b6"><p class="cl-ba601b96"><span class="cl-ba5c94bc">F statistic</span></p></td>
<td class="cl-ba6032b7"><p class="cl-ba601b96"><span class="cl-ba5c94bd"></span><span class="cl-ba5c94c6"></span></p></td>
<td colspan="4" class="cl-ba6032b8"><p class="cl-ba601b96"><span class="cl-ba5c94bc">F(3,1334) = 1153.199, p &lt; .001</span></p></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</section></section><section id="마치며" class="level1"><h1>마치며</h1>
<p>이 포스트에서는 간단한 모델만을 다뤘기 때문에 사용하지 못한 함수나 개념이 많습니다.</p>
<p>추후에 기회가 된다면 포스트를 수정보완하여 좀 더 복잡한 모델을 소개할 수 있기를 바랍니다.</p>
<p>Process macro에 대해 좀 더 알고 싶으신 분들은 문재성 교수님의 <a href="https://github.com/cardiomoon/processRWorkshop">processRWorkshop</a> 또는 Andrew F. Hayes의 “Introduction to Mediation, Moderation, and Conditional Process Analysis”를 참고하시면 도움이 될 수 있습니다.</p>


</section><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{choi2024,
  author = {Choi, Heeseok},
  title = {Process Macro {소개}},
  date = {2024-03-14},
  url = {https://blog.zarathu.com/jp/posts/2024-03-14-process-macro},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-choi2024" class="csl-entry quarto-appendix-citeas">
Choi, Heeseok. 2024. <span>“Process Macro 소개.”</span> March 14, 2024.
<a href="https://blog.zarathu.com/jp/posts/2024-03-14-process-macro">https://blog.zarathu.com/jp/posts/2024-03-14-process-macro</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <guid>https://blog.zarathu.com/jp/posts/2024-03-14-process-macro/</guid>
  <pubDate>Wed, 13 Mar 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>shinylive 를 활용한 quarto 블로그에 shiny 추가 방법</title>
  <dc:creator>Jinhwan Kim</dc:creator>
  <link>https://blog.zarathu.com/jp/posts/2024-03-04-shinylive/</link>
  <description><![CDATA[ <!-- Google tag (gtag.js) --><script async="" src="https://www.googletagmanager.com/gtag/js?id=G-L0DYYSH9KM"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L0DYYSH9KM');
</script><section id="review-wasm" class="level2"><h2 class="anchored" data-anchor-id="review-wasm">Review wasm</h2>
<p>이전에 작성한 <a href="https://blog.zarathu.com/posts/2023-09-10-wasm2/" target="_blank">글</a>에서 별도의 서버 없이 작동하는 정적 페이지에서 어떻게 shiny application을 사용할 수 있는 방법을 소개한 적 있다.</p>
<p>이 방법의 핵심은 <strong>wasm</strong>이라는 기술로, 웹 브라우저에서 사용할 수 있게 변환 된 R과 Shiny 관련 라이브러리, 파일들을 불러오고 이를 활용하는 방법이었는데, wasm의 가장 큰 문제는 R 개발자들에게도 환경 설정 자체가 어렵다는 것이었다.</p>
<p>다행히 몇개월 정도의 시간이 지나고 이 환경 설정을 해결해주는 R 패키지가 나왔고, 이를 활용하여 정적 페이지에 shiny application을 추가하는 방법을 소개하고자 한다.</p>
</section><section id="shinylive" class="level2"><h2 class="anchored" data-anchor-id="shinylive">shinylive</h2>
<p>shinylive는 <a href="https://github.com/posit-dev/py-shinylive" target="_blank">python 버전</a>과 <a href="https://github.com/posit-dev/r-shinylive" target="_blank">r 버전</a>이 있으며, 이 글에서는 r 버전을 기준으로 소개한다.</p>
<p>shinylive는 웹 페이지 생성에 필요한 HTML, Javscript, CSS 등의 요소와 shiny 를 사용하기 위한 wasm 관련 파일들을 생성하는 일을 한다.</p>
<p>shinylive로 만든 예시는 <a href="https://shinylive.io/r/examples/" target="_blank">이 링크</a>에서 확인할 수 있다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2024-03-04-shinylive/img/shinylive.png" width="100%"></p>
<section id="shinylive-설치" class="level3"><h3 class="anchored" data-anchor-id="shinylive-설치">shinylive 설치</h3>
<p>shinylive는 CRAN에 올라가 있기도 하지만 최근 릴리즈 된 버전이 0.1.1인만큼 수시로 업데이트 될 수 있어 github의 최신 버전을 사용하는 것을 권장한다. 추가로 <code>pak</code>는 최근 posit에서 R 패키지를 설치하기 위해 권장하는 R 패키지로, 기존의 <code><a href="https://rdrr.io/r/utils/install.packages.html">install.packages()</a></code>, <code><a href="https://remotes.r-lib.org/reference/install_github.html">remotes::install_github()</a></code> 등의 함수를 대체할 수 있다.</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages("pak")</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pak</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://pak.r-lib.org/reference/pak.html">pak</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posit-dev/r-shinylive"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<div class="callout callout-style-default callout-tip callout-titled" data-appearnce="simple">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Version
</div>
</div>
<div class="callout-body-container callout-body">
<p>통상적으로 1.0 이전의 버전은 아직 개발 중인 버전이라고 생각해도 좋다.</p>
</div>
</div>
</section><section id="shinylive-사용방법" class="level3"><h3 class="anchored" data-anchor-id="shinylive-사용방법">shinylive 사용방법</h3>
<p>shinylive는 기존에 만든 shiny application에 wasm을 추가하는 것으로 생각할 수 있다. 즉, 먼저 shiny application을 만들어야 한다.</p>
<p>예시 실습을 위해 shiny에서 기본으로 제공하는 코드를 사용한다.(이는 Rstudio 콘솔에서 <code>shiny::runExample("01_hello")</code>를 입력해서 확인할 수도 있다.)</p>
<div class="cell">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://shiny.posit.co/">shiny</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/fluidPage.html">fluidPage</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/titlePanel.html">titlePanel</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello Shiny!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/sidebarLayout.html">sidebarLayout</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/sidebarLayout.html">sidebarPanel</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/sliderInput.html">sliderInput</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>        inputId <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bins"</span>,</span>
<span>        label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of bins:"</span>,</span>
<span>        min <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span>        max <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span>        value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span></span>
<span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/sidebarLayout.html">mainPanel</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/plotOutput.html">plotOutput</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>outputId <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"distPlot"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">distPlot</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/renderPlot.html">renderPlot</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">faithful</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">waiting</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">bins</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/seq.html">seq</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/Extremes.html">min</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/Extremes.html">max</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, length.out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">bins</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/graphics/hist.html">hist</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span>,</span>
<span>      breaks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">bins</span>, col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#75AADB"</span>, border <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>,</span>
<span>      xlab <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Waiting time to next eruption (in mins)"</span>,</span>
<span>      main <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Histogram of waiting times"</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/shinyApp.html">shinyApp</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ui <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span>, server <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>이 코드는 아래 그림과 같이 사용자의 입력에 반응하여 갯수만큼 histogram을 만드는 간단한 shiny application을 만들어 낸다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2024-03-04-shinylive/img/hello.png" width="100%"></p>
<p>이 코드를 shinylive를 사용해 정적인 페이지를 만드는 방법은 2가지가 있는데 하나는 별도의 웹페이지로 만들어내는 것이고, 다른 하나는 이 기술 블로그 같은 quarto 블로그 페이지에 내부 콘텐츠로 심는 것이다.</p>
<p>먼저 별도의 웹페이지를 만드는 방법은 다음과 같다.</p>
</section></section><section id="shinylive-via-web-page" class="level2"><h2 class="anchored" data-anchor-id="shinylive-via-web-page">shinylive via Web page</h2>
<p>별도의 정적 웹페이지에서 shiny를 제공하려면, 이전에 설치했던 shinylive 패키지를 사용하여 app.R을 웹페이지로 변환하는 과정이 필요하다.</p>
<p>내 문서(Documents)의 shinylive라는 폴더를 만들고 이 안에 app.R을 저장했을 때를 기준으로, <code>export</code> 함수의 사용 예시는 다음과 같다.</p>
<div class="cell">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># library(shinylive)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinylive</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://posit-dev.github.io/r-shinylive/reference/export.html">export</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'~/Documents/shinylive'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'~/Documents/shinylive_out'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>이 코드를 실행하면 shinylive와 동일한 위치, 즉 내 문서(Documents)에 shinylive_out이라는 폴더를 새롭게 만들고 그 안에 shinylive 패키지를 사용해 변환된 wasm 버전의 shiny 코드를 생성한다.</p>
<p>이 shinylive_out 폴더의 내용물을 확인해보면 다음과 같으며 이전 글에서 언급했던 webr, serviceworker 등이 포함되어 있는 것을 확인할 수 있다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2024-03-04-shinylive/img/out.png" width="100%"></p>
<p>조금 더 구체적으로 <code>export</code> 함수는 현재 R studio를 실행하고 있는 로컬 PC에서 shinylive 패키지의 파일들, 즉 shiny와 관련된 라이브러리 파일들을 out 디렉토리에 추가하는 역할을 한다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2024-03-04-shinylive/img/console.png" width="100%"></p>
<p>이제 이 폴더의 내용물을 기준으로 github page등을 만들면 shiny 를 제공하는 정적인 웹페이지를 제공할 수 있으며 그 결과는 아래의 명령어를 통해 미리 확인해 볼 수 있다.</p>
<div class="callout callout-style-default callout-tip callout-titled" data-appearnce="simple">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
github page
</div>
</div>
<div class="callout-body-container callout-body">
<p>깃허브 페이지 배포를 위해서는 이전에 작성했던 <a href="https://blog.zarathu.com/posts/2023-03-17-pkgdown/#%EC%9B%B9%EC%82%AC%EC%9D%B4%ED%8A%B8-%EB%B9%8C%EB%93%9C-%EB%B0%B0%ED%8F%AC" target="_blank"> pkgdown의 글 </a>을 참고하길 권장하며, 이를 위해 shinylive_out 대신 docs 폴더로 결과를 내보내길 권장한다.</p>
</div>
</div>
<div class="cell">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">httpuv</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/httpuv/man/runStaticServer.html">runStaticServer</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"~/Documents/shinylive_out"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
</section><section id="shinylive-in-quarto" class="level2"><h2 class="anchored" data-anchor-id="shinylive-in-quarto">shinylive in Quarto</h2>
<p>quarto 블로그에 shiny application을 추가하기 위해서는 별도의 extension을 사용해야한다. quarto extension은 quarto의 기능을 확장하는 별도의 패키지로, 기본 R에 R 패키지를 사용해 기능을 추가하는 것과 유사하다.</p>
<p>먼저 Rstudio의 터미널에서 다음 코드를 실행하여 quarto extenstion을 추가해야 한다.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> add quarto-ext/shinylive</span></code></pre></div>
<p>quarto 블로그에 shiny 를 심기 위해서 별도의 파일을 만들 필요는 없으며, <code>{shinylive-r}</code>이라는 코드 블록을 사용한다. 추가로 index.qmd의 yaml에 shinylive 를 설정해야만 한다.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filters</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb6-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> shinylive</span></span></code></pre></div>
<p>이후 <code>shinylive-r</code> 블록에 앞서 만든 app.R 의 내용을 작성한다.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb7-1"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```{shinylive-r}</span></span>
<span id="cb7-2"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| standalone: true</span></span>
<span id="cb7-3"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| viewerHeight: 800</span></span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">library(shiny)</span></span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">ui &lt;- fluidPage(</span></span>
<span id="cb7-8"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  titlePanel("Hello Shiny!"),</span></span>
<span id="cb7-9"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  sidebarLayout(</span></span>
<span id="cb7-10"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    sidebarPanel(</span></span>
<span id="cb7-11"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      sliderInput(</span></span>
<span id="cb7-12"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        inputId = "bins",</span></span>
<span id="cb7-13"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        label = "Number of bins:",</span></span>
<span id="cb7-14"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        min = 1,</span></span>
<span id="cb7-15"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        max = 50,</span></span>
<span id="cb7-16"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        value = 30</span></span>
<span id="cb7-17"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      )</span></span>
<span id="cb7-18"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    ),</span></span>
<span id="cb7-19"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    mainPanel(</span></span>
<span id="cb7-20"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      plotOutput(outputId = "distPlot")</span></span>
<span id="cb7-21"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    )</span></span>
<span id="cb7-22"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  )</span></span>
<span id="cb7-23"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb7-24"></span>
<span id="cb7-25"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">server &lt;- function(input, output) {</span></span>
<span id="cb7-26"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  output$distPlot &lt;- renderPlot({</span></span>
<span id="cb7-27"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    x &lt;- faithful$waiting</span></span>
<span id="cb7-28"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    bins &lt;- seq(min(x), max(x), length.out = input$bins + 1)</span></span>
<span id="cb7-29"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    hist(x,</span></span>
<span id="cb7-30"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">         breaks = bins, col = "#75AADB", border = "white",</span></span>
<span id="cb7-31"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">         xlab = "Waiting time to next eruption (in mins)",</span></span>
<span id="cb7-32"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">         main = "Histogram of waiting times"</span></span>
<span id="cb7-33"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    )</span></span>
<span id="cb7-34"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  })</span></span>
<span id="cb7-35"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-36"></span>
<span id="cb7-37"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">shinyApp(ui = ui, server = server)</span></span>
<span id="cb7-38"><span class="in" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">```</span></span></code></pre></div>
<p>아래는 실제 코드 블록이 어플리케이션으로 실행되는 결과이며 slider를 움직일때 반응하여 histogram을 그리는 것을 확인할 수 있다.</p>
<pre class="shinylive-r" data-engine="r"><code><a href="https://shiny.posit.co/">#| standalone: true
#| viewerHeight: 800

library(shiny)

ui &lt;- fluidPage(
  titlePanel("Hello Shiny!"),
  sidebarLayout(
    sidebarPanel(
      sliderInput(
        inputId = "bins",
        label = "Number of bins:",
        min = 1,
        max = 50,
        value = 30
      )
    ),
    mainPanel(
      plotOutput(outputId = "distPlot")
    )
  )
)

server &lt;- function(input, output) {
  output$distPlot &lt;- renderPlot({
    x &lt;- faithful$waiting
    bins &lt;- seq(min(x), max(x), length.out = input$bins + 1)
    hist(x,
         breaks = bins, col = "#75AADB", border = "white",
         xlab = "Waiting time to next eruption (in mins)",
         main = "Histogram of waiting times"
    )
  })
}

shinyApp(ui = ui, server = server)</a></code></pre>
</section><section id="정리" class="level2"><h2 class="anchored" data-anchor-id="정리">정리</h2>
<p>shinylive는 wasm을 활용해 깃허브 페이지 또는 quarto 블로그 같은 정적 페이지에서 shiny를 실행할 수 있게 하는 기능으로 각각 R 패키지와 quarto extension을 통해 사용할 수 있다.</p>
<p>물론 아직 나온지 1년이 되지 않은 기능인만큼 모든 기능이 제공되는 것은 아니며 정적 페이지를 사용하는 만큼 별도의 shiny server를 활용하는 것에 비하면 단점이 있기도 하다.</p>
<p>그러나 shiny 사용법이나 간단한 통계 분석을 소개하고, 이를 웹사이트에서 별도의 R 설치 없이도 바로 실습할 수 있다는 점에서 많이 사용되고 있으며 앞으로도 더 많은 기능이 추가될 것으로 기대된다.</p>
<p>이 블로그에 사용한 코드는 <a href="https://github.com/zarathucorp/blog/blob/master/posts/2024-03-04-shinylive/index.qmd" target="_blank">링크</a>에서 확인할 수 있다.</p>


</section><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/">CC BY-NC 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{kim2024,
  author = {Kim, Jinhwan},
  title = {Shinylive {를} {활용한} Quarto {블로그에} Shiny {추가}
    {방법}},
  date = {2024-03-05},
  url = {https://blog.zarathu.com/jp/posts/2024-03-04-shinylive},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-kim2024" class="csl-entry quarto-appendix-citeas">
Kim, Jinhwan. 2024. <span>“Shinylive 를 활용한 Quarto 블로그에 Shiny
추가 방법.”</span> March 5, 2024. <a href="https://blog.zarathu.com/jp/posts/2024-03-04-shinylive">https://blog.zarathu.com/jp/posts/2024-03-04-shinylive</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>shiny</category>
  <category>githubpage</category>
  <category>documentation</category>
  <category>website</category>
  <category>quarto</category>
  <guid>https://blog.zarathu.com/jp/posts/2024-03-04-shinylive/</guid>
  <pubDate>Mon, 04 Mar 2024 15:00:00 GMT</pubDate>
  <media:content url="https://blog.zarathu.com/jp/posts/2024-03-04-shinylive/img/logo.png" medium="image" type="image/png" height="66" width="144"/>
</item>
<item>
  <title>R&amp;D 시험인증 후기 및 개발, 행정 관련 느낀 점</title>
  <dc:creator>Changwoo Lim</dc:creator>
  <link>https://blog.zarathu.com/jp/posts/2024-01-23-RND-review/</link>
  <description><![CDATA[ 
<!-- Google tag (gtag.js) -->
<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-L0DYYSH9KM"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L0DYYSH9KM');
</script>





<p>공개SW 기반의 클라우드 통계 패키지SW 과제를 수행하면서, 외부 공인 기관에 시험인증을 의뢰해야 했습니다. 이와 관련된 후기, 또 전반적인 과제 관련 정보를 남깁니다. 당사로서는 처음 수행하는 R&amp;D였습니다. 저희 팀원들과 공동연구기관에서 다 같이 열심히 참여하였기에 잘 완수할 수 있었습니다. 그러나 그 과정에서 어쩔 수 없이 겪은 몇가지 어려움이 있었기에 이를 공유합니다.</p>
<section id="개발" class="level3">
<h3 class="anchored" data-anchor-id="개발">개발</h3>
<p>최초에 R&amp;D 연구개발계획서를 작성하면서, 계획서 표지(요약 페이지)와 하단에, 높은 TRL단계를 달성하겠다고 기재하였습니다. 또, 하단에는 외부 기관으로부터 인증을 받겠다고도 기재하였습니다.</p>
<p>이를 인지하지 못하고 있다, 2차년도 10/26에 최초로 위와 같이 기재한 것을 발견하였습니다. 관련하여 주관 기관에, 수행하지 않아도 될지에 대해 문의하였으나 외부 시험이 필요할 것이라는 회신을 받았습니다(사유: 최초 연구개발계획서에 기재되어 있고, TRL이 높은 단계인 점 등 고려)</p>
<p>그 후, 12/18에 현장 테스트가 완료되었으며, 12/27경 최종 보고서 초안를 받았습니다. 시험 준비부터 완료까지 거의 2달이 소요됩니다. 만약 이러한 준비가 되어 있지 않은 경우 마감이 아주 촉박해 제때 마무리 하지 못할 우려가 있습니다. 우리만 준비되면 되는 것이 아니고, 시험인증 업체측 일정도 고려해야 합니다. SW인증업체가 전국에 10개소 정도밖에 되지 않는 것으로 알고 있습니다. SW R&amp;D는 최소 100건은 될 것입니다. 모두가 시험인증을 거치는 것은 아니지만, 미리 준비해야 합니다. 제가 10월 말경 문의하였을때 이미 12월 말까지 일정이 있어 의뢰받지 못한다고 회신한 업체도 2~3개정도 있었습니다.</p>
<p>시험인증은 상당히 시간이 많이 소요되는 작업입니다. 가능하다면 피하는 것이 좋으나, 현재 우리 회사의 기술 수준을 볼 때 대부분 상용화/성숙 단계 R&amp;D일 것이므로 피하기 어려울 것입니다. 미리 준비해야 합니다.</p>
<section id="연구개발계획서-내용을-rd-참가-인원과-잘-공유하고-우리가-해야-할-것을-정리" class="level5">
<h5 class="anchored" data-anchor-id="연구개발계획서-내용을-rd-참가-인원과-잘-공유하고-우리가-해야-할-것을-정리">연구개발계획서 내용을 R&amp;D 참가 인원과 잘 공유하고, 우리가 해야 할 것을 정리</h5>
<p>처음 연구개발계획서를 가장 잘 쓰는 것이 중요하고, 그 R&amp;D 전 기간에 거쳐 참가할 사람과 공유하여 향후 어떠한 검증을 외부 업체에서 받아야 하는지를 사전에 알고 있는 것이 중요합니다. 그렇게 해야만 해당 부분의 유지보수를 조금 더 잘 할 수 있으리라 생각합니다.</p>
<p>현재는 연구개발계획서를 다 같이 보는 것이 아니라, 대표님이 작성하시고 그것을 개개인이 읽어 보는 형태로 진행되고 있습니다. 하지만 앞으로는 <strong>한 자리에 모여 다같이 연구개발계획서를 검토하고, 비현실적인 부분이 있는지, 또는 미리 준비해야 하는 부분이 있는지</strong>를 검토하고 가능하면 쉽게 수행할 수 있도록 향후 우려되는 요소를 미리 제거한 연구개발계획서를 작성하는 것이 중요하겠습니다.</p>
</section>
<section id="rfp에-기반한-목표치를-알맞게-설정" class="level5">
<h5 class="anchored" data-anchor-id="rfp에-기반한-목표치를-알맞게-설정">RFP에 기반한 목표치를 알맞게 설정</h5>
<p>RFP의 ‘국내 기업 최고치’, ‘해외 기업 최고치’를 준용하지 않는 경우(즉, 해당 값을 변경하거나 새로운 기준을 만드는 경우)에는 ’국내 기업 최고치’, ’해외 기업 최고치’가 해당 값인 것도 우리가 입증해야 함에 주의하여야 합니다(간사 문의사항). 다행히도, 이번 과제의 경우 RFP상에서 국내/해외 기업 최고치를 제시하였기에 우리가 입증 할 필요가 없었습니다. 시험인증이 불가하여 외부에 위탁하지는 않았지만, 예를 들어 ’분석 속도’에 정확한 기준을 적지 않은 채, 해외 기업을 100%라고 한 경우 매우 곤란한 경우가 생길 수도 있으리라 생각됩니다. 연구개발계획서를 작성 할 때에는 상대적인 수치가 아닌, <strong>절대치로 기재하는것이 좋겠으며</strong> 달성이 어렵더라도, <strong>입증 자체는 쉽게 할 수 있는 항목을 기재</strong>하는 것이 최종 결과보고서 작성에 유리합니다.</p>
</section>
<section id="다른-업체와의-업무-분담-명확화" class="level5">
<h5 class="anchored" data-anchor-id="다른-업체와의-업무-분담-명확화">다른 업체와의 업무 분담 명확화</h5>
<p>이번 시험인증에서는 다른 공동연구개발기관와 함께 시험인증을 진행했습니다. 그 공동연구개발기관 역시 시험인증에 대한 준비가 되지 않은 상황이었으며, 상대측 실무자 또한 경험이 많이 없어 미숙한 면이 있었다고 보입니다. 마찬가지로 연구개발계획서를 작성 할 때에 언제쯤, 어떻게 시험을 진행할 지, 각자 서류작업(페이퍼워크)의 분담은 어떻게 할 지 등을 미리 검토 할 필요가 있습니다. 그렇지 않으면 서로 소통이 되지 않아 일을 이중으로 하게 됩니다.</p>
<p>이번 시험인증의 경우 다른 공동연구개발기관에 요청한 서류 대부분을 사용하지 못하고 우리 회사측에서 새로 작성하였습니다. 주관기관으로 참여할 경우 대부분의 페이퍼워크를 우리가 부담해야 하니 미리 알고 있을 필요가 있습니다.</p>
</section>
<section id="사전에-검증-가능한-항목인지-공인인증-업체에-미리-확인" class="level5">
<h5 class="anchored" data-anchor-id="사전에-검증-가능한-항목인지-공인인증-업체에-미리-확인">사전에 검증 가능한 항목인지, 공인인증 업체에 미리 확인</h5>
<p>통계분석 시간 단축률 항목의 경우, 다른 상용 프로그램과의 비교가 불가능하다는 시험인증 업체의 회신을 받았습니다, 이는 최종 평가에서 분명히 마이너스 요소가 될 수 있는 사안입니다. 다음 연구개발계획서 작성 시에는, 평가 항목을 사전에 업체와 조율하여 평가가 가능한지를 파악한 후 이를 기재하는것이 바람직하리라 생각됩니다.</p>
</section>
<section id="개발-시-시험항목과-테스트-항목에-맞추어-개발" class="level5">
<h5 class="anchored" data-anchor-id="개발-시-시험항목과-테스트-항목에-맞추어-개발">개발 시 시험항목과 테스트 항목에 맞추어 개발</h5>
<p>기능을 개발 할 때에, 시험항목에 포함되는 개발 항목과, 시험 항목에 포함되지는 않지만 연구개발계획서에는 존재하는 항목이 있습니다. 시험인증을 하지 않아도 되는 항목의 경우 일단 구현만 하면 연구개발계획서를 어기지는 않은 반면, 시험인증을 해야 하는 항목의 경우 여러 번/여러 플랫폼에서 테스트를 할 필요가 있고, 기능 명세도 작성해야 합니다. 또 이러한 항목의 경우 코드에 <strong>주석 작업을 철저히 하여 추후 오류가 발생했을 때 쉽게 수정할 수 있어야</strong> 할 것입니다. 미리미리 해 두지 않으면 추후 유지보수가 굉장히 어려워, 시간이 2~3배 더 소요될 수 있습니다.</p>
</section>
<section id="양식-작성-시-스크린샷은-최대한-자세하게" class="level5">
<h5 class="anchored" data-anchor-id="양식-작성-시-스크린샷은-최대한-자세하게">양식 작성 시 스크린샷은 최대한 자세하게</h5>
<p>이번 시험인증을 진행한 업체를 포함해, 약 4개정도의 업체에서 견적을 받거나, 최소한 문의하여 양식을 작성했습니다. 공통적인(비슷한) 양식이 있는 것을 보니 정형화된 서류가 존재하는 듯 합니다.</p>
<p>이번에 수행한 업체의 경우, 해당 서류를 작성해서 제출했음에도 불구하고, 그 이후에 해당 서류의 내용을 바탕으로 전체적인 테스트를 수행한 후 보내달라고 하였습니다. 최초에 테스트 할 항목을 작성할 때, 미리 테스트를 겸하여 어떻게 작동되는지를 스크린샷으로 촬영 해 두면 간편하게 시험인증을 마무리 할 수 있습니다.</p>
</section>
<section id="테스트-도구의-도입" class="level5">
<h5 class="anchored" data-anchor-id="테스트-도구의-도입">테스트 도구의 도입</h5>
<p>아직 한번도 이런 도구를 사용해보진 못했지만, 이러한 도구의 필요성을 절실히 느꼈습니다. 예를 들어, statgarten의 ML 중 lightGBM 패키지가 업데이트 되어, 특정 버전을 지정하여 설치하도록 한 경우에는 다른 ML에 영향이 없는지 확인이 필요합니다. 어떤 dependency가 업데이트 되었을 때, 테스트 도구가 없다면 매번 모든 항목을 수동으로 테스트 해야 합니다. 이런 번거로움을 막고자 테스트 도구 도입을 검토 할 필요가 있습니다.</p>
</section>
</section>
<section id="행정" class="level3">
<h3 class="anchored" data-anchor-id="행정">행정</h3>
<section id="연구비는-인건비와-연구활동비-위주로-편성" class="level5">
<h5 class="anchored" data-anchor-id="연구비는-인건비와-연구활동비-위주로-편성">연구비는 인건비와 연구활동비 위주로 편성</h5>
<p>연구비로 회사에 필요한 비품을 구매하거나, 용역을 주는 것은 쉽지 않습니다, 이번 IITP에서 회계를 제가 담당할 때는 대부분 인건비와 식비였기에 예산 집행에 큰 어려움은 없었습니다. 하지만 그 후에, NIPA나 창업도약패키지 연구비 집행을 옆에서 지켜 본 결과, 사실상 인건비와 식사 이외에는 사용하지 말라는 의도라고 생각하게 되었습니다. 실물 재료가 필요한 다른 연구와는 달리, 우리는 SW개발업이기에 인건비가 가장 많은 비중을 차지하고, 최대한 인건비를 연구비로 계상하는 것이 중요할 것 같습니다. 만약 다른 항목(예: 장비 구매 등)이 꼭 필요하다면, “협약 초기”에 끝내는 것이 좋겠습니다.</p>
<p>2024년 1월 추가: 2023년 12월 28일부터 회의비 사용이 어려워졌습니다. 대부분 인건비로 처리가 필요합니다.</p>
</section>
<section id="간사와의-연락은-메일로" class="level5">
<h5 class="anchored" data-anchor-id="간사와의-연락은-메일로">간사와의 연락은 메일로</h5>
<p>출장 등으로 전화가 잘 되지 않을 뿐더러, 상대가 전화를 선호하지 않습니다. 한 명의 간사가 10개 이상의 사업을 관리하는 경우도 있기에 메일이 좋습니다. 또 추후 문제가 생겼을 때 우리가 대응하기 굉장히 껄끄러운 상대방입니다. 따라서 가능한 한 기록이 남는 메일로 연락을 주고받는것이 좋겠습니다.</p>
</section>
<section id="협약-변경은-한번에" class="level5">
<h5 class="anchored" data-anchor-id="협약-변경은-한번에">협약 변경은 한번에</h5>
<p>비교적 자유로웠던 IITP과제와는 달리, 현재 수행중인 타 과제는 협약 변경이 매우 번거롭습니다. 그 기관의 특성으로 보이나, 연구 분야를 보았을 때 우리가 추가로 R&amp;D를 수행한다면 그 기관 과제일 확률이 매우 높습니다. 앞에 언급 한 것처럼 최대한 최초 연구개발계획서에 구체적으로, 우리가 유리한 방향으로 작성하는것이 좋습니다.</p>
<p>또 위 기관의 경우 한번 협약 변경에 오랜 시일이 걸립니다. 지난 10월경 협약변경한 건은 약 1개월 걸렸으며, 그 과정에서 반려도 최소 5회 이상 당했습니다. 또, 과제 종료 시기(11월 이후?)가 되면, 원래는 협약변경 가능한 시기임에도 불구하고 협약변경을 잘 해주지 않으려 합니다. 이 점 감안하셔서, 하반기 진입 시 과제 상황을 한 번 체크하시는 것이 좋습니다.</p>
</section>
<section id="전문연구사업자" class="level5">
<h5 class="anchored" data-anchor-id="전문연구사업자">전문연구사업자</h5>
<p>전문연구사업자 자격이 있으므로 기존인력 인건비 계상이 가능합니다. 현재 수행하고 있는 R&amp;D의 주관기관은 거부하였는데 해당 법령 소관기관인 과기부 문의 결과 부처 상관없이 기존인력 인건비 계상이 가능하여야 합니다. 현재는 기존인력인건비 계상이 꼭 필요하지는 않았지만, 앞으로 필요시 과기부 문의 결과를 바탕으로 요청해보아야 할 것 같습니다.</p>
</section>
<section id="slack을-통한-계획서-공유는-지양" class="level5">
<h5 class="anchored" data-anchor-id="slack을-통한-계획서-공유는-지양">Slack을 통한 계획서 공유는 지양</h5>
<p>Slack으로 계획서를 공유하면 간편하지만, 버전 관리 문제가 발생합니다. 같은 파일에 각기 다른 내용이 추가되고, 이들을 합칠 수 없는 문제가 생깁니다. 그리 길지 않은 문서라면 대조하며 확인이 가능하지만, 백 페이지가 넘는 문서들은 그렇게 대조하는 것이 매우 고통스러운 작업일 것입니다. 가급적이면 버전 관리가 가능한 회사 드라이브를 통해 하는 것이 좋습니다.</p>
</section>
<section id="주관기관이-대부분의-일을-합니다" class="level5">
<h5 class="anchored" data-anchor-id="주관기관이-대부분의-일을-합니다">주관기관이 대부분의 일을 합니다</h5>
<p>만약 우리가 주관기관으로 참여하게 되면 대부분의 서류 작업을 우리가 해야 합니다. 각 기관별 예산/성과등은 각 기관에게 요청할 수 있지만, 대부분의 페이퍼워크를 우리가 해야 하므로 미리 준비해야 합니다.</p>
</section>
</section>
<section id="결론-요약" class="level3">
<h3 class="anchored" data-anchor-id="결론-요약">결론 요약</h3>
<ol type="1">
<li>과제 지원/시작 단계에서 다같이 모여 연구개발계획서와 (있는 경우) 과업지시서를 읽고 논의하자</li>
<li>개발 단계부터 체계를 갖추고, 테스트를 잘 수행하자</li>
<li>협약 관련 사항은 여름까지는 완료하고, 인건비 이외 지출항목은 가능하면 연초에 소진하자</li>
</ol>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{lim2024,
  author = {Lim, Changwoo},
  title = {R\&amp;D {시험인증} {후기} {및} {개발,} {행정} {관련} {느낀}
    {점}},
  date = {2024-01-23},
  url = {https://blog.zarathu.com/jp/posts/2024-01-23-RND-review},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-lim2024" class="csl-entry quarto-appendix-citeas">
Lim, Changwoo. 2024. <span>“R&amp;D 시험인증 후기 및 개발, 행정 관련
느낀 점.”</span> January 23, 2024. <a href="https://blog.zarathu.com/jp/posts/2024-01-23-RND-review">https://blog.zarathu.com/jp/posts/2024-01-23-RND-review</a>.
</div></div></section></div> ]]></description>
  <category>R&amp;D</category>
  <category>review</category>
  <category>IITP</category>
  <category>시험인증</category>
  <category>행정</category>
  <guid>https://blog.zarathu.com/jp/posts/2024-01-23-RND-review/</guid>
  <pubDate>Mon, 22 Jan 2024 15:00:00 GMT</pubDate>
</item>
<item>
  <title>RStudio Server에 2FA(OTP) 도입하기</title>
  <dc:creator>Changwoo Lim</dc:creator>
  <link>https://blog.zarathu.com/jp/posts/2024-01-05-RStudio-Server-2FA/</link>
  <description><![CDATA[ 
<!-- Google tag (gtag.js) -->
<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-L0DYYSH9KM"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L0DYYSH9KM');
</script>





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>OTP는 One Time Password의 약자로, 일회용 비밀번호를 뜻합니다. 고정된 비밀번호와 달리, 필요 할 때마다 발급되어 한 번만 사용할 수 있습니다. 대부분의 경우, 6자리 숫자가 30초마다 갱신되는 형태로, 휴대폰 어플리케이션이나 실물 OTP 생성기 등으로 발급합니다.</p>
<p>차라투에서는 여러 개의 RStudio Server를 구동하고 있습니다. 이 중 인턴십을 위해 사용하는 서버에 시범적으로 도입 해 보고자 하였고, 후기를 남깁니다.</p>
<p>본 게시글은 <a href="https://www.r-bloggers.com/2023/05/using-otp-one-time-passwords-in-rstudio-server-open-source/">R-bloggers 게시글</a>을 참고해 작성되었습니다.</p>
</section>
<section id="과정---서버-1" class="level2">
<h2 class="anchored" data-anchor-id="과정---서버-1">과정 - 서버 1</h2>
<p>OTP 도입을 위해서는 서버와 사용자의 설정이 필요합니다. 이 문단에서는 우선 서버측의 작업에 대해 다루겠습니다.</p>
<pre><code>apt-get update</code></pre>
<p>명령어를 통해 패키지를 최신화합니다. 그 후,</p>
<pre><code>apt-get install -y libpam-google-authenticator</code></pre>
<p>로 libpam-google-authenticator 패키지를 설치합니다.</p>
</section>
<section id="과정---사용자" class="level2">
<h2 class="anchored" data-anchor-id="과정---사용자">과정 - 사용자</h2>
<p>다음으로, 사용자 측에서 수행할 작업입니다.</p>
<ul>
<li>첫째로, 우선 RStudio Server에 로그인합니다.</li>
</ul>
<p><img src="https://blog.zarathu.com/jp/posts/2024-01-05-RStudio-Server-2FA/img/rstudiologin.png" class="img-fluid" width="300"></p>
<ul>
<li>둘째로, Terminal에서,</li>
</ul>
<pre><code>google-authenticator</code></pre>
<p>를 실행합니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2024-01-05-RStudio-Server-2FA/img/terminal_google_authenticator.png" class="img-fluid" width="500"></p>
<ul>
<li>셋째로, <code>y</code> 를 입력합니다.</li>
</ul>
<p><img src="https://blog.zarathu.com/jp/posts/2024-01-05-RStudio-Server-2FA/img/time based y.png" class="img-fluid" width="500"></p>
<ul>
<li>넷째로, 아래와 같은 QR코드와 secret key가 나타납니다.</li>
</ul>
<p><img src="https://blog.zarathu.com/jp/posts/2024-01-05-RStudio-Server-2FA/img/QR.png" class="img-fluid" width="200"></p>
<p>휴대폰의 “Google Authenticator”나, 또는 이와 유사한 OTP 지원 어플리케이션으로, 화면에 제시된 QR코드를 입력(촬영)하거나, 아래의 secret key를 OTP 어플리케이션에 등록합니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2024-01-05-RStudio-Server-2FA/img/코드추가.png" class="img-fluid" width="350"> <img src="https://blog.zarathu.com/jp/posts/2024-01-05-RStudio-Server-2FA/img/QR코드스캔.png" class="img-fluid" width="350"></p>
<ul>
<li>중요한 작업은 거의 끝났습니다. 간단한 설정을 수행합니다.</li>
</ul>
<ol type="a">
<li>관련 사항을 저장하는 옵션입니다. <code>y</code>로 설정합니다.</li>
</ol>
<p><img src="https://blog.zarathu.com/jp/posts/2024-01-05-RStudio-Server-2FA/img/misc1.png" class="img-fluid" width="550"></p>
<ol start="2" type="a">
<li>하나의 코드로 한 번만 로그인을 허용할지 결정하는 옵션입니다. <code>y</code>로 설정합니다.</li>
</ol>
<p><img src="https://blog.zarathu.com/jp/posts/2024-01-05-RStudio-Server-2FA/img/misc2.png" class="img-fluid" width="550"></p>
<ol start="3" type="a">
<li>기본적으로 현재의 코드, 이전 코드, 이후 코드의 3개의 코드로만 로그인이 허용됩니다. 이 옵션을 허용하면 현재의 코드, 앞 8개 코드, 뒤 8개 코드의 총 17개로 로그인이 가능하게 허용됩니다. 사용자와 서버의 시간 문제가 발생하면 <code>y</code>로 설정하면 되나, 현재는 필요 없어 <code>n</code>으로 설정했습니다.</li>
</ol>
<p><img src="https://blog.zarathu.com/jp/posts/2024-01-05-RStudio-Server-2FA/img/misc3.png" class="img-fluid" width="550"></p>
<ol start="4" type="a">
<li>30초에 3번만 로그인을 시도할 수 있도록 하는 옵션입니다. <code>y</code>로 설정합니다.</li>
</ol>
<p><img src="https://blog.zarathu.com/jp/posts/2024-01-05-RStudio-Server-2FA/img/misc4.png" class="img-fluid" width="550"></p>
</section>
<section id="과정---서버-2" class="level2">
<h2 class="anchored" data-anchor-id="과정---서버-2">과정 - 서버 2</h2>
<p>위 과정을 다 수행한 후, RStudio의 인증 프로파일을 수정하기 위하여 아래와 같이 서버 설정을 진행합니다.</p>
<p><code>vi /etc/pam.d/rstudio</code> 파일에,</p>
<pre><code>auth required pam_google_authenticator.so
@include common-account
@include common-session</code></pre>
<p>위 내용을 추가합니다.</p>
<p><code>vi /etc/rstudio/rserver.conf</code> 파일에,</p>
<pre><code># Server Configuration File
auth-pam-require-password-prompt=0</code></pre>
<p>위 내용을 추가합니다.</p>
<p>이렇게 설정한 후, RStudio Server 서비스를 재시작합니다.</p>
<p>우리 회사는 Docker Container 내에서 RStudio Server를 실행하고 있으므로, 아래와 같이 Docker Container를 재시작 하였습니다. 만약 다른 방법으로 사용하고 계신 경우, 적절한 방법으로 서비스를 재시작하시면 됩니다.</p>
<pre><code># 컨테이너명: internship
docker restart internship</code></pre>
<p>이제, 휴대폰 OTP에 표시된 6자리 숫자로 로그인이 가능합니다.</p>
</section>
<section id="마치며" class="level2">
<h2 class="anchored" data-anchor-id="마치며">마치며</h2>
<p>기존에는 정적인 비밀번호를 사용하고 있었지만, OTP를 통해 비밀번호를 계속 변경하는 효과를 누릴 수 있습니다. 우선 하나의 서버에만 적용하였지만, 사용성이 우수하다고 판명 될 경우 다른 서버에도 확대 적용 계획입니다.</p>
<p>RStudio Server를 사용하시는 분들께 도움이 되었으면 좋겠습니다.</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/">CC BY-NC 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{lim2024,
  author = {Lim, Changwoo},
  title = {RStudio {Server에} {2FA(OTP)} {도입하기}},
  date = {2024-01-05},
  url = {https://blog.zarathu.com/jp/posts/2024-01-05-RStudio-Server-2FA},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-lim2024" class="csl-entry quarto-appendix-citeas">
Lim, Changwoo. 2024. <span>“RStudio Server에 2FA(OTP) 도입하기.”</span>
January 5, 2024. <a href="https://blog.zarathu.com/jp/posts/2024-01-05-RStudio-Server-2FA">https://blog.zarathu.com/jp/posts/2024-01-05-RStudio-Server-2FA</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>rstudio server</category>
  <category>security</category>
  <guid>https://blog.zarathu.com/jp/posts/2024-01-05-RStudio-Server-2FA/</guid>
  <pubDate>Thu, 04 Jan 2024 15:00:00 GMT</pubDate>
  <media:content url="https://blog.zarathu.com/jp/posts/2024-01-05-RStudio-Server-2FA/img/Google Authenticator Logo.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Quarto Dashboard를 이용해 대시보드 개발하기</title>
  <dc:creator>Jinhwan Kim</dc:creator>
  <link>https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard/</link>
  <description><![CDATA[ <!-- Google tag (gtag.js) --><script async="" src="https://www.googletagmanager.com/gtag/js?id=G-L0DYYSH9KM"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L0DYYSH9KM');
</script><section id="개요" class="level2"><h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>Quarto는 R Markdown을 기반으로 하는 문서 작성 도구입니다.</p>
<p>R Markdown은 RStudio에서 제공하는 문서 작성 도구로, R 코드와 문서를 한 번에 작성할 수 있습니다.</p>
<p>Quarto는 R Markdown의 <a href="https://pkgs.rstudio.com/flexdashboard/">flexdashboard</a>의 역할을 이어가는 기능으로써, R Markdown의 장점을 그대로 가져오면서, R 뿐만 아니라 Python, Julia 등 다양한 언어를 지원합니다.</p>
<p>본 게시글은 <a href="https://quarto.org/docs/dashboards/">Quarto 공식 문서</a>를 참고해 작성되었습니다.</p>
</section><section id="quarto-dashboard-소개" class="level2"><h2 class="anchored" data-anchor-id="quarto-dashboard-소개">Quarto Dashboard 소개</h2>
<div class="callout callout-style-simple callout-warning callout-titled" title="Quarto Versione">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Quarto Versione
</div>
</div>
<div class="callout-body-container callout-body">
<p>Quarto Dashboard는 현재 개발 중인 기능으로, 1.4 버전 이상의 Quarto를 사용해야 합니다.</p>
</div>
</div>
<p>이번 글에서는 Quarto를 사용하여 <strong>Markdown</strong>과 <code>R</code>, <code>Python</code>, <code>Julia</code>등을 활용해 <strong>아래 이미지 같은</strong> 인터랙티브한 대시보드를 만드는 방법을 소개합니다.</p>
<p style="align:center">
<img src="https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard/img/dashboard.png" width="100%"></p>
<p>더 많은 예시는 <a href="https://quarto.org/docs/dashboards/examples/">링크</a>에서 확인 할 수 있습니다.</p>
<p>Quarto dashboard는 다양한 언어를 활용할 수 있기 때문에 이들로 부터 파생되는 <a href="https://plotly.com/python/">Plotly</a>, <a href="https://ipyleaflet.readthedocs.io/en/latest/">Leaflet</a>, <a href="https://quarto.org/docs/interactive/widgets/jupyter.html">Jupyter Widgets</a>, <a href="https://www.htmlwidgets.org/">Htmlwidgets</a>를 포함한 다양한 커스텀 위젯을 사용할 수 있습니다.</p>
<div class="callout callout-style-simple callout-tip callout-titled" title="Prerequisite">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Prerequisite
</div>
</div>
<div class="callout-body-container callout-body">
<p><a href="https://education.zarathu.com/day3/quartodocu.html">Quarto</a>와 <a href="https://blog.zarathu.com/posts/2019-01-03-rmarkdown/">Rmarkdown</a>에 대한 설명은 이전의 글과 자료를 참고하시길 바랍니다.</p>
</div>
</div>
</section><section id="대시보드의-구성" class="level2"><h2 class="anchored" data-anchor-id="대시보드의-구성">대시보드의 구성</h2>
<p>보통 대시보드의 구성은 아래 그림과 같이 5개의 영역으로 구분합니다.</p>
<p style="align:center">
<img src="https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard/img/layout.png" width="100%"></p>
<ul>
<li>Main: 대시보드에서 주요 지표를 포함한 내용을 표현하는 공간입니다.</li>
<li>Header / Footer : 대시보드에 대한 일반적인 메타 정보를 소개합니다.</li>
<li>Navigator: 대시보드가 여러 개의 내용을 담고 있어 main을 구분해야하는 경우 각 페이지를 구분짓는 역할을 합니다.</li>
<li>Side: 대시보드의 내용을 조절하는 역할을 합니다.</li>
</ul>
<p>즉, 위의 예시에서 보여진 <code>Labor and Delivery Dashboard</code>는 아래와 같이 영역을 구분해볼 수 있습니다.</p>
<p style="align:center">
<img src="https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard/img/layout2.png" width="100%"></p>
</section><section id="대시보드-만들기" class="level2"><h2 class="anchored" data-anchor-id="대시보드-만들기">대시보드 만들기</h2>
<p>qmd 파일에서 (이후 배포를 고려하면 파일명은 <code>index.qmd</code>를 권장합니다.)</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> dashboard</span></span>
<span id="cb1-3"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span></code></pre></div>
<p>를 추가하여 quarto dashboard를 만들 수 있습니다.</p>
<p>Quarto dashboard에서 반드시 알아야 하는 컨셉은 3가지이며 하나씩 소개하면더 대시보드를 만들어가겠습니다.</p>
<ol type="1">
<li>카드</li>
<li>대시보드 내부 요소 배치 (레이아웃)</li>
<li>대시보드 구성 (페이지)</li>
</ol>
<section id="카드" class="level3"><h3 class="anchored" data-anchor-id="카드">카드</h3>
<p><code>카드</code>는 대시보드의 Main을 구성하는 <strong>그래프나 테이블, 값등을 포함하는 하나의 단위</strong>입니다.</p>
<p>quarto에서는 다음과 같이 사용합니다.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:::</span> {.card}</span>
<span id="cb2-2">This text will be displayed within a card</span>
<span id="cb2-3"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:::</span></span></code></pre></div>
<p>추가로</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">```{r}</span>
<span id="cb3-2">...</span>
<span id="cb3-3">```</span></code></pre></div>
<p>를 사용하는 기본 코드 블록은 Dashboard format에서 자동으로 카드로 변경됩니다.</p>
<p>이때 카드에 사용할 수 있는 주요 옵션은 아래와 같습니다.</p>
<ul>
<li>
<code>title</code>: 카드의 제목</li>
<li>
<code>expandable</code>: 카드를 접을 수 있을지의 여부</li>
<li>
<code>output</code>: 결과를 출력할지 여부</li>
<li>
<code>layout-ncol</code>: 카드 내용을 구분할 column의 개수 (<code>layout-nrow</code>)</li>
</ul>
<p>이 외에 기본 코드블록을 사용하기 때문에 코드 블록의 <a href="https://quarto.org/docs/output-formats/html-code.html">옵션</a>들을 사용 가능합니다.</p>
<p>이제 카드를 qmd에 2개 추가해보겠습니다.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">```{r}</span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| echo: false</span></span>
<span id="cb4-3">library(ggplot2)</span>
<span id="cb4-4">```</span>
<span id="cb4-5"></span>
<span id="cb4-6">```{r}</span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| title: "Card 1"</span></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| layout-ncol: 2</span></span>
<span id="cb4-9">mtcars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-10">  ggplot(aes(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mpg, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> wt)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-11">  geom_point()</span>
<span id="cb4-12"></span>
<span id="cb4-13">mtcars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-14">  ggplot(aes(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mpg, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> qsec)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-15">  geom_point()</span>
<span id="cb4-16">```</span>
<span id="cb4-17"></span>
<span id="cb4-18">```{r}</span>
<span id="cb4-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| title: "Card 2"</span></span>
<span id="cb4-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| output: false</span></span>
<span id="cb4-21">mtcars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-22">  ggplot(aes(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mpg, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vs)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-23">  geom_point()</span>
<span id="cb4-24">```</span>
<span id="cb4-25"></span>
<span id="cb4-26">```{r}</span>
<span id="cb4-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| title: "Card 3"</span></span>
<span id="cb4-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| expandable: false</span></span>
<span id="cb4-29">mtcars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-30">  ggplot(aes(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mpg, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vs)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-31">  geom_point()</span>
<span id="cb4-32">```</span></code></pre></div>
<p>위 코드의 실행결과는 아래 그림처럼 2개의 카드를 만들어냅니다. (2번째는 <code>output:false</code>)</p>
<p style="align:center">
<img src="https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard/img/card.png" width="100%"></p>
</section><section id="레이아웃" class="level3"><h3 class="anchored" data-anchor-id="레이아웃">레이아웃</h3>
<p>대시보드의 레이아웃은 특별한 설정을 하지 않으면 (위 예시처럼) 1개의 카드가 1개의 행으로 배치됩니다.</p>
<p>그런데 <code>## Row</code> 태그를 사용하면 <code>## Row</code> 태그 아래에 있는 카드들을 1개의 행에 배치할 수 있습니다.</p>
<p>(마찬가지로 별도의 설정을 하지 않으면 <code>Column</code>에 같은 크기로 배치됩니다)</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Row {height=70%}</span></span>
<span id="cb5-2"></span>
<span id="cb5-3">:::{.card}</span>
<span id="cb5-4">Card <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb5-5">:::</span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Row {height=30%}</span></span>
<span id="cb5-8"></span>
<span id="cb5-9">:::{.card}</span>
<span id="cb5-10">Card <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb5-11">:::</span>
<span id="cb5-12"></span>
<span id="cb5-13">:::{.card}</span>
<span id="cb5-14">Card <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb5-15">:::</span></code></pre></div>
<p style="align:center">
<img src="https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard/img/card2.png" width="100%"></p>
<p>추가로, <code>Row</code>로 먼저 행을 구분 한뒤, <code>Column</code>을 사용해 디테일한 배치도 가능합니다.</p>
<p>이때 Column은 <code>### Column</code>으로 <code>## Row</code>안에만 사용할 수 있습니다.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Row {height=70%}</span></span>
<span id="cb6-2"></span>
<span id="cb6-3">:::{.card}</span>
<span id="cb6-4">Card <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb6-5">:::</span>
<span id="cb6-6"></span>
<span id="cb6-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Row {height=30%}</span></span>
<span id="cb6-8"></span>
<span id="cb6-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">### Column {width=40%}</span></span>
<span id="cb6-10">:::{.card}</span>
<span id="cb6-11">Card <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb6-12">:::</span>
<span id="cb6-13"></span>
<span id="cb6-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">### Column {width=60%}</span></span>
<span id="cb6-15">:::{.card}</span>
<span id="cb6-16">Card <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb6-17">:::</span></code></pre></div>
<p style="align:center">
<img src="https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard/img/card3.png" width="100%"></p>
<div class="callout callout-style-simple callout-tip callout-titled" title="Scroll">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Scroll
</div>
</div>
<div class="callout-body-container callout-body">
<p>별 다른 설정을 하지 않으면 각 Row에 배치된 요소의 높이들의 합이 100%에 맞추어 크기가 일괄적으로 조절되지만, <strong>Scrolling</strong> 옵션을 사용하여 요소의 원래 크기를 유지하며 화면이 스크롤 되게 변경할 수 있습니다.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb7-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dashboard</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb7-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scrolling</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span></code></pre></div>
</div>
</div>
</section><section id="tabset" class="level3"><h3 class="anchored" data-anchor-id="tabset">Tabset</h3>
<p>카드를 행과 열로 배치하는 것 외에도, <code>Tabset</code>을 사용하여 카드를 탭으로 구분할 수 있습니다.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Row {.tabset}</span></span></code></pre></div>
<p style="align:center">
<img src="https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard/img/tabset1.png" width="49%"><img src="https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard/img/tabset2.png" width="49%"></p>
</section><section id="페이지" class="level3"><h3 class="anchored" data-anchor-id="페이지">페이지</h3>
<p>대시보드에 여러 요소들을 담아야 한다면 별도의 페이지로 구분하여 만들 수 있습니다.</p>
<p>이때 페이지는 <code>#</code> 태그를 사용하고, yaml에 “title”을 설정해야합니다.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb9-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dashboard"</span></span>
<span id="cb9-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> dashboard</span></span>
<span id="cb9-4"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span></code></pre></div>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Page A</span></span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Row {height=70%}</span></span>
<span id="cb10-4"></span>
<span id="cb10-5">:::{.card}</span>
<span id="cb10-6">Card <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb10-7">:::</span>
<span id="cb10-8"></span>
<span id="cb10-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Row {height=30%}</span></span>
<span id="cb10-10"></span>
<span id="cb10-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">### Column {width=40%}</span></span>
<span id="cb10-12">:::{.card}</span>
<span id="cb10-13">Card <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb10-14">:::</span>
<span id="cb10-15"></span>
<span id="cb10-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">### Column {width=60%}</span></span>
<span id="cb10-17">:::{.card}</span>
<span id="cb10-18">Card <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb10-19">:::</span>
<span id="cb10-20"></span>
<span id="cb10-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Page B</span></span>
<span id="cb10-22"></span>
<span id="cb10-23">:::{.card}</span>
<span id="cb10-24">Card <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb10-25">:::</span></code></pre></div>
<p style="align:center">
<img src="https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard/img/card4.png" width="49%"><img src="https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard/img/card5.png" width="49%"></p>
<p>이처럼 title을 설정하면 Header가 생성되며 Page 가 존재한다면 Navigation 역할도 같이 수행합니다.</p>
</section><section id="header" class="level3"><h3 class="anchored" data-anchor-id="header">Header</h3>
<p>Header에서는 <code>title</code> 외에 <code>author</code>를 사용해 일종의 “subtitle” 역할을 할 수 있습니다. 추가로 <code>logo</code>를 사용하여 대시보드의 로고를 설정하거나, 외부 링크나 자료로 연동할 수 있는 <code>nav-buttons</code>도 사용가능합니다.</p>
<p>네비게이션 버튼을 커스텀으로 제작하는 것에 대해서는 설명하지 않고 <a href="https://quarto.org/docs/reference/projects/websites.html#nav-items">공식문서의 링크</a>로 대체합니다.</p>
<div class="callout callout-style-simple callout-warning callout-titled" title="Quarto Versione">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Quarto Versione
</div>
</div>
<div class="callout-body-container callout-body">
<p>Quarto 1.4.455 버전을 기준으로, 네비게이션 버튼은 버그로 아직 작동하지 않습니다.</p>
</div>
</div>
</section><section id="sidebar" class="level3"><h3 class="anchored" data-anchor-id="sidebar">Sidebar</h3>
<p>Sidebar는 <code>sidebar</code> 태그를 사용하여 만들 수 있으며 특정 페이지에 종속되지 않습니다.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># {.sidebar}</span></span>
<span id="cb11-2"></span>
<span id="cb11-3">Sidebar content </span></code></pre></div>
</div>
<p>로고와 sidebar를 설정하고 난 대시보드의 결과는 다음과 같습니다.</p>
<p style="align:center">
<img src="https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard/img/sidebar.png" width="100%"></p>
</section></section><section id="대시보드-채우기" class="level2"><h2 class="anchored" data-anchor-id="대시보드-채우기">대시보드 채우기</h2>
<p>대시보드에 들어갈 수 있는 내용은 주로 <code>r</code>로 만든 결과물이지만, 다른 형태의 요소들도 활용할 수 있습니다.</p>
<section id="테이블" class="level3"><h3 class="anchored" data-anchor-id="테이블">테이블</h3>
<p>여러 옵션이 있으며, <code>kable</code>, <code>DT</code>, <code>reactable</code> 정도가 사용됩니다.</p>
<div class="cell">
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">knitr</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/knitr/man/kable.html">kable</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">mtcars</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># kable</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DT</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/DT/man/datatable.html">datatable</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">mtcars</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># DT</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactable</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://glin.github.io/reactable/reference/reactable.html">reactable</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">mtcars</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reactable</span></span></code></pre></div>
</div>
<p style="align:center">
<img src="https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard/img/table.png" width="100%"></p>
</section><section id="value-box" class="level3"><h3 class="anchored" data-anchor-id="value-box">Value Box</h3>
<p>Quarto 대시보드에서만 사용할 수 있는 “지표를 표현하기 위한” 특별한 방법입니다.</p>
<p>아래 예시처럼 <code>{.valuebox}</code> 코드로 사용할 수 있습니다.</p>
<p>옵션으로 <strong>색상</strong>은 <code>primary</code>, <code>secondary</code>, <code>success</code>, <code>danger</code>, <code>warning</code>, <code>info</code>, <code>light</code>, <code>dark</code>를 사용할 수 있으며, 사용 가능한 (bootstrap) <strong>아이콘</strong>의 종류는 <a href="https://icons.getbootstrap.com/">링크</a>에서 확인 가능합니다.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:::</span> {.valuebox icon<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pencil"</span> color<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>primary}</span>
<span id="cb13-2">Articles per day</span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r articles</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span></span>
<span id="cb13-5"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:::</span></span></code></pre></div>
</div>
<p style="align:center">
<img src="https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard/img/valuebox.png" width="100%"></p>
</section><section id="theme" class="level3"><h3 class="anchored" data-anchor-id="theme">Theme</h3>
<p>다른 Quarto 기능들과 마찬가지로 Quarto Dashboard도 yaml에서 사용되어 색상과 스타일을 꾸밀 수 있는 Theme 기능을 제공합니다.</p>
<p>기본 값은 cosmo이고, 가능한 값의 목록은 <a href="https://bootswatch.com/">링크</a>에서 확인 가능합니다.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb14-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb14-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dashboard</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb14-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">logo</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Zarathu.png</span></span>
<span id="cb14-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> sandstone</span></span>
<span id="cb14-6"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">---</span></span></code></pre></div>
<p style="align:center">
<img src="https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard/img/theme.png" width="100%"></p>
<div class="callout callout-style-simple callout-tip callout-titled" title="대시보드 게시하기">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
대시보드 게시하기
</div>
</div>
<div class="callout-body-container callout-body">
<p>Quarto로 만든 Dashboard는 Quarto pub, Github page, Posit connect, Netlify 등의 서비스를 활용하여 공유할 수 있습니다.</p>
<p>이 글에서는 다루지 않으며, 차라투의 Quarto <a href="https://education.zarathu.com/day3/quartodocu.html">교육자료</a> 17페이지를 참고하시길 바랍니다.</p>
</div>
</div>
</section></section><section id="다른-대시보드-툴과-quarto-dashboard의-차이" class="level2"><h2 class="anchored" data-anchor-id="다른-대시보드-툴과-quarto-dashboard의-차이">다른 대시보드 툴과 Quarto Dashboard의 차이</h2>
<p style="align:center">
<img src="https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard/img/figure.png" width="100%"></p>
<p><code>Quarto Dashboard</code>는 <code>Tableau</code>, <code>Power BI</code>, <code>Shiny</code>나 <code>Streamlit</code>과 같은 대시보드를 만들 수 있는 도구와 비교될 수 있습니다.</p>
<p>제일 먼저 대시보드 사용에 필요한 비용입니다. 즉 <code>Tableau</code>, <code>Power BI</code>등 상용 서비스는 <strong>클릭</strong>으로 쉽게 만들 수 있지만 사용하기 위해 비용이 발생합니다.</p>
<p>한편 <code>Quarto Dashboard</code>는 별도의 비용은 없지만, 개발을 통해 대시보드를 만들어야 합니다.</p>
<p>두번째로는 대시보드의 내용이 변하는 가의 여부입니다.</p>
<p>즉 사용자의 선택 값에 따라 값이 <strong>동적</strong>으로 바뀌어야 한다면 <code>Shiny</code>나 <code>Streamlit</code>을 사용하는 것이 좋습니다.</p>
<p>반면 사용자의 선택은 없고 값이 <strong>정적</strong>으로 고정되어 있다면 <code>Quarto Dashboard</code>를 사용하는 것이 좋습니다.</p>
<p>이 둘의 차이는 <strong>동적</strong> 대시보드는 사용자의 입력을 처리하고 결과를 호스팅할 <strong>서버</strong>가 필요하고 이를 한 비용이 필요합니다. (<strong>정적</strong>은 비용이 들지 않습니다)</p>
<div class="callout callout-style-simple callout-tip callout-titled" title="정적/동적">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
정적/동적
</div>
</div>
<div class="callout-body-container callout-body">
<p>예를 들어, 어제의 매출 데이터를 계산하여 보여주는 대시보드는 날마다 값이 변하긴 하지만, 사용자의 입력이 없기 때문에 <strong>정적</strong>으로 이루어져 <code>Quarto Dashboard</code>로도 충분합니다.</p>
<p>그런데 동일한 매출 데이터이지만, 사용자로부터 날짜를 입력 받고, 그에 따라 매출 데이터를 계산하여 보여주는 대시보드는 데이터가 변해야하기 때문에 <code>Shiny</code>나 <code>Streamlit</code> 과 같은 <strong>동적</strong> 대시보드가 필요합니다.</p>
</div>
</div>
<p>(Quarto Dashboard에서의 <strong>페이지</strong>나 <strong>탭셋</strong>은 모든 결과를 만들어두고 필요에 따라 보여주는 내용을 다르게 한다의 관점으로 데이터가 변하지 않는 <strong>정적</strong> 기능입니다.)</p>
</section><section id="마치며" class="level2"><h2 class="anchored" data-anchor-id="마치며">마치며</h2>
<p>이번 아티클에서는 새롭게 공개된 <code>Quarto Dashboard</code>를 통해 대시보드를 구성하는 방법에 대해 알아보았습니다.</p>
<p>꼭 <strong>헬스케어</strong>, <strong>메디컬</strong> <strong>IT</strong> 업계에서뿐 아니라 다양한 산업과 역할에서 데이터를 활용하기 위해 대시보드를 활용하고 있습니다.</p>
<p><code>Quarto</code>와 사용 가능한 <code>R</code>이나 <code>Python을</code> 활용할 수 있다면 <code>Quarto Dashboard</code>를 사용해 정적 대시보드 구성과 공유가 더욱 편리하게 이루어지기를 기대하며 글을 마칩니다.</p>


</section><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/">CC BY-NC 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{kim2023,
  author = {Kim, Jinhwan},
  title = {Quarto {Dashboard를} {이용해} {대시보드} {개발하기}},
  date = {2023-12-11},
  url = {https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-kim2023" class="csl-entry quarto-appendix-citeas">
Kim, Jinhwan. 2023. <span>“Quarto Dashboard를 이용해 대시보드
개발하기.”</span> December 11, 2023. <a href="https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard">https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>python</category>
  <category>quarto</category>
  <category>quarto dashboard</category>
  <category>dashboard</category>
  <guid>https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard/</guid>
  <pubDate>Sun, 10 Dec 2023 15:00:00 GMT</pubDate>
  <media:content url="https://blog.zarathu.com/jp/posts/2023-12-11-quarto-dashboard/img/logo.png" medium="image" type="image/png" height="35" width="144"/>
</item>
<item>
  <title>Rstudio에서 Copilot을 활용해 AI로 코딩하기</title>
  <dc:creator>Jinhwan Kim</dc:creator>
  <link>https://blog.zarathu.com/jp/posts/2023-11-21-copilot/</link>
  <description><![CDATA[ <!-- Google tag (gtag.js) --><script async="" src="https://www.googletagmanager.com/gtag/js?id=G-L0DYYSH9KM"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L0DYYSH9KM');
</script><section id="rstudio에서-copilot을-활용해-ai로-코딩하기" class="level1"><h1>Rstudio에서 Copilot을 활용해 AI로 코딩하기</h1>
<section id="github-copilot이란" class="level2"><h2 class="anchored" data-anchor-id="github-copilot이란">1. Github Copilot이란?</h2>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-11-21-copilot/img/copilot.png" width="400px"></p>
<p>Github Copilot은 OpenAI의 GPT-3를 기반으로 만들어진 <strong>AI 코딩 도우미</strong>로, Github에 있는 수많은 “Public Repository”의 코드들을 학습하여, 자동 완성 형태의 제안을 통해 사용자의 코드 제작을 돕습니다.</p>
<p>Github에는 코드도 있지만, README와 같은 여러 종류의 설명 글 또한 있기 때문에 Copilot에서는 아래 이미지처럼 (<code>Quarto로 블로그 작성</code>) 다양한 종류의 자동 완성을 제공합니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-11-21-copilot/img/example.gif" width="400px"></p>
</section><section id="chatgpt와의-차이점" class="level2"><h2 class="anchored" data-anchor-id="chatgpt와의-차이점">2. chatGPT와의 차이점</h2>
<p><a href="https://support.microsoft.com/ko-kr/topic/chatgpt-vs-microsoft-365-copilot-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80%EC%9A%94-8fdec864-72b1-46e1-afcb-8c12280d712f" target="_blank">Microsoft의 설명</a>에 따르면 chatGPT는 <strong>자연어 처리 기술</strong>로, Microsoft 365 Copilot은 <strong>코드 생성 기술</strong>로 설명하고 있습니다. (Microsoft 365 copilot과 github copilot은 살짝 다르긴합니다.)</p>
<p>즉, chatGPT는 자연어 처리 기술을 통해 사용자의 <strong>질문에 대한 답변</strong>을 생성하는 것이 주 역할입니다.</p>
<p>따라서 chatGPT는 아래 작업 용도로 활용되기도 합니다.</p>
<ul>
<li>에세이, 이메일 및 커버 레터 작성</li>
<li>목록 만들기</li>
<li>예술에 대해 자세히 설명</li>
<li>코드 작성</li>
<li>콘텐츠 요약</li>
<li>시와 노래 가사 만들기</li>
<li>이력서 작성</li>
</ul>
<p>한편 Copilot은 Github에서의 학습을 바탕으로 <strong>코드 스니펫</strong>을 제공하는 것에 더 큰 장점을 가지고 있습니다.</p>
<p>코드 스니펫이란 아래 이미지처럼 자주 사용되는 <strong>조각 코드</strong>를 미리 작성해 놓은 것을 말합니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-11-21-copilot/img/snippet.png" width="400px"></p>
<p>얼핏보면 큰 차이가 없어보이지만, chatGPT는 최근의 기술은 잘 반영하지 못한다는 단점이 있습니다. 또한 Copilot은 IDE (Rstudio)에서 바로 사용할 수 있다는 장점도 있습니다.</p>
<p>어느 것이 좋다/나쁘다 라기보단 서로 다른 특징을 가지고 있기에, 두 방법 모두를 필요한 목적에 따라 적절히 활용하는 것을 권장합니다.</p>
</section><section id="github-copilot을-사용하기-위한-준비" class="level2"><h2 class="anchored" data-anchor-id="github-copilot을-사용하기-위한-준비">3. Github Copilot을 사용하기 위한 준비</h2>
<p>Copilot을 사용하기 위해서는 몇가지 준비가 필요합니다.</p>
<div class="callout callout-style-simple callout-warning">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>이 글에서는 Github 에서의 Copilot 결제를 비롯한 요금제에 대해서는 설명하지 않습니다.</p>
</div>
</div>
</div>
<ol type="1">
<li>Github 개인 계정 (무료)</li>
<li>IDE (코드 에디터) - VS Code, <strong>Rstudio</strong> 등. 글에서는 Rstudio를 기준으로 설명</li>
<li>Github Copilot 가입 (첫 한달은 무료, 이후 <strong>월 10달러의 유료</strong>, <a href="https://docs.github.com/en/copilot/overview-of-github-copilot/about-github-copilot-individual#understanding-the-differences-between-copilot-individual-and-copilot-business" target="_blank"> Pricing </a> 참조)</li>
</ol>
<p>Copilot의 공식 홈페이지에서 설명이 제공하는 개발 도구는 Azure Data studio, JetBrains IDEs, Vim/NeoVim, Visual Studio, Visual Studio Code가 있지만 다행히 Rstudio에서도 사용가능합니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-11-21-copilot/img/ide.png" width="400px"></p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p>현재는 Rstudio Desktop 2023.09.0 이상 버전에서만 사용 가능하며 Rstudio Server나 Posit Workbench에서는 관리자 설정 이후 사용 가능합니다.</p>
<p>버전을 확인하기 위해서는 Rstudio에서 <code>Help &gt; About Rstudio</code>를 클릭하면 됩니다.</p>
</div>
</div>
</div>
</section><section id="rstudio에서-github-copilot-사용-설정" class="level2"><h2 class="anchored" data-anchor-id="rstudio에서-github-copilot-사용-설정">4. Rstudio에서 Github Copilot 사용 설정</h2>
<p>이후 Copilot 설정 과정은 다음과 같습니다.</p>
<ol type="1">
<li>Rstudio에서 <code>Tools &gt; Global Options &gt; copilot</code>을 클릭합니다.</li>
</ol>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-11-21-copilot/img/setting1.png" width="400px"></p>
<ol start="2" type="1">
<li>“Enable Github Copilot”을 체크합니다.</li>
</ol>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-11-21-copilot/img/setting2.png" width="400px"></p>
<ol start="3" type="1">
<li>“Sign in”을 클릭합니다.</li>
</ol>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-11-21-copilot/img/setting3.png" width="400px"></p>
<ol start="4" type="1">
<li>이후 나타나는 Device Activation에 Rstudio에서 보여지는 코드를 입력합니다.</li>
</ol>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-11-21-copilot/img/setting4.png" width="400px"></p>
<ol start="5" type="1">
<li>이제 Github Copilot을 사용할 수 있습니다.</li>
</ol>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-11-21-copilot/img/setting5.png" width="400px"></p>
</section><section id="github-copilot-사용하기" class="level2"><h2 class="anchored" data-anchor-id="github-copilot-사용하기">5. Github Copilot 사용하기</h2>
<p>Copilot은 <code>"Ghost text"</code>라고 불리는 방법으로 사용자의 코드를 자동 완성합니다.</p>
<p>앞서 본 gif 이미지나, 아래의 예시처럼 코드의 일정 부분을 작성하면 나머지 부분을 회색으로 보여주어 탭 키를 누르는 것으로 완성할 수 있습니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-11-21-copilot/img/copilot-rstudio.png" width="400px"></p>
<ol type="1">
<li>Copilot이 인지할 코드: 이때 꼭 주석으로 하지 않아도 이전 코드를 기반으로 copilot이 자동으로 제안합니다.</li>
<li>Copilot이 제안하는 코드: 회색으로 보여지는 부분이 제안되는 부분입니다.</li>
<li>Copilot 상태바: <code>Waiting for Completions</code>(대기), <code>Completion response received</code>(코드 제안 완료), <code>No completions available</code>(제안 없음) 등의 상태를 보여줍니다.</li>
</ol>
<p>한편 상태바 옆의 언어 설정을 통해 어떤 코드를 자동생성할지 설정할 수 있습니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-11-21-copilot/img/language.png" width="400px"></p>
<p>추가로 Copilot 옵션에서 Index project files… 를 선택하여 현재 Rstudio 프로젝트의 파일을 코드제안에 반영할 수도 있습니다.</p>
<section id="사용-방법-1-code" class="level3"><h3 class="anchored" data-anchor-id="사용-방법-1-code">사용 방법 1: Code</h3>
<p>Copilot을 사용하는 가장 기본적인 방법은 코드를 자동완성하는 것입니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-11-21-copilot/img/code.png" width="400px"></p>
<p>위의 예시처럼, 함수의 기능을 잘 설명하는 이름을 작성하는 것으로 Copilot은 함수의 목적을 이해하고, 함수의 기능에 맞는 코드를 제안합니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-11-21-copilot/img/code2.png" width="400px"></p>
<p>한편 함수 이름에 기능을 명시하지 않고 적절한 <strong>한글 주석을 통해서도</strong> 함수를 자동으로 완성할 수 있습니다.</p>
<p>물론 이를 위해서는 (이름으로나 주석으로나) 함수의 목적을 명확하게 알아야만 합니다.</p>
</section><section id="사용-방법-2-questions" class="level3"><h3 class="anchored" data-anchor-id="사용-방법-2-questions">사용 방법 2: Questions</h3>
<p>Copilot은 코드를 자동완성하는 것 외에도, 코드를 작성하는데 도움을 주는 질문을 제안합니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-11-21-copilot/img/question.png" width="400px"></p>
<p>이때 질문을 위해서는 코드와는 다르게 주석에 <code>q:</code>와 <code>a:</code>형식을 맞춰야만 합니다.</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># q: QUESTION</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># a: </span></span></code></pre></div>
</div>
<p>개인적으로 이러한 방법의 활용을 위해서는 코드를 위주로 학습한 Copilot보다는, <code>chatGPT</code>를 바로 쓰거나 <code>gptStudio</code>, <code>chattr</code> 패키지를 사용해 LLM 모델을 사용하는 것도 좋다고 생각합니다.</p>
<div class="callout callout-style-simple callout-note">
<div class="callout-body d-flex">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-body-container">
<p><a href="https://medium.com/@jhk0530/chatgpt-in-rstudio-with-gptstudio-5125f8eac429" target="_blank"> gptStudio 설명글 </a></p>
<p><a href="https://mlverse.github.io/chattr/" target="_blank"> chattr 패키지 웹페이지</a></p>
</div>
</div>
</div>
</section><section id="사용-방법-3-comments" class="level3"><h3 class="anchored" data-anchor-id="사용-방법-3-comments">사용 방법 3: Comments</h3>
<p>Copilot은 코드를 작성하는데 도움을 주는 질문 외에도, 주석을 작성하는데에도 쓰일 수 있습니다.</p>
<p>예를 들면, 아래의 표준 편차를 계산하는 함수에 대해 주석을 작성하게 할 수도 있습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">calc_se</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">na.rm</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/numeric.html">is.numeric</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/stop.html">stop</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x must be numeric"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span>  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">na.rm</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/NA.html">is.na</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/MathFun.html">sqrt</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/stats/cor.html">var</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/length.html">length</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calc_se</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.9574271</code></pre>
</div>
</div>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-11-21-copilot/img/comment.png" width="400px"></p>
</section><section id="사용-방법-4-test" class="level3"><h3 class="anchored" data-anchor-id="사용-방법-4-test">사용 방법 4: Test</h3>
<p>Copilot은 코드를 작성하는데 도움을 주는 질문 외에도, 코드의 품질을 올리기 위한 목적의 테스트 코드를 작성하기 위해서도(!) 쓰일 수 있습니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-11-21-copilot/img/test.gif" width="400px"></p>
</section></section><section id="정리" class="level2"><h2 class="anchored" data-anchor-id="정리">6. 정리</h2>
<p>당연한 이야기지만, Copilot은 유용한 코드를 생성하는 경우가 많지만 항상 유효하거나 의도한 문제를 정확하게 해결하지 않을 수도 있습니다.</p>
<p>또한 Github의 다양한 수준의 코드를 학습한 만큼 안전하지 않은 코딩 패턴이나, 버그, 비효율적인 관행등을 포함한 코드를 만들 수 도 있기 때문에 완전히 신뢰할 수는 없습니다.</p>
<p>그러나 대부분의 R 사용자에게는 크게 체감될만한 문제가 없을 것으로 보이며, 특히 데이터 매니지먼트의 목적으로는 매우 유용하게 사용할 수 있을 것으로 보입니다.</p>
<p>꼭 Rstudio가 아니더라도 다른 IDE에서 SQL, SASS 등의 다른 언어를 목적으로도 사용할 수 있기에 Copilot은 대체로 코드 작업에 아주 아주 효과적인 방법입니다.</p>
<p>그러나 개인 기준 월 10달러의 비용이 들기 때문에, 코딩 작업이 많이 필요하지 않은 사람에게는 다소 부담스러울 수도 있으니 무료 기간동안 활용해보고 결정하는 것도 좋을 것 같습니다.</p>
<p><em>비교를 위한 넷플릭스의 요금제</em></p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-11-21-copilot/img/netflix.png" width="400px"></p>
<div class="callout callout-style-simple callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
🤗 Let’s talk
</div>
</div>
<div class="callout-body-container callout-body">
<p>차라투에서는 R과 Shiny에 대한 컨설팅을 제공합니다. 진행중인 프로젝트 관련하여 도움이 필요하시다면 jinhwan@zarathu.com 으로 알려주세요!</p>
</div>
</div>


</section></section><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/">CC BY-NC 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{kim2023,
  author = {Kim, Jinhwan},
  title = {Rstudio에서 {Copilot을} {활용해} {AI로} {코딩하기}},
  date = {2023-11-21},
  url = {https://blog.zarathu.com/jp/posts/2023-11-21-copilot},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-kim2023" class="csl-entry quarto-appendix-citeas">
Kim, Jinhwan. 2023. <span>“Rstudio에서 Copilot을 활용해 Ai로
코딩하기.”</span> November 21, 2023. <a href="https://blog.zarathu.com/jp/posts/2023-11-21-copilot">https://blog.zarathu.com/jp/posts/2023-11-21-copilot</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>github</category>
  <category>rstudio</category>
  <category>copilot</category>
  <guid>https://blog.zarathu.com/jp/posts/2023-11-21-copilot/</guid>
  <pubDate>Mon, 20 Nov 2023 15:00:00 GMT</pubDate>
  <media:content url="https://blog.zarathu.com/jp/posts/2023-11-21-copilot/img/logo.png" medium="image" type="image/png" height="62" width="144"/>
</item>
<item>
  <title>Discourse 기반 커뮤니티 구축</title>
  <dc:creator>Jisoo Kim</dc:creator>
  <link>https://blog.zarathu.com/jp/posts/2023-11-10-discourse1/</link>
  <description><![CDATA[ 
<!-- Google tag (gtag.js) -->
<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-L0DYYSH9KM"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L0DYYSH9KM');
</script>





<p><img src="https://blog.zarathu.com/jp/posts/2023-11-10-discourse1/img/logo.png" class="img-fluid"></p>
<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>이번 글에서는 차라투에서 사용하는 커뮤니티 플랫폼인 Discourse를 사용해서 커뮤니티를 구축하는 과정에 대해 소개합니다.</p>
</section>
<section id="discourse" class="level2">
<h2 class="anchored" data-anchor-id="discourse">Discourse</h2>
<p>Discourse는 쉽게 모던한 커뮤니티를 만들 수 있는 오픈소스 커뮤니티 플랫폼이며 사이트 개발과 배포를 완벽히 조절할 수 있도록 다양한 커스텀 옵션과 설치 방식을 제공합니다. 또한 10년이 넘게 수많은 테스트를 거쳐왔으며 카카오, Zoom, Jetbrain 등의 다양한 회사에서 사용 되고 있고 지속적으로 업데이트 되고 있습니다.</p>
<p>또한 적절히 분리된 게시판에 Markdown 게시글을 작성하는 기능부터 채팅 기능까지 사용할 수 있고, 다양한 테마를 다운받아 사용하거나 직접 코드를 수정해서 커뮤니티를 꾸밀 수 있습니다. 마지막으로 AI를 통한 챗봇이나 Data Explorer를 사용한 SQL 분석 기능 등 다양한 범위의 플러그인을 제공하며 이를 직접 개발할 수도 있습니다.</p>
<p align="center">
<img src="https://blog.zarathu.com/jp/posts/2023-11-10-discourse1/img/kakao-dev.png" align="center" width="48%"> <img src="https://blog.zarathu.com/jp/posts/2023-11-10-discourse1/img/twitter-dev.png" align="center" width="48%">
</p>
<p align="center">
<img src="https://blog.zarathu.com/jp/posts/2023-11-10-discourse1/img/ohdsi.png" align="center" width="32%"> <img src="https://blog.zarathu.com/jp/posts/2023-11-10-discourse1/img/posit-community.png" align="center" width="32%"> <img src="https://blog.zarathu.com/jp/posts/2023-11-10-discourse1/img/zoom-dev.png" align="center" width="32%">
</p>
</section>
<section id="discourse-커뮤니티-만들기" class="level2">
<h2 class="anchored" data-anchor-id="discourse-커뮤니티-만들기">Discourse 커뮤니티 만들기</h2>
<p>Discourse는 다양한 설치 방식을 지원하지만 공식적으로 지원되는 유일한 방법은 Docker 기반입니다.</p>
<p>Docker를 사용하면 빌드에 시간이 걸리는 단점이 있지만 Discourse를 제작하는데 사용된 Rails 웹 애플리케이션 프레임워크의 복잡한 설정을 하지 않아도 되며, 쉽게 배포하고 업데이트 할 수 있습니다.</p>
<p>반면에 macOS / Ubuntu / Windows 환경에 직접 설치하는 방법도 공식 GitHub에 자세히 작성되어 있습니다.</p>
<section id="메일서버-설정" class="level3">
<h3 class="anchored" data-anchor-id="메일서버-설정">1. 메일서버 설정</h3>
<p>메일 서비스는 계정 관리, 알림에 쓰이며 필수적으로 구성해야 합니다. 일반적인 Gmail과 같은 서비스가 아닌 transactional 이메일 서버를 사용해야 합니다.</p>
<p>저는 지원되는 이메일 서비스 중 Mailjet을 사용했습니다. Mailjet은 무료 요금제를 사용했을 때 일일 200건/월 6000건의 이메일을 보낼 수 있기에 적합하다고 생각했습니다.</p>
<section id="도메인-인증받기" class="level4">
<h4 class="anchored" data-anchor-id="도메인-인증받기">도메인 인증받기</h4>
<p>Mailjet 서비스에 회원 가입을 했다면 <a href="https://app.mailjet.com/account/sender?type=domain">설정 페이지</a>에 들어가서 도메인을 등록해줍니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-11-10-discourse1/img/mailjet-1.png" class="img-fluid"></p>
<p>Pending 우측 톱니바퀴 버튼 → Validate → TXT DNS 레코드 등록을 통해서 도메인을 인증해줍니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-11-10-discourse1/img/mailjet-2.png" class="img-fluid"></p>
<p>도메인 인증이 되었다면 Authenticate this domain 버튼을 클릭해서 SPF 및 DKIM 설정을 진행합니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-11-10-discourse1/img/mailjet-3.png" class="img-fluid"></p>
<p>TXT DNS 레코드를 추가해서 SPF 및 DomainKeys를 설정해서 mailjet 서비스가 도메인을 사용할 수 있도록 합니다.(반영까지는 시간이 걸릴 수 있으니 새로고침 해주시면 됩니다)</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-11-10-discourse1/img/mailjet-4.png" class="img-fluid"></p>
<p>설정이 모두 되었다면 위 사진처럼 Active 라고 나옵니다.</p>
</section>
<section id="발신-이메일-정하기" class="level4">
<h4 class="anchored" data-anchor-id="발신-이메일-정하기">발신 이메일 정하기</h4>
<p>도메인 인증 바로 밑에 발송 주소를 정할 수 있는 부분이 있으며 메일의 발송자를 지정할 수 있는 부분입니다.</p>
<p>Discourse는 알림 용도로 메일 서비스를 사용하기 때문에 noreply를 붙여서 설정했습니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-11-10-discourse1/img/mailjet-5.png" class="img-fluid"></p>
</section>
<section id="api-key-발급받기" class="level4">
<h4 class="anchored" data-anchor-id="api-key-발급받기">API Key 발급받기</h4>
<p><a href="https://app.mailjet.com/account/apikeys">계정관리 페이지</a>에서 Main account의 API KEY를 확인하고 SECRET KEY를 받을 수 있습니다. 추후에 다시 다운받으려면 재발급이 필요하기에 꼭 어딘가에 저장해둬야 합니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-11-10-discourse1/img/mailjet-6.png" class="img-fluid"></p>
</section>
</section>
<section id="discourse-설치" class="level3">
<h3 class="anchored" data-anchor-id="discourse-설치">2. Discourse 설치</h3>
<p>Discourse를 도커에 설치하는 방법은 <a href="https://github.com/discourse/discourse/blob/main/docs/INSTALL-cloud.md">공식 가이드</a>를 참조했습니다.</p>
<p>먼저 명령어를 실행해서 도커 이미지를 다운로드 받습니다. root 권한은 빌드 등에 필요합니다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> sudo <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># root 권한 얻기</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> git clone https://github.com/discourse/discourse_docker.git /var/discourse</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> cd /var/discourse</span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> chmod 700 containers <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 권한설정</span></span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> vim containers/discourse.yml <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 설정파일 생성(이름을 다르게 만들어서 구분이 용이하게 하려고 합니다.)</span></span></code></pre></div>
<p>공식 가이드 에서는 <code>discourse-setup</code> 라는 자동 설정 툴을 사용해서 질문에 답변을 하는 형태로 직관적인 설정을 지원하나, 디테일한 설정을 위해 설정 파일을 직접 만들어 주었습니다.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## discourse.yml</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 밑에 expose에서 443을 제외했기 때문에 ssl template를 주석처리 했습니다.</span></span>
<span id="cb2-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">templates:</span></span>
<span id="cb2-4">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"templates/postgres.template.yml"</span></span>
<span id="cb2-5">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"templates/redis.template.yml"</span></span>
<span id="cb2-6">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"templates/web.template.yml"</span></span>
<span id="cb2-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Uncomment the next line to enable the IPv6 listener</span></span>
<span id="cb2-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#- "templates/web.ipv6.template.yml"</span></span>
<span id="cb2-9">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"templates/web.ratelimited.template.yml"</span></span>
<span id="cb2-10">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Uncomment these two lines if you wish to add Lets Encrypt (https)</span></span>
<span id="cb2-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#- "templates/web.ssl.template.yml"</span></span>
<span id="cb2-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#- "templates/web.letsencrypt.ssl.template.yml"</span></span>
<span id="cb2-13"></span>
<span id="cb2-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## which TCP/IP ports should this container expose?</span></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## If you want Discourse to share a port with another webserver like Apache or nginx,</span></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## see https://meta.discourse.org/t/17247 for details</span></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Nginx에서 직접 SSL 설정을 하려고 하므로 443을 제외했습니다.</span></span>
<span id="cb2-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">expose:</span></span>
<span id="cb2-19">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"80:80"</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># http</span></span>
<span id="cb2-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  - "443:443" # https</span></span>
<span id="cb2-21"></span>
<span id="cb2-22"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">params:</span></span>
<span id="cb2-23">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">db_default_text_search_config:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pg_catalog.english"</span></span>
<span id="cb2-24"></span>
<span id="cb2-25">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Set db_shared_buffers to a max of 25% of the total memory.</span></span>
<span id="cb2-26">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## will be set automatically by bootstrap based on detected RAM, or you can override</span></span>
<span id="cb2-27">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#db_shared_buffers: "256MB"</span></span>
<span id="cb2-28"></span>
<span id="cb2-29">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## can improve sorting performance, but adds memory usage per-connection</span></span>
<span id="cb2-30">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#db_work_mem: "40MB"</span></span>
<span id="cb2-31"></span>
<span id="cb2-32">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Which Git revision should this container use? (default: tests-passed)</span></span>
<span id="cb2-33">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 기본 설정은 beta 버전으로 설치됩니다. 안정성을 위해 stable 버전으로 꼭 지정해주어야 합니다.</span></span>
<span id="cb2-34">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">version:</span> v3.1.2</span>
<span id="cb2-35"></span>
<span id="cb2-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 다중 언어를 지원하므로 꼭 ko로 하지 않아도 됩니다.</span></span>
<span id="cb2-37"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">env:</span></span>
<span id="cb2-38">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">LC_ALL:</span> en_US.UTF-8</span>
<span id="cb2-39">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">LANG:</span> en_US.UTF-8</span>
<span id="cb2-40">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">LANGUAGE:</span> en_US.UTF-8</span>
<span id="cb2-41">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># DISCOURSE_DEFAULT_LOCALE: en</span></span>
<span id="cb2-42"></span>
<span id="cb2-43">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## How many concurrent web requests are supported? Depends on memory and CPU cores.</span></span>
<span id="cb2-44">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## will be set automatically by bootstrap based on detected CPUs, or you can override</span></span>
<span id="cb2-45">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#UNICORN_WORKERS: 3</span></span>
<span id="cb2-46"></span>
<span id="cb2-47">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Discourse를 배포할 도메인</span></span>
<span id="cb2-48">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## </span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">TODO</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">: The domain name this Discourse instance will respond to</span></span>
<span id="cb2-49">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Required. Discourse will not work with a bare IP number.</span></span>
<span id="cb2-50">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">DISCOURSE_HOSTNAME:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'community.zarathu.com'</span></span>
<span id="cb2-51"></span>
<span id="cb2-52">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Uncomment if you want the container to be started with the same</span></span>
<span id="cb2-53">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## hostname (-h option) as specified above (default "$hostname-$config")</span></span>
<span id="cb2-54">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#DOCKER_USE_HOSTNAME: true</span></span>
<span id="cb2-55"></span>
<span id="cb2-56">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 관리자 이메일</span></span>
<span id="cb2-57">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## </span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">TODO</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">: List of comma delimited emails that will be made admin and developer</span></span>
<span id="cb2-58">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## on initial signup example 'user1@example.com,user2@example.com'</span></span>
<span id="cb2-59">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">DISCOURSE_DEVELOPER_EMAILS:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'office@zarathu.com'</span></span>
<span id="cb2-60"></span>
<span id="cb2-61">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 메일서버 설정값</span></span>
<span id="cb2-62">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## </span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">TODO</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">: The SMTP mail server used to validate new accounts and send notifications</span></span>
<span id="cb2-63">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># SMTP ADDRESS, username, and password are required</span></span>
<span id="cb2-64">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">WARNING</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> the char '#' in SMTP password can cause problems!</span></span>
<span id="cb2-65">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">DISCOURSE_SMTP_ADDRESS:</span> in-v3.mailjet.com</span>
<span id="cb2-66">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">DISCOURSE_SMTP_PORT:</span> 587</span>
<span id="cb2-67">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">DISCOURSE_SMTP_USER_NAME:</span> API KEY</span>
<span id="cb2-68">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">DISCOURSE_SMTP_PASSWORD:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SECRET KEY"</span></span>
<span id="cb2-69">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#DISCOURSE_SMTP_ENABLE_START_TLS: true           # (optional, default true)</span></span>
<span id="cb2-70">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">DISCOURSE_SMTP_DOMAIN:</span> community.zarathu.com <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># mailjet에 등록한 도메인</span></span>
<span id="cb2-71">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">DISCOURSE_NOTIFICATION_EMAIL:</span> noreply@community.zarathu.com <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 등록해둔 발신자 주소</span></span>
<span id="cb2-72"></span>
<span id="cb2-73">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## If you added the Lets Encrypt template, uncomment below to get a free SSL certificate</span></span>
<span id="cb2-74">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#LETSENCRYPT_ACCOUNT_EMAIL: me@example.com</span></span>
<span id="cb2-75"></span>
<span id="cb2-76">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## The http or https CDN address for this Discourse instance (configured to pull)</span></span>
<span id="cb2-77">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## see https://meta.discourse.org/t/14857 for details</span></span>
<span id="cb2-78">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#DISCOURSE_CDN_URL: https://discourse-cdn.example.com</span></span>
<span id="cb2-79">  </span>
<span id="cb2-80">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## The maxmind geolocation IP address key for IP address lookup</span></span>
<span id="cb2-81">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## see https://meta.discourse.org/t/-/137387/23 for details</span></span>
<span id="cb2-82">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#DISCOURSE_MAXMIND_LICENSE_KEY: 1234567890123456</span></span>
<span id="cb2-83"></span>
<span id="cb2-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 도커 컨테이너와 연결될 호스트 볼륨 경로 / 로그파일 경로</span></span>
<span id="cb2-85"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## The Docker container is stateless; all data is stored in /shared</span></span>
<span id="cb2-86"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">volumes:</span></span>
<span id="cb2-87">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> volume:</span>
<span id="cb2-88">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">host:</span> /var/discourse/shared/standalone</span>
<span id="cb2-89">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">guest:</span> /shared</span>
<span id="cb2-90">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> volume:</span>
<span id="cb2-91">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">host:</span> /var/discourse/shared/standalone/log/var-log</span>
<span id="cb2-92">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">guest:</span> /var/log</span>
<span id="cb2-93"></span>
<span id="cb2-94"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 플러그인 설정</span></span>
<span id="cb2-95"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 빌드 전/후 실행될 명령어를 작성할 수 있음</span></span>
<span id="cb2-96"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Plugins go here</span></span>
<span id="cb2-97"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## see https://meta.discourse.org/t/19157 for details</span></span>
<span id="cb2-98"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">hooks:</span></span>
<span id="cb2-99">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">after_code:</span></span>
<span id="cb2-100">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> exec:</span>
<span id="cb2-101">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cd:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$home</span>/plugins</span>
<span id="cb2-102">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cmd:</span></span>
<span id="cb2-103">          <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> git clone https://github.com/discourse/docker_manager.git</span>
<span id="cb2-104"></span>
<span id="cb2-105"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Any custom commands to run after building</span></span>
<span id="cb2-106"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">run:</span></span>
<span id="cb2-107">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> exec: echo <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Beginning of custom commands"</span></span>
<span id="cb2-108">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## If you want to set the 'From' email address for your first registration, uncomment and change:</span></span>
<span id="cb2-109">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## After getting the first signup email, re-comment the line. It only needs to run once.</span></span>
<span id="cb2-110">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#- exec: rails r "SiteSetting.notification_email='info@unconfigured.discourse.org'"</span></span>
<span id="cb2-111">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> exec: echo <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"End of custom commands"</span></span></code></pre></div>
<p>위 설정 파일은 <code>/var/discourse/sample/standalone.yml</code> 을 베이스로 만들어진 예시입니다.</p>
<p>Discourse는 SSL을 위한 Let’s encrypt 인증서 관리를 자동으로 해주지만 추후에 와일드카드 인증서를 사용하기 위해 비활성화 시켰습니다. 기본 SSL을 활성화 시키려면 설정 파일에서 아래 부분을 수정해주시면 됩니다.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## discourse.yml</span></span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">templates:</span></span>
<span id="cb3-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb3-4">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"templates/web.ssl.template.yml"</span></span>
<span id="cb3-5">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"templates/web.letsencrypt.ssl.template.yml"</span></span>
<span id="cb3-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb3-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">expose:</span></span>
<span id="cb3-8">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"80:80"</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># http</span></span>
<span id="cb3-9">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"443:443"</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># https</span></span>
<span id="cb3-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb3-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">env:</span></span>
<span id="cb3-12">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb3-13">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">LETSENCRYPT_ACCOUNT_EMAIL:</span> me@example.com</span></code></pre></div>
<p>Discourse 버전은 <a href="https://github.com/discourse/discourse/tags">공식 GitHub Tags</a> 에서 버전명을 확인한 뒤에 안정적인 최신 버전으로 수정할 수 있습니다.</p>
</section>
<section id="discourse-시작" class="level3">
<h3 class="anchored" data-anchor-id="discourse-시작">3. Discourse 시작</h3>
<p>설정 파일을 저장하고 Discourse를 실행하는 단계입니다. Discours는 bootstrap(빌드)을 하는데 약 2-8분이 소요되므로 설정을 수정하면 꽤 오랜 시간을 기다려야 합니다.</p>
<p>설정 파일의 이름이 <code>discourse.yml</code> 이므로 <strong>파일명을 꼭 명시</strong>해줘야 합니다. 만약 파일명을 잘못 입력한다면 충돌이 일어나서 DB가 초기화될 수 있습니다.(경험담)</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## /var/discourse/launcher 명령어 설정파일명</span></span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> /var/discourse/launcher rebuild discourse</span></code></pre></div>
<p>rebuild 명령어는 아래 3개의 명령어를 실행하는 것과 동일하게 작동합니다. 만약 설정파일을 수정했다면, 간단하게 위 명령어를 사용해서 다시 배포하면 새로운 수정 사항이 반영됩니다.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## equivalent with launcher rebuild</span></span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> /var/discourse/launcher stop discourse</span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> /var/discourse/launcher bootstrap discourse</span>
<span id="cb5-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> /var/discourse/launcher start discourse</span></code></pre></div>
<p>작업이 완료됐다면, 설정 파일에 명시한 HOST_NAME인 <a href="http://community.zarathu.com"><code>http://community.zarathu.com</code></a> 으로 접속할 수 있으며 관리자 계정 생성을 하고 가이드를 따라서 초기 설정을 해주시면 됩니다. (SSL이 비활성화된 상태이므로 http로 접속가능)</p>
</section>
<section id="외부-nginx를-이용한-배포" class="level3">
<h3 class="anchored" data-anchor-id="외부-nginx를-이용한-배포">4. 외부 Nginx를 이용한 배포</h3>
<p>서비스 관리의 단순화, 서버 리소스 효율성, 와일드카드 인증서를 사용하기 위해 단일 Nginx 도커 인스턴스를 사용해서 Discourse를 운영하기로 결정했습니다.</p>
<p>이를 위해 설정 파일을 수정해서 외부 포트 노출을 제거합니다.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## discourse.yml</span></span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## "80:80" -&gt; "80"</span></span>
<span id="cb6-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">expose:</span></span>
<span id="cb6-6">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"80"</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># http</span></span>
<span id="cb6-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  - "443:443" # https</span></span></code></pre></div>
<p>Docker Network의 Bridge Network를 통해 Nginx와 Discourse 컨테이너를 연결해줍니다. Nginx 컨테이너는 실행되고 있다고 가정합니다.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## mybridge라는 이름의 bridge 네트워크 생성</span></span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> docker network create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--driver</span> bridge mybridge</span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## nginx, discourse 컨테이너를 mybridge 네트워크에 연결</span></span>
<span id="cb7-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> docker network connect mybridge nginx</span>
<span id="cb7-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> docker network connect mybridge discourse</span></code></pre></div>
<p>Nginx <code>sites-available</code> 설정 파일을 생성합니다.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## community.conf</span></span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 80포트(http)</span></span>
<span id="cb8-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">server</span> {</span>
<span id="cb8-5">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">listen</span> 80<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-6">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">listen</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">::</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>:80<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-7">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">server_name</span> community.zarathu.com<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-8"></span>
<span id="cb8-9">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">add_header</span> Content-Security-Policy upgrade-insecure-requests<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-10">        </span>
<span id="cb8-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## https로 upgrade</span></span>
<span id="cb8-12">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">location</span> / {</span>
<span id="cb8-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">301</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">https://</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$server_name$request_uri</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-14">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-15"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-16"></span>
<span id="cb8-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 443 포트(https)</span></span>
<span id="cb8-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">server</span> {</span>
<span id="cb8-19">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">listen</span> 443 ssl http2<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-20">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">server_name</span> community.zarathu.com<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-21">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">underscores_in_headers</span> on<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-22"></span>
<span id="cb8-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 따로 만들어둔 와일드카드 인증서 경로</span></span>
<span id="cb8-24">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ssl_certificate</span> /etc/letsencrypt/fullchain.pem<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-25">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ssl_certificate_key</span> /etc/letsencrypt/privkey.pem<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-26">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ssl_protocols</span>        SSLv3 TLSv1 TLSv1.1 TLSv1.2<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-27">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ssl_ciphers</span>          HIGH:!aNULL:!MD5<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-28"></span>
<span id="cb8-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 보안을 위한 헤더</span></span>
<span id="cb8-30">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">add_header</span> Strict-Transport-Security max-age=31536000<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-31">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">add_header</span> X-Content-Type-Options <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nosniff"</span> always<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-32">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">add_header</span> X-Frame-Options <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SAMEORIGIN"</span> always<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-33">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">add_header</span> X-XSS-Protection <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1; mode=block"</span> always<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-34">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">add_header</span> Content-Security-Policy upgrade-insecure-requests<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-35"></span>
<span id="cb8-36">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ssl_stapling</span> on<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-37">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ssl_stapling_verify</span> on<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-38">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">client_max_body_size</span> 4G<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 사이트 업로드 크기 제한</span></span>
<span id="cb8-39"></span>
<span id="cb8-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Docker network를 이용한 프록시</span></span>
<span id="cb8-41">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## discourse 컨테이너 내부 80포트로 연결됩니다.</span></span>
<span id="cb8-42">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">location</span> / {</span>
<span id="cb8-43">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">proxy_pass</span> http://discourse<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-44"></span>
<span id="cb8-45">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">proxy_set_header</span> Host <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$host</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-46">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">proxy_set_header</span> X-Real-IP <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$remote_addr</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-47">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">proxy_set_header</span> X-Forwarded-For <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$proxy_add_x_forwarded_for</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-48">                <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">proxy_set_header</span> X-Forwarded-Proto https<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-49">                <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">proxy_set_header</span> X-Forwarded-Scheme https<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-50"></span>
<span id="cb8-51">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">proxy_buffer_size</span>          128k<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-52">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">proxy_buffers</span>              4 256k<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-53">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">proxy_busy_buffers_size</span>    256k<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-54">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-55">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">location</span> = /robots.txt {</span>
<span id="cb8-56">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"User-agent: *\nDisallow: /"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-57">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-58"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>설정 파일을 활성화 시키기 위해서 <code>sites-enabled</code>에 심볼릭 링크를 생성합니다.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## nginx 설정 파일 위치는 /etc/nginx 로 가정</span></span>
<span id="cb9-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> ln <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> /etc/nginx/sites-available/community.conf /etc/nginx/sites-enabled/community.conf</span></code></pre></div>
<p>변경된 설정을 반영하기 위해 Nginx를 다시 로드해줍니다. 기존에 배포된 서비스의 <strong>중단을 최소화</strong> 하기 위해 reload를 사용했습니다.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## nginx 컨테이너의 nginx reload 명령 실행</span></span>
<span id="cb10-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## docker exec -it 컨테이너명 nginx -s reload</span></span>
<span id="cb10-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> docker exec <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-it</span> nginx nginx <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> reload</span></code></pre></div>
</section>
<section id="개발-서버를-위한-다중-사이트-구성" class="level3">
<h3 class="anchored" data-anchor-id="개발-서버를-위한-다중-사이트-구성">5. 개발 서버를 위한 다중 사이트 구성</h3>
<p>Discourse는 설정 변경 후 bootstrap(빌드)을 하는데 <strong>매우 많은 시간</strong>이 소요되며 그 동안 기존의 서비스의 운영이 중단됩니다. 또한 여러 설정을 수정하거나 플러그인을 추가했을 때 오류가 발생할 수 있으므로 매우 위험합니다. 따라서 테스트를 할 수 있도록 개발용 Discourse 커뮤니티를 배포하게 되었습니다.</p>
<p>메인 커뮤니티와 동일한 파일 경로를 공유하고 같은 DB를 사용하게 할 수도 있지만 사이트의 안정성을 위해 <strong>완전한 분리</strong>를 하려고 하므로 새로운 discourse를 설치했습니다.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> git clone https://github.com/discourse/discourse_docker.git /var/discourse-dev</span>
<span id="cb11-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> cd /var/discourse-dev</span>
<span id="cb11-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> chmod 700 containers <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 권한설정</span></span>
<span id="cb11-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> vim containers/discourse-dev.yml <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 설정파일 생성(이름을 다르게 만들어서 구분이 용이하게 하려고 합니다.)</span></span></code></pre></div>
<p>새로운 Discourse 설정 파일을 생성합니다. 대부분의 내용은 메인 커뮤니티와 동일합니다.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## discourse-dev.yml</span></span>
<span id="cb12-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb12-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">DISCOURSE_HOSTNAME:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'community.dev.zarathu.com'</span></span>
<span id="cb12-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">...</span></span>
<span id="cb12-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">volumes:</span></span>
<span id="cb12-6">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> volume:</span>
<span id="cb12-7">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">host:</span> /var/discourse-dev/shared/standalone</span>
<span id="cb12-8">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">guest:</span> /shared</span>
<span id="cb12-9">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> volume:</span>
<span id="cb12-10">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">host:</span> /var/discourse-dev/shared/standalone/log/var-log</span>
<span id="cb12-11">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">guest:</span> /var/log</span>
<span id="cb12-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">...</span></span></code></pre></div>
<p>개발용 Discourse 커뮤니티를 실행합니다.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">$</span> /var/discourse-dev/launcher rebuild discourse-dev</span></code></pre></div>
<p>이후에 외부 Nginx를 이용한 배포 설정도 메인 커뮤니티 설정과 동일하나 dev 커뮤니티 도메인과 컨테이너 이름 등을 수정해서 배포해 주시면 됩니다.</p>
<p>배포가 완료됐다면 메인 커뮤니티와 개발용 커뮤니티의 데이터를 동기화하기 위해 메인 커뮤니티를 백업합니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-11-10-discourse1/img/dev-server-1.png" class="img-fluid"></p>
<p>백업이 완료됐다면 목록에 표시되며 다운로드 버튼을 클릭해서 파일로 저장합니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-11-10-discourse1/img/dev-server-2.png" class="img-fluid"></p>
<p>저장한 파일을 개발 커뮤니티에 업로드한 뒤 복구를 진행하면 메인 커뮤니티의 사용자, 글, 설정 등이 개발용 서버에도 동일하게 적용됩니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-11-10-discourse1/img/dev-server-3.png" class="img-fluid"></p>
<p>디스코스를 설치 한 다음, 몇가지 커스텀을 거쳐 실제로 사용하는 커뮤니티의 이미지는 다음과 같습니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-11-10-discourse1/img/community.png" class="img-fluid"></p>
<p><em>이어지는 글에서 커스텀 과정을 소개합니다.</em></p>


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/">CC BY-NC 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{kim2023,
  author = {Kim, Jisoo},
  title = {Discourse {기반} {커뮤니티} {구축}},
  date = {2023-11-10},
  url = {https://blog.zarathu.com/jp/posts/2023-11-10-discourse1},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-kim2023" class="csl-entry quarto-appendix-citeas">
Kim, Jisoo. 2023. <span>“Discourse 기반 커뮤니티 구축.”</span> November
10, 2023. <a href="https://blog.zarathu.com/jp/posts/2023-11-10-discourse1">https://blog.zarathu.com/jp/posts/2023-11-10-discourse1</a>.
</div></div></section></div> ]]></description>
  <category>docker</category>
  <category>website</category>
  <category>discourse</category>
  <category>community</category>
  <guid>https://blog.zarathu.com/jp/posts/2023-11-10-discourse1/</guid>
  <pubDate>Thu, 09 Nov 2023 15:00:00 GMT</pubDate>
  <media:content url="https://blog.zarathu.com/jp/posts/2023-11-10-discourse1/img/logo.png" medium="image" type="image/png" height="42" width="144"/>
</item>
<item>
  <title>Quarto Manuscripts를 이용해 학술 논문 작성하기</title>
  <dc:creator>Jihee Han</dc:creator>
  <link>https://blog.zarathu.com/jp/posts/2023-10-19-quarto-manuscript/</link>
  <description><![CDATA[ <!-- Google tag (gtag.js) --><script async="" src="https://www.googletagmanager.com/gtag/js?id=G-L0DYYSH9KM"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L0DYYSH9KM');
</script><section id="개요" class="level2"><h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>지난 9월 R Studio 2023.09.0 버전이 공개되었습니다. 새롭게 추가된 여러 기능 중에서 .qmd 파일을 이용해 학술 논문을 작성하고 웹페이지로 발행할 수 있는 <strong>Quarto Manuscript Project</strong>를 소개합니다. 본 게시글은 <a href="https://quarto.org/docs/manuscripts/">Quarto manuscript 공식 문서</a>를 참고해 작성되었습니다.</p>
</section><section id="quarto-manuscript-소개" class="level2"><h2 class="anchored" data-anchor-id="quarto-manuscript-소개">Quarto Manuscript 소개</h2>
<p>Quarto Manuscript는 .qmd 파일을 통해 학술 논문을 작성할 수 있는 프로젝트로, 다음과 같은 장점을 갖습니다.</p>
<ol type="1">
<li>그림, 표, 수식, 인용 정보, 코드 블록 등 학술 논문에 필요한 모든 요소를 포함한 원고를 작성할 수 있습니다.</li>
<li>작성한 원고를 웹사이트로 발행할 수 있어 공유가 쉽습니다.</li>
<li>원고를 PDF, docx, 압축 파일 등 다양한 형식으로 손쉽게 다운로드할 수 있습니다.</li>
</ol>
<p>Quarto Manuscript를 활용해 작성한 학술 논문 예시는 <a href="https://quarto-ext.github.io/manuscript-template-jupyter/">여기</a>에서 확인할 수 있습니다. 이 예시를 참고해 Quarto manuscript 원고를 작성하고 웹사이트로 발행해보겠습니다.</p>
</section><section id="quarto-manuscript로-학술-논문-작성하기" class="level2"><h2 class="anchored" data-anchor-id="quarto-manuscript로-학술-논문-작성하기">Quarto Manuscript로 학술 논문 작성하기</h2>
<section id="준비하기" class="level3"><h3 class="anchored" data-anchor-id="준비하기">1. 준비하기</h3>
<p>Quarto Manuscript를 사용하기에 앞서 (1) <a href="https://posit.co/downloads/">2023.09 버전 이상의 RStudio</a>와 (2) <a href="https://quarto.org/docs/download/prerelease">1.4 버전 이상의 Quarto</a>를 설치해야 합니다.</p>
</section><section id="원고-작성하기" class="level3"><h3 class="anchored" data-anchor-id="원고-작성하기">2. 원고 작성하기</h3>
<p>RStudio에서 <strong>New project &gt; New Directory &gt; Quarto Manuscript</strong>를 선택해 프로젝트를 생성합니다.</p>
<p>학술 논문 원고는 <code>index.qmd</code> 파일에서 작성합니다. 우선 작성할 논문의 제목, 저자, 키워드, 초록과 같은 정보를 아래 예시와 같이 YAML header에 입력합니다.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>index.qmd</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># YAML head 작성 예시</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span>
<span id="cb1-4">title<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> La Palma Earthquakes</span>
<span id="cb1-5">author<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb1-6">  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> Steve Purves</span>
<span id="cb1-7">    orcid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0000-0002-0760-5497</span></span>
<span id="cb1-8">    corresponding<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> true</span>
<span id="cb1-9">    email<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> steve<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>curvenote.com</span>
<span id="cb1-10">    roles<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb1-11">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Investigation</span>
<span id="cb1-12">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Project administration</span>
<span id="cb1-13">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Software</span>
<span id="cb1-14">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Visualization</span>
<span id="cb1-15">    affiliations<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb1-16">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Curvenote</span>
<span id="cb1-17">  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> Rowan Cockett</span>
<span id="cb1-18">    orcid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0000-0002-7859-8394</span></span>
<span id="cb1-19">    corresponding<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> false</span>
<span id="cb1-20">    roles<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> []</span>
<span id="cb1-21">    affiliations<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb1-22">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Curvenote</span>
<span id="cb1-23">keywords<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb1-24">  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> La Palma</span>
<span id="cb1-25">  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Earthquakes</span>
<span id="cb1-26">abstract<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb1-27">  In September <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2021</span>, a significant jump <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> seismic activity on the island of La <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Palma</span> (Canary Islands, Spain) signaled the start of a volcanic crisis that still continues at the time of writing. Earthquake data is continually collected and published by the Instituto Geográphico <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Nacional</span> (IGN). ...</span>
<span id="cb1-28">plain<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>language<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>summary<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb1-29">  Earthquake data <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> the island of La Palma from the September <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2021</span> eruption is found ...</span>
<span id="cb1-30">key<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>points<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb1-31">  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> A web scraping script was developed to pull data from the Instituto Geogràphico Nacional into a machine<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>readable form <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> analysis</span>
<span id="cb1-32">  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> Earthquake events on La Palma are consistent with the presence of both mantle and crustal reservoirs.</span>
<span id="cb1-33">date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> last<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>modified</span>
<span id="cb1-34">bibliography<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> references.bib</span>
<span id="cb1-35">citation<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb1-36">  container<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>title<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> Earth and Space Science</span>
<span id="cb1-37">number<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>sections<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> true</span>
<span id="cb1-38"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">---</span></span></code></pre></div>
</div>
</div>
<p>YAML header 아래에 본문을 작성합니다. 본문은 Quarto markdown 형식으로 작성하며, 기본적인 사용법은 <a href="https://quarto.org/docs/authoring/markdown-basics.html">Quarto Markdown Basics 공식 문서</a> 혹은 R markdown 기초를 다루었던 <a href="https://blog.zarathu.com/posts/2019-01-03-rmarkdown/#r-chunk">이전 게시글</a>에서 참고할 수 있습니다. 본 게시글에서는 논문 작성에 필요한 몇 가지 기능을 중점적으로 살펴보겠습니다.</p>
<section id="sec-figure" class="level4"><h4 class="anchored" data-anchor-id="sec-figure">2.1. figure 삽입하기</h4>
<p>r 코드 블록을 활용해 figure를 삽입할 수 있습니다. 아래 예시와 같이 figure을 생성하는 코드와 함께 figure의 label, caption, alt text, width, height 등을 입력합니다. 본문에는 figure와 캡션만 표시되고 코드는 Article Notebook에서 모아 볼 수 있습니다. 본문에서 <code>@fig-timeline</code>와 같이 <code>@</code> 기호와 figure의 label을 입력하면 figure을 인용할 수 있습니다.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>index.qmd</strong></pre>
</div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># figure 작성 예시</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ```{r}</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">eruptions</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1492</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1585</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1646</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1677</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1712</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1949</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1971</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2021</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">n_eruptions</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/length.html">length</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">eruptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ```</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ```{r}</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| label: fig-timeline</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| fig-cap: Timeline of recent earthquakes on La Palma</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| fig-alt: An event plot of the years of the last 8 eruptions on La Palma.</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| fig-height: 1.5</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| fig-width: 6</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/graphics/par.html">par</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>mar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/graphics/plot.default.html">plot</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">eruptions</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/rep.html">rep</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">n_eruptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, </span>
<span>  pch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span>, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/graphics/axis.html">axis</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/graphics/box.html">box</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ```</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ```{r}</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#| output: false</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">avg_years_between_eruptions</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/mean.html">mean</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/diff.html">diff</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">eruptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">n_eruptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">avg_years_between_eruptions</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#```</span></span></code></pre></div>
</div>
</div>
</section><section id="다른-.qmd-파일에-작성한-plot-삽입하기" class="level4"><h4 class="anchored" data-anchor-id="다른-.qmd-파일에-작성한-plot-삽입하기">2.2. 다른 .qmd 파일에 작성한 plot 삽입하기</h4>
<p>Section&nbsp;3.2.1 에서와 같이 간단한 그림이 아닌, 연구에서 사용된 데이터를 통해 plot을 그리고 이를 본문에 삽입하기 위해서는 디렉토리에 <code>notebooks</code> 폴더를 생성해야 합니다. 생성한 notebooks 폴더 안에 데이터 파일을 넣고 새로운 .qmd 파일을 만들어 plot을 그리는 r 코드 블록을 작성합니다.</p>
<p>이후 <code>index.qmd</code> 파일로 돌아와 아래와 같은 코드를 작성하면 plot이 삽입됩니다.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>index.qmd</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># explore-earthquakes.qmd 파일에 작성한 fig-spatial-plot 삽입 예시</span></span>
<span id="cb3-2"></span>
<span id="cb3-3">{{<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> embed notebooks<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>explore<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>earthquakes.qmd<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#fig-spatial-plot &gt;}}</span></span></code></pre></div>
</div>
</div>
<p>notebooks 폴더의 .qmd 파일에서 작성한 코드는 마찬가지로 Article Notebook에서 모아 볼 수 있습니다.</p>
</section><section id="참고문헌-작성하기" class="level4"><h4 class="anchored" data-anchor-id="참고문헌-작성하기">2.3. 참고문헌 작성하기</h4>
<p>참고문헌은 아래 예시와 같이 <code>references.bib</code> 파일에 BibTeX 형태로 작성합니다. <code>index.qmd</code> 파일의 본문에서 <code>@marrero2019</code>와 같이 <code>@</code> 기호와 참고문헌의 label을 입력하면 참고문헌을 인용할 수 있습니다.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>references.bib</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 참고문헌 작성 예시</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>article{marrero2019,</span>
<span id="cb4-4">  author <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> {Marrero, Jos{\<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' e} and Garc{</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\'</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> i}a, Alicia and Berrocoso, Manuel and Llinares, {</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\'</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> A}ngeles and Rodr{</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\'</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> i}guez-Losada, Antonio and Ortiz, R.},</span></span>
<span id="cb4-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  journal = {Journal of Applied Volcanology},</span></span>
<span id="cb4-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  year = {2019},</span></span>
<span id="cb4-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  month = {7},</span></span>
<span id="cb4-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  pages = {},</span></span>
<span id="cb4-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  title = {Strategies for the development of volcanic hazard maps in monogenetic volcanic fields: the example of {La} {Palma} ({Canary} {Islands})},</span></span>
<span id="cb4-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  volume = {8},</span></span>
<span id="cb4-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  doi = {10.1186/s13617-019-0085-5},</span></span>
<span id="cb4-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</div>
</section><section id="journal-template-적용하기" class="level4"><h4 class="anchored" data-anchor-id="journal-template-적용하기">2.4. journal template 적용하기</h4>
<p>journal template은 PDF에 적용됩니다. .qmd 파일을 PDF 파일로 내보내려면 <code>tinytex</code> 패키지가 설치되어 있어야 합니다. 아래 코드를 통해 패키지를 설치하겠습니다.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>console</strong></pre>
</div>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tinytex 설치 후 로드</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/utils/installed.packages.html">installed.packages</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tinytex"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tinytex</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/tinytex/man/install_tinytex.html">install_tinytex</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://github.com/rstudio/tinytex">tinytex</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>console</strong></pre>
</div>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 패키지 설치 확인(True가 출력되면 성공적으로 설치된 것임)</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tinytex</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/tinytex/man/is_tinytex.html">is_tinytex</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
</div>
<p>journal format을 추가하기 위해 <a href="https://quarto.org/docs/extensions/listing-journals.html">Quarto Extensions: Journal Articles</a>를 참고해 터미널에 아래 코드를 실행시켜 익스텐션을 설치합니다.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>terminal</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># acs format 설치 예시</span></span>
<span id="cb7-2"></span>
<span id="cb7-3">quarto install extension quarto<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>journals<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>acs</span></code></pre></div>
</div>
</div>
<p>이후 <code>_quarto.yml</code> 파일의 <code>format:</code>에 <code>acs-pdf: default</code>를 추가하면 acs format이 적용됩니다.</p>
<p>웹페이지를 발행한 뒤 PDF 파일을 다운로드하면 아래와 같이 journal format이 적용된 것을 확인할 수 있습니다.</p>
<figure style="text-align: center;" class="figure"><div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><img src="https://blog.zarathu.com/jp/posts/2023-10-19-quarto-manuscript/img/acs.png" width="500px" class="figure-img"></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><img src="https://blog.zarathu.com/jp/posts/2023-10-19-quarto-manuscript/img/elsevier.png" width="500px" class="figure-img"></p>
</div>
</div>
</div>
<figcaption>
(좌) acs format, (우) elsevier format 적용 예시
</figcaption></figure></section></section><section id="깃허브-페이지를-통해-웹으로-발행하기" class="level3"><h3 class="anchored" data-anchor-id="깃허브-페이지를-통해-웹으로-발행하기">3. 깃허브 페이지를 통해 웹으로 발행하기</h3>
<p>원고를 깃허브 페이지를 통해 웹으로 발행하기 위해 <code>_quarto.yml</code>파일의 <code>project:</code>에 <code>output-dir: docs</code> 설정을 추가합니다. 이후 <code>index.qmd</code> 파일으로 돌아와 터미널에 <code>quarto render</code>을 입력합니다. 모든 변경사항을 깃허브에 commit 후 push 하면, 원고가 깃허브 페이지를 통해 웹으로 발행됩니다. 깃허브의 해당 레포지토리의 <strong>settings &gt; pages</strong>에서 웹페이지 링크를 확인할 수 있습니다.</p>
</section></section><section id="마치며" class="level2"><h2 class="anchored" data-anchor-id="마치며">마치며</h2>
<p>이번 게시글에서는 새롭게 공개된 Quarto Manuscript를 통해 학술 논문 원고를 작성하고 깃허브 페이지를 통해 웹으로 발행하는 방법을 알아보았습니다. Quarto Manuscript를 통해 논문 작성과 공유가 더욱 편리하게 이루어지기를 기대하며 글을 마칩니다.</p>


</section><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/">CC BY-NC 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{han2023,
  author = {Han, Jihee},
  title = {Quarto {Manuscripts를} {이용해} {학술} {논문} {작성하기}},
  date = {2023-10-18},
  url = {https://blog.zarathu.com/jp/posts/2023-10-19-quarto-manuscript},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-han2023" class="csl-entry quarto-appendix-citeas">
Han, Jihee. 2023. <span>“Quarto Manuscripts를 이용해 학술 논문
작성하기.”</span> October 18, 2023. <a href="https://blog.zarathu.com/jp/posts/2023-10-19-quarto-manuscript">https://blog.zarathu.com/jp/posts/2023-10-19-quarto-manuscript</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>quarto</category>
  <category>quarto manuscript</category>
  <category>article</category>
  <guid>https://blog.zarathu.com/jp/posts/2023-10-19-quarto-manuscript/</guid>
  <pubDate>Tue, 17 Oct 2023 15:00:00 GMT</pubDate>
  <media:content url="https://blog.zarathu.com/jp/posts/2023-10-19-quarto-manuscript/img/logo.png" medium="image" type="image/png" height="35" width="144"/>
</item>
<item>
  <title>R로 만든 PPT 슬라이드 고해상도로 저장하기</title>
  <dc:creator>Jihee Han</dc:creator>
  <link>https://blog.zarathu.com/jp/posts/2023-09-27-high-dpi-slide/</link>
  <description><![CDATA[ <!-- Google tag (gtag.js) --><script async="" src="https://www.googletagmanager.com/gtag/js?id=G-L0DYYSH9KM"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L0DYYSH9KM');
</script><section id="개요" class="level2"><h2 class="anchored" data-anchor-id="개요">개요</h2>
<p><a href="https://blog.zarathu.com/posts/2023-07-01-officer/" target="_blank"> 지난 게시글</a>에서 <code>officer</code> 패키지를 활용해 R으로 만든 그림을을 벡터 이미지로 저장하는 방법을 다루었습니다. 이렇게 저장한 벡터 이미지는 확대를 해도 깨지지 않고 파워포인트에서 편집이 가능하다는 장점이 있습니다. 하지만 파워포인트 슬라이드를 그림으로 내보내기하면 저해상도의 이미지로 저장된다는 문제가 있습니다. 따라서 이번 글에서는 파워포인트로 저장한 벡터 이미지를 300DPI의 고해상도로 내보내는 방법을 알아보고자 합니다.</p>
</section><section id="dpi란" class="level2"><h2 class="anchored" data-anchor-id="dpi란">DPI란?</h2>
<div style="text-align: center;">
<figure style="display: inline-block;" class="figure"><img src="https://blog.zarathu.com/jp/posts/2023-09-27-high-dpi-slide/img/DPI.png" text-align="center" class="figure-img"><figcaption>
이미지 출처: https://itwiki.kr/w/DPI
</figcaption></figure>
</div>
<p>DPI란 <strong>Dot Per Inch</strong>의 약자로, 인쇄물에서 1인치(= 2.54cm)에 몇 개의 점이 찍히는지를 나타내는 단위입니다. DPI 값이 높을 수록 고해상도의 결과물을 얻을 수 있으며, 깨끗한 이미지를 얻기 위해서는 300DPI 이상이 권장됩니다.</p>
</section><section id="고해상도로-슬라이드-내보내기" class="level2"><h2 class="anchored" data-anchor-id="고해상도로-슬라이드-내보내기">고해상도로 슬라이드 내보내기</h2>
<section id="officer-패키지를-사용해-파워포인트로-이미지-저장하기" class="level3"><h3 class="anchored" data-anchor-id="officer-패키지를-사용해-파워포인트로-이미지-저장하기">1. officer 패키지를 사용해 파워포인트로 이미지 저장하기</h3>
<p>우선 지난 게시글에서 다루었던 <code>officer</code>과 <code>rvg</code> 패키지를 활용해 벡터 이미지를 파워포인트로 저장하겠습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://ardata-fr.github.io/officeverse/">officer</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://ardata-fr.github.io/officeverse/">rvg</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://ggplot2.tidyverse.org">ggplot2</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 생성</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">plotObj</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">iris</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://ggplot2.tidyverse.org/reference/ggplot.html">ggplot</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://ggplot2.tidyverse.org/reference/aes.html">aes</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Sepal.Length</span>, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Sepal.Width</span>, color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Species</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://ggplot2.tidyverse.org/reference/geom_point.html">geom_point</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ppt</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/read_pptx.html">read_pptx</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ppt 생성, 별도의 오브젝트로 저장하지 않아도 됨.</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/add_slide.html">add_slide</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 슬라이드 추가</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/ph_with.html">ph_with</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 추가</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/rvg/reference/dml.html">dml</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ggobj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">plotObj</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, </span>
<span>    location <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/ph_location_fullsize.html">ph_location_fullsize</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> </span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/print.html">print</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'image.pptx'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ppt 저장 </span></span></code></pre></div>
</div>
<p>파워포인트의 <strong>파일</strong> 탭에서 <strong>다른 이름으로 저장/이미지로 저장</strong>을 선택하면 슬라이드가 각각 JPEG 파일로 저장됩니다. 저장된 이미지의 속성을 살펴보면 파워포인트 이미지 내보내기의 디폴드 해상도인 <strong>96DPI</strong>로 저장된 것을 확인할 수 있습니다.</p>
<div class="columns" style="text-align: center;">
<div class="column" style="width:70%;">
<figure class="figure"><img src="https://blog.zarathu.com/jp/posts/2023-09-27-high-dpi-slide/img/lowResolution.png" width="80%" class="figure-img"></figure>
</div><div class="column" style="width:30%;">
<figure class="figure"><img src="https://blog.zarathu.com/jp/posts/2023-09-27-high-dpi-slide/img/dpi96.png" width="90%" class="figure-img"></figure>
</div>
</div>
</section><section id="내보내기-해상도-설정-변경하기" class="level3"><h3 class="anchored" data-anchor-id="내보내기-해상도-설정-변경하기">2. 내보내기 해상도 설정 변경하기</h3>
<p>슬라이드를 고해상도 이미지로 저장하려면, 파워포인트의 내보내기 해상도 설정을 변경해야 합니다. 설정을 변경하기에 앞서, 모든 Windows 기반 프로그램을 종료하시길 바랍니다. 실행 중인 프로그램은 <code>Ctrl + Shift + ESC</code> 단축키를 통해 확인할 수 있습니다.</p>
<ol type="1">
<li><p><strong>시작</strong> 단추를 우클릭한 뒤, <strong>실행</strong>을 선택합니다.</p></li>
<li><p><strong>열기</strong> 상자에 <strong>regedit</strong>을 입력한 다음 <strong>확인</strong>을 선택합니다.</p></li>
<li>
<p>사용 중인 파워포인트 버전에 따라 아래 레지스트리 하위 키를 찾습니다.</p>
<p>파워포인트 버전별 레지스트리 하위 키는 다음과 같습니다.</p>
<figure class="figure"><p><img src="https://blog.zarathu.com/jp/posts/2023-09-27-high-dpi-slide/img/key.png" width="80%" class="figure-img"></p>
</figure>
</li>
<li><p><strong>Option</strong> 하위 키를 선택하고, <strong>편집</strong> 탭의 <strong>새로 만들기/DWORD(32비트) 값</strong>을 선택합니다</p></li>
<li><p><strong>ExportBitmapResolution</strong>을 입력한 다음 엔터키를 누릅니다.</p></li>
<li><p><strong>ExportBitmapResolution</strong>이 선택되어 있는지 확인한 다음 <strong>편집</strong> 탭의 <strong>수정</strong>을 선택합니다.</p></li>
<li><p><strong>DWORD 값 편집</strong> 대화 상자에서 <strong>10진수</strong>를 선택한 뒤, <strong>값 데이터</strong>에 <strong>300</strong>을 입력하고 <strong>확인</strong>을 선택합니다.</p></li>
</ol>
<figure style="text-align: center;" class="figure"><img src="https://blog.zarathu.com/jp/posts/2023-09-27-high-dpi-slide/img/editor.png" width="70%" class="figure-img"></figure><ol start="8" type="1">
<li>
<strong>파일</strong> 메뉴에서 <strong>끝내기</strong>를 선택해 레지스트리 편집기를 종료합니다.</li>
</ol></section><section id="슬라이드를-고해상도-그림으로-내보내기" class="level3"><h3 class="anchored" data-anchor-id="슬라이드를-고해상도-그림으로-내보내기">3. 슬라이드를 고해상도 그림으로 내보내기</h3>
<p>앞서 저장했던 파워포인트 파일을 다시 열어 <strong>파일</strong> 탭의 <strong>다른 이미지로 저장/이미지로 저장</strong>을 선택해 다시 슬라이드를 JPEG 파일로 저장합니다. 이번에는 <strong>300DPI</strong>의 고해상도 이미지로 잘 저장된 것을 확인할 수 있습니다.</p>
<div class="columns" style="text-align: center;">
<div class="column" style="width:70%;">
<figure class="figure"><img src="https://blog.zarathu.com/jp/posts/2023-09-27-high-dpi-slide/img/highResolution.png" width="80%" class="figure-img"></figure>
</div><div class="column" style="width:30%;">
<figure class="figure"><img src="https://blog.zarathu.com/jp/posts/2023-09-27-high-dpi-slide/img/dpi300.png" width="90%" class="figure-img"></figure>
</div>
</div>
</section></section><section id="정리" class="level2"><h2 class="anchored" data-anchor-id="정리">정리</h2>
<p>이번 글에서는 레지스트리 편집기에서 해상도 설정을 변경하여 파워포인트 슬라이드를 고해상도 이미지로 내보내는 방법에 대해 알아보았습니다. <code>officer</code> 패키지를 다룬 지난 글과 함께 R을 통해 이미지를 자유자재로 다루는 데 도움이 되기를 기대합니다.</p>


</section><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/">CC BY-NC 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{han2023,
  author = {Han, Jihee},
  title = {R로 {만든} {PPT} {슬라이드} {고해상도로} {저장하기}},
  date = {2023-09-27},
  url = {https://blog.zarathu.com/jp/posts/2023-09-27-high-dpi-slide},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-han2023" class="csl-entry quarto-appendix-citeas">
Han, Jihee. 2023. <span>“R로 만든 PPT 슬라이드 고해상도로
저장하기.”</span> September 27, 2023. <a href="https://blog.zarathu.com/jp/posts/2023-09-27-high-dpi-slide">https://blog.zarathu.com/jp/posts/2023-09-27-high-dpi-slide</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>powerpoint</category>
  <category>visualization</category>
  <guid>https://blog.zarathu.com/jp/posts/2023-09-27-high-dpi-slide/</guid>
  <pubDate>Tue, 26 Sep 2023 15:00:00 GMT</pubDate>
  <media:content url="https://blog.zarathu.com/jp/posts/2023-09-27-high-dpi-slide/img/DPI.png" medium="image" type="image/png" height="86" width="144"/>
</item>
<item>
  <title>electron forge를 활용하여 Standalone Shiny Application 제작하기</title>
  <dc:creator>Jinhwan Kim</dc:creator>
  <link>https://blog.zarathu.com/jp/posts/2023-09-18-shinyexe/</link>
  <description><![CDATA[ 
<!-- Google tag (gtag.js) -->
<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-L0DYYSH9KM"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L0DYYSH9KM');
</script>





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>이번 글에서는 R Shiny 앱을 별도의 설치나 외부 연결 없이 폐쇄 환경에서도 실행할 수 있는 (Standalone) <strong>exe</strong> 파일로 패키징하는 과정을 소개합니다.</p>
</section>
<section id="standalone-app" class="level2">
<h2 class="anchored" data-anchor-id="standalone-app">Standalone App</h2>
<p>먼저 글의 맥락을 더 효과적으로 전달하기 위해 <strong>Standalone App</strong>에 대해 간단히 정의해보겠습니다.</p>
<p><em>An app that can run independently without any external help.</em></p>
<p>즉, 외부에 의존하지 않고 독립적으로 실행 가능한 앱으로 정의하고 싶은데요.</p>
<p>여기서 <strong>외부</strong>에는 보통 Shiny를 실행하기 위해 쓰이는 웹 브라우저(크롬)가 포함될 수 있습니다.</p>
<p>한편, R과 Rstudio 또한 Shiny를 실행하기 위해서 (로컬에서) 필요한 <strong>외부</strong>로 볼 수 있습니다.</p>
<p>이러한 외부의 도움을 받지 않고, 다운로드 이후 압축만 풀어서 바로 실행할 수 있는 것을 Standalone App이라고 하며, 이러한 예시에는 (아는 사람은 아는 ㅎㅎ) <strong>피카츄 배구.exe</strong>가 있습니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-18-shinyexe/img/pikachu.png" width="100%" text-align="center">
</p>
<p><em>출처: https://gbworld.tistory.com/1362</em></p>
<p>이후 내용에서 소개되는 Shiny를 standalone app으로 만드는 것은 일반적인 R Shiny 개발과는 상당히 다르고 동시에 복잡합니다.</p>
<p>그렇다면 Standalone app으로 만드는 것은 Shiny를 사용자에게 제공하는 다른 방법들과 어떤 차이점이 있을까요?</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-18-shinyexe/img/flow.png" width="100%" text-align="center">
</p>
<p>이에는 여러가지를 생각해 볼 수 있지만 크게 2가지의 차이점이 있습니다.</p>
<ol type="1">
<li>사용자 경험</li>
</ol>
<p>electron으로 만들어진 <strong>Standalone App은 Shiny를 제공하는 서버와의 네트워크 연결이 불필요</strong>합니다. Shiny를 사용하기 위해 브라우저를 열고 특정 URL에 접속하는 대신 설치된 프로그램을 실행하는 것으로 충분합니다.</p>
<p>이로 인해 네트워크와의 데이터를 주고 받는 과정에 리소스가 쓰이지 않고, 사용자의 (로컬 PC) 자원을 활용하기 때문에 살짝 더 좋은 퍼포먼스를 보일 수 있습니다.</p>
<ol start="2" type="1">
<li>폐쇄성 환경</li>
</ol>
<p>또한 네트워크가 연결되지 않는다는 점은 <strong>shiny에 입력하는 값이 사용자의 PC 외부로 나가지 않고, 동시에 외부의 리소스가 PC에 들어오지 않는다</strong>는 이야기이기도 합니다.</p>
<p>그렇기 때문에 금융이나 병원등 망분리 / 폐쇄 되어 있는 개발 환경에서도 Shiny를 실행할 수 있고 더 뛰어난 보안성을 가지게 됩니다. (단, Shiny가 계산을 위해 외부의 API 같은 자원을 사용하려면 네트워크 연결이 필요합니다)</p>
</section>
<section id="electron" class="level2">
<h2 class="anchored" data-anchor-id="electron">Electron</h2>
<p>Electron (정확히는 <a href="https://www.electronjs.org/" target="_blank">electron.js</a>) 은 크로미움 (크롬)과 node.js를 활용하여 html과 css, js 같은 웹 개발 결과물 (shiny가 이에 포함됩니다) 을 임베디드 형태로 만들 수 있는 프레임워크입니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-18-shinyexe/img/electron.png" width="100%" text-align="center">
</p>
<p>Standalone App을 만들기 위해서 electron의 기술적인 원리를 이해할 필요는 없지만, 흐름을 표현하면 아래와 같습니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-18-shinyexe/img/electron-shiny.webp" width="100%" text-align="center">
</p>
<p>이 기술을 활용하여 shiny로 standalone app을 만들려는 시도는 꽤 오래 전부터 있었고, 2020년에 공유된 <a href="https://www.r-bloggers.com/2020/10/turn-a-shiny-application-into-a-tablet-or-desktop-app/" target="_blank">Turn a shiny application into a tablet or desktop app</a> 아티클도 있지만, 관련된 자료들이 2022년을 마지막으로 아카이브되어 업데이트 되지 않았기 때문에 최신의 내용을 반영한 업데이트가 필요했습니다.</p>
<p>차라투에서는 연구를 통해 기존의 내용 중 일부를 최적화하고, 최근 내용들을 반영한 뒤, <a href="https://github.com/zarathucorp/shiny-electron-template-windows-2023" target="_blank">Windows</a>와 <a href="https://github.com/zarathucorp/shiny-electron-template-m1-2023" target="_blank">M1 Mac</a> 2개의 OS에서 Standalone App을 개발하여 분리 환경에서 Shiny를 사용해야 하는 (공공기관을 포함한) 고객에게 제공하였고, 이후 개발에 활용할 수 있는 템플릿과 가이드를 제공하고 있습니다.</p>
<p><em>국내에는 윈도우 사용자가 더 많기 때문에, 이번 글에서는 윈도우를 기준으로 방법을 소개합니다.</em></p>
</section>
<section id="개발-준비" class="level2">
<h2 class="anchored" data-anchor-id="개발-준비">개발 준비</h2>
<p>Standalone shiny app을 개발하기 위해 shiny 개발에 필요한 R과 Rstudio 외에 추가 설치가 필요합니다.</p>
<section id="node.js-설치" class="level3">
<h3 class="anchored" data-anchor-id="node.js-설치">1. <a href="https://nodejs.org/ko" target="_blank">node.js</a> 설치</h3>
<p><em>글이 작성되는 23년 9월을 기준으로, LTS인 18.17.1 버전을 설치합니다.</em></p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-18-shinyexe/img/node.png" width="100%" text-align="center">
</p>
<p>이제 Rstudio를 <strong>관리자 권한으로 실행</strong>합니다. (아이콘을 오른쪽 클릭 후 선택)</p>
<p>정상적으로 설치가 되었다면 Rstudio의 터미널에서 <code>node -v</code>, <code>npm -v</code>를 실행하여 설치 버전을 확인할 수 있습니다.</p>
</section>
<section id="electron-forge-설치" class="level3">
<h3 class="anchored" data-anchor-id="electron-forge-설치">2. electron-forge 설치</h3>
<p><code>electron-forge</code>는 electron을 조금 더 쉽게 사용할 수 있게 하는 패키지라고 생각하셔도 좋습니다.</p>
<p>이는 npm을 사용해 (R의 <code>install.packages</code>와 유사) 설치할 수 있으며, 마찬가지로 Rstudio의 터미널에서 아래의 명령어를 입력하여 설치합니다.</p>
<p><code>npm i -g @electron-forge/cli</code></p>
</section>
<section id="템플릿-포크-클론" class="level3">
<h3 class="anchored" data-anchor-id="템플릿-포크-클론">3. 템플릿 포크 / 클론</h3>
<p>차라투 github에서 제공하는 템플릿을 자신의 계정에 포크 후, 클론하여 로컬 PC에 다운로드 받습니다.</p>
<p><a href="https://github.com/zarathucorp/shiny-electron-template-windows-2023" class="uri">https://github.com/zarathucorp/shiny-electron-template-windows-2023</a></p>
<div class="columns" style="text-align: center;">
<div class="column">
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-18-shinyexe/img/fork.png" width="100%" text-align="center">
</p>
</div><div class="column">
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-18-shinyexe/img/clone.png" width="100%" text-align="center">
</p>
</div>
</div>
</section>
<section id="r-project-열기" class="level3">
<h3 class="anchored" data-anchor-id="r-project-열기">4. R project 열기</h3>
<p>템플릿 폴더의 <strong>shiny-elecgtron-template-windows-2023.Rproj</strong>를 Rstudio에서 실행합니다.</p>
<p>이제 Rstudio 터미널의 작업 디렉토리가 해당 프로젝트의 위치로 변경됩니다.</p>
</section>
</section>
<section id="electron-app-만들기" class="level2">
<h2 class="anchored" data-anchor-id="electron-app-만들기">Electron App 만들기</h2>
<section id="electron-app-템플릿을-설치" class="level3">
<h3 class="anchored" data-anchor-id="electron-app-템플릿을-설치">1. electron app 템플릿을 설치</h3>
<p>Rstudio의 터미널에서 <code>npx create-electron-app myApp</code>을 실행하여 템플릿을 설치합니다.</p>
<p>이때 <code>myApp</code>이 Standalone App의 이름이 되며 <code>app</code>을 제외한 다른 이름으로 변경할 수 있습니다.</p>
<p>정상적으로 실행되었다면 디렉토리에 <code>myApp</code> 폴더가 새롭게 생기는 것을 확인할 수 있습니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-18-shinyexe/img/myApp.png" width="100%" text-align="center">
</p>
</section>
<section id="github-템플릿의-파일을-myapp으로-이동" class="level3">
<h3 class="anchored" data-anchor-id="github-템플릿의-파일을-myapp으로-이동">2. github 템플릿의 파일을 myApp으로 이동</h3>
<p>electron app 에서 기본으로 제공하는 템플릿은 shiny를 개발하기에는 약간 다른 내용들이 있어서 차라투 github에 제공된 파일로 교체합니다.</p>
<p>이때 만들어진 myApp으로 이동해야 하는 파일은 아래의 5개입니다.</p>
<ul>
<li>shiny (폴더)</li>
<li>src (폴더)</li>
<li>add-cran-binary-pkgs.R</li>
<li>get-r-win.sh</li>
<li>start-shiny.R</li>
</ul>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-18-shinyexe/img/move.png" width="100%" text-align="center">
</p>
<p>이후 Rstudio의 터미널에서 <code>cd myApp</code>으로 디렉토리를 이동합니다.</p>
</section>
<section id="standalone-r-설치" class="level3">
<h3 class="anchored" data-anchor-id="standalone-r-설치">3. Standalone R 설치</h3>
<p>electron 에 포함 시킬 local R을 현재 프로젝트에 설치합니다.</p>
<p>단, 이때 기존에 사용중인 R의 버전과 동일한 버전을 설치해야 하며, 23년 9월에 최신 버전인 4.3.1을 기준으로 사용합니다.</p>
<p>local R은 Rstudio의 터미널에서 <code>sh ./get-r-win.sh</code>를 실행하는 것으로 설치할 수 있습니다.</p>
<p>정상적으로 실행되었다면 <strong>Done.</strong> 메세지와 함께 폴더에 <code>r-win</code> 이라는 폴더가 새롭게 만들어 진 것을 확인할 수 있습니다. <code>r-win</code> 내부의 구조는 아래와 같습니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-18-shinyexe/img/r-win.png" width="100%" text-align="center">
</p>
</section>
<section id="shiny-패키지-설치" class="level3">
<h3 class="anchored" data-anchor-id="shiny-패키지-설치">4. Shiny 패키지 설치</h3>
<p>예시에서 사용하는 shiny는 shiny 폴더의 <code>app.R</code> 코드를 사용합니다. (shiny 외의 다른 패키지를 사용하지 않는다면 해당 코드로 바꿔도 작동합니다) 이를 실행하기 위해 기본 R 에서 제공하는 패키지외에 (shiny를 포함한) 추가 CRAN 패키지를 설치합니다.</p>
<p>Rstudio의 터미널에서 <code>Rscript add-cran-binary-pkgs.R</code>을 입력하여 패키지를 설치합니다.</p>
<p>실행전 (기본 R 패키지)</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-18-shinyexe/img/before.png" width="100%" text-align="center">
</p>
<p>실행후 (<strong>shiny를 포함한</strong> 패키지)</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-18-shinyexe/img/after.png" width="100%" text-align="center">
</p>
</section>
<section id="node-패키지-설치" class="level3">
<h3 class="anchored" data-anchor-id="node-패키지-설치">5. node 패키지 설치</h3>
<p>package.json의 내용을 다음과 같이 <code>[fix] package-json</code>의 내용으로 복사 붙여넣기합니다.</p>
<p>이때 <code>author</code>와 <code>repository</code>는 본인의 내용에 맞게 수정해야합니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-18-shinyexe/img/package-json.png" width="100%" text-align="center">
</p>
<p>이후 Rstudio 터미널에서 <code>npm install</code>을 입력하여 패키지를 설치할 수 있습니다.</p>
</section>
</section>
<section id="shiny-실행-및-패키징" class="level2">
<h2 class="anchored" data-anchor-id="shiny-실행-및-패키징">Shiny 실행 및 패키징</h2>
<p><code>app.R</code>은 개발 의도대로, 정상적으로 실행된다는 가정하에 Electron으로 shiny 를 실행하기 위해 Rstudio의 터미널에 <code>electron-forge start</code>를 입력합니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-18-shinyexe/img/start.gif" width="100%" text-align="center">
</p>
<p>큰 문제 없이 실행이 되었다면 이제 <code>electron-forge make</code>로 패키지를 만들 차례입니다.(zip)</p>
<p>패키지 빌드를 위한 약간의 시간이 지난 후 <code>out</code> 디렉토리에서 앱과 zip 파일을 확인할 수 있습니다.</p>
</section>
<section id="정리" class="level2">
<h2 class="anchored" data-anchor-id="정리">정리</h2>
<p>이번 글에서는 Standalone의 특징과 electron을 활용하여 shiny를 standalone app으로 만드는 방법을 다뤄봤습니다.</p>
<p>Electron을 활용하여 Standalone Shiny app을 만드는 것은 소개된 것처럼 R외의 개발 지식을 필요로 하기 때문에 경험이 없다면 다소 복잡하게 느껴질 수 있습니다. (글에서 다루지 않은 내용들도 있습니다)</p>
<p>특히 electron 내부에서 local R과 electron을 위한 node 패키지들을 이미 포함해야 하기 때문에 간단한 shiny app도 용량이 200 메가바이트 정도부터 시작한다는 치명적인 단점도 존재합니다.</p>
<p>그럼에도 불구하고 이는 Standalone 특유의 몇가지 특징들이 있어 사용자의 환경에 따라 적합한 shiny 개발 방법으로 고려해볼 수 있는 선택지 중 하나입니다.</p>
<div class="callout callout-style-simple callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
🤗 Let’s talk
</div>
</div>
<div class="callout-body-container callout-body">
<p>차라투에서는 R과 Shiny에 대한 컨설팅을 제공합니다. 진행중인 프로젝트 관련하여 도움이 필요하시다면 jinhwan@zarathu.com 으로 알려주세요!</p>
</div>
</div>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/">CC BY-NC 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{kim2023,
  author = {Kim, Jinhwan},
  title = {Electron {forge를} {활용하여} {Standalone} {Shiny}
    {Application} {제작하기}},
  date = {2023-09-18},
  url = {https://blog.zarathu.com/jp/posts/2023-09-18-shinyexe},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-kim2023" class="csl-entry quarto-appendix-citeas">
Kim, Jinhwan. 2023. <span>“Electron Forge를 활용하여 Standalone Shiny
Application 제작하기.”</span> September 18, 2023. <a href="https://blog.zarathu.com/jp/posts/2023-09-18-shinyexe">https://blog.zarathu.com/jp/posts/2023-09-18-shinyexe</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>electron forge</category>
  <category>shiny</category>
  <category>quarto</category>
  <category>standalone</category>
  <category>exe</category>
  <category>windows</category>
  <guid>https://blog.zarathu.com/jp/posts/2023-09-18-shinyexe/</guid>
  <pubDate>Sun, 17 Sep 2023 15:00:00 GMT</pubDate>
  <media:content url="https://blog.zarathu.com/jp/posts/2023-09-18-shinyexe/img/electron-forge.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>web assembly를 이용하여 웹페이지에서 Shiny App 활용하기</title>
  <dc:creator>Jinhwan Kim</dc:creator>
  <link>https://blog.zarathu.com/jp/posts/2023-09-10-wasm2/</link>
  <description><![CDATA[ 
<!-- Google tag (gtag.js) -->
<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-L0DYYSH9KM"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L0DYYSH9KM');
</script>





<section id="개요" class="level2">
<h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>이번 글은 <a href="https://blog.zarathu.com/posts/2023-09-09-wasm/" target="_blank">이전 글 </a>에이어 정적 페이지에서 shiny application을 <code>webR</code>로 제공하는 방법에 대해 소개합니다.</p>
</section>
<section id="webr-r과-shiny의-차이" class="level2">
<h2 class="anchored" data-anchor-id="webr-r과-shiny의-차이">webR (R)과 shiny의 차이</h2>
<p>webR을 사용하기 위해 R과 Shiny의 차이점중 한가지를 짚고 넘어가는 것이 좋습니다.</p>
<p>R은 한번에 하나의 코드만 실행 가능합니다. 즉, 새로운 코드를 실행하기 위해서는 <strong>이전의 연산이 종료</strong>된 상태여야 합니다.</p>
<p>그런데 Shiny는 (app.R이라는) <strong>코드를 실행</strong>한 상태에서 사용자로부터 입력을 받고, 이를 통해 새로운 계산을 진행합니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-10-wasm2/img/runapp.png" width="100%" text-align="center">
</p>
<p>이는 webR과 유사하게 shiny에서 ( 로컬에 ) 별도의 <code>server</code>를 만들고, 브라우저의 입력값과 계산된 출력 값을 서버와 주고 받으면서 <code>ui</code>로 보내주는 과정을 거칩니다.</p>
<p>그래서 webR과 Shiny를 이어주려면 아래 그림처럼 또 하나의 브라우저 (<strong>service worker</strong>)를 만든다고 이해하는 것이 편합니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-10-wasm2/img/webr.png" width="100%" text-align="center">
</p>
<p>Shiny를 사용자의 브라우저에서 실행시키면 얻을 수 있는 장점과 단점은 webR의 장단점과 대체로 유사합니다.</p>
<p>그러나 <code>service worker</code>라는 추가 개념이 등장했고, 이로 인한 <strong>Cross-Origin Isolation</strong>이라는 새로운 문제점이 발생합니다.</p>
</section>
<section id="cross-origin-isolation" class="level2">
<h2 class="anchored" data-anchor-id="cross-origin-isolation">Cross-Origin Isolation</h2>
<p>Shiny를 정적 페이지에서 제공하기 위해 Cross-Origin Isolation의 정확한 개념을 이해할 필요는 없지만, 설명을 하면 다음과 같습니다.</p>
<p>service worker는 별도의 프로세스를 위해 외부에서 (자체 실행을 위한) 파일을 다운로드 받고 이를 사용합니다.</p>
<p>그런데 최근의 웹페이지에서는 보안 이슈로 인해 (검증되지 않은) 외부의 파일을 실행하는 것을 정책적으로 막고 있습니다.</p>
<p>이를 위해 정적 페이지를 제공하는 서비스 (github, netlify, wordpress 등)에서 외부 파일의 실행을 허용하는 설정을 해야합니다.</p>
<p>차라투 블로그가 사용하는 github page를 위해서는 <a href="https://github.com/josephrocca/clip-image-sorter/blob/main/enable-threads.js" target="_blank"> enable-thread.js </a>라는 스크립트를 실행해야합니다.</p>
<p>마찬가지로 Quarto를 활용해 웹페이지를 만들고, Shiny에서 기본으로 제공하는 <code>01_hello</code> 심도록 하겠습니다.</p>
</section>
<section id="quarto-페이지의-구성" class="level2">
<h2 class="anchored" data-anchor-id="quarto-페이지의-구성">Quarto 페이지의 구성</h2>
<p>Shiny를 정적페이지로 제공하는 quarto page에는 3가지가 필요합니다.</p>
<ol type="1">
<li>Javascript 파일:</li>
</ol>
<ul>
<li>service worker를 만들기 위한 <code>httpuv-serviceworker.js</code> (from <a href="https://github.com/georgestagg/shiny-standalone-webr-demo" target="_blank">Inspired from Here</a>)</li>
<li>(github blog 기준) Cross origin isolation을 풀기 위한 <code>enable-threads.js</code></li>
</ul>
<ol start="2" type="1">
<li><p>Button &amp; iframe: shiny는 webR에 비해 조금 더 로딩이 필요하기 때문에 진행 상태를 보여줄 버튼과, shiny app을 심을 iframe이 필요합니다.</p></li>
<li><p>Javascript 파일: webR을 준비하고, iframe에 Shiny를 심는 <code>loadshiny.js</code></p></li>
</ol>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!-- 1. scripts --&gt;</span></span>
<span id="cb1-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'httpuv-serviceworker.js'</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enable-threads.js'</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!-- 2. button &amp; iframe --&gt;</span></span>
<span id="cb1-6"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">button</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"btn btn-success btn-sm"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"button"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> style</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"background-color: dodgerblue"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"statusButton"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">i</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fas fa-spinner fa-spin"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">i</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Loading webR...</span>
<span id="cb1-8"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">button</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-9"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">div</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"iframeContainer"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">div</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!-- 3. webR &amp; shiny--&gt;</span></span>
<span id="cb1-12"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"module"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loadshiny.js'</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>추가적으로 <code>loadshiny.js</code>의 두 부분을 커스텀 해야합니다. (<strong>TODO</strong>로 표기)</p>
<ol type="1">
<li><p>임베드할 shiny app을 담고 있는 url 코드 (app.R): 이 글의 경우 차라투 블로그의 github에 (공개 된) 있는 <a href="https://github.com/zarathucorp/blog/blob/master/posts/2023-09-10-wasm2/app.R" target="_blank">코드</a>를 사용합니다.</p></li>
<li><p>service worker를 적용할 범위: <code>httpuv-serviceworker.js</code>를 등록하고, <code>index.html</code>을 담고 있는 디렉토리를 scope에 저장합니다.</p></li>
</ol>
<p>마지막으로 디렉토리 구조는 다음과 같습니다.</p>
<ul>
<li>2023-09-10-wasm2
<ul>
<li>enable-threads.js</li>
<li>index.qmd</li>
<li>index.html</li>
<li>loadshiny.js</li>
<li>httpuv-serviceworker.js</li>
</ul></li>
</ul>
</section>
<section id="실제-webr-shiny-결과" class="level2">
<h2 class="anchored" data-anchor-id="실제-webr-shiny-결과">실제 webR + shiny 결과</h2>
<!-- scripts -->
<script src="httpuv-serviceworker.js"></script>
<script src="enable-threads.js"></script>
<!-- button & iframe -->
<button class="btn btn-success btn-sm" type="button" style="background-color: dodgerblue" id="statusButton">
  <i class="fas fa-spinner fa-spin"></i>Loading webR...
</button>
<div id="iframeContainer"></div>
<!-- webR & shiny-->
<script type="module" src="loadshiny.js"></script>
</section>
<section id="정리" class="level2">
<h2 class="anchored" data-anchor-id="정리">정리</h2>
<p>단순히 webR을 심는 것보다 shiny를 심는 것은 3가지 이유에서 조금 더 복잡합니다.</p>
<ol type="1">
<li>service worker 의 구성 및 연결</li>
<li>shiny app의 실행을 위한 shiny 패키지를 webR에 설치</li>
<li>실제 정적 페이지에 배포하기 전까지 로컬 PC 에서는 shiny 결과를 확인할 수 없음</li>
</ol>
<p>또한 이전의 webR과 마찬가지로 단순한 shiny app만 webR로 구현이 가능합니다.</p>
<p>가벼운 (특히 shiny 교육) 용도로는 shiny app을 별도의 서버를 구성하지 않고도 정적 페이지로 사용자에게 제공할 수 있다는 점은 꽤 흥미롭고, (수초의 시간이 더 필요하긴 하지만) 여전히 개선할 수 있는 부분이 존재합니다.</p>
<p>다만 R과 quarto를 넘어서 javascript를 포함한 웹 개발 지식과 service worker 구성을 위한 네트워크와 인프라 구성에 대한 경험이 없다면 많은 시행착오가 필요하기도 합니다.</p>
<p>이 webR에 대해 <a href="https://appsilon.com/bringing-webr-into-shiny/">appsilon</a>은 초창기 기술인 만큼 아쉬운 점도 있지만 동적 페이지에서 제공되는 shiny app을 대체할 기술이라기보단, 상호간에 보조할 수 있는 방법이라고 평가했습니다.</p>
<hr>
<p>이전 글과 이번 글을 통해서 webR과 shiny를 정적페이지로 사용자에게 제공하는 방법을 알아보았습니다.</p>
<p>배경 지식이 없다면 한번에 이해하긴 어렵고, 이렇게 사용할 수 도 있다는 것만 기억하셔도 충분합니다.</p>
<div class="callout callout-style-simple callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
🤗 Let’s talk
</div>
</div>
<div class="callout-body-container callout-body">
<p>차라투에서는 R과 Shiny에 대한 컨설팅을 제공합니다. 진행중인 프로젝트 관련하여 도움이 필요하시다면 jinhwan@zarathu.com 으로 알려주세요!</p>
</div>
</div>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/">CC BY-NC 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{kim2023,
  author = {Kim, Jinhwan},
  title = {Web {assembly를} {이용하여} {웹페이지에서} {Shiny} {App}
    {활용하기}},
  date = {2023-09-10},
  url = {https://blog.zarathu.com/jp/posts/2023-09-10-wasm2},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-kim2023" class="csl-entry quarto-appendix-citeas">
Kim, Jinhwan. 2023. <span>“Web Assembly를 이용하여 웹페이지에서 Shiny
App 활용하기.”</span> September 10, 2023. <a href="https://blog.zarathu.com/jp/posts/2023-09-10-wasm2">https://blog.zarathu.com/jp/posts/2023-09-10-wasm2</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>webR</category>
  <category>shiny</category>
  <category>wasm</category>
  <category>github page</category>
  <category>quarto</category>
  <guid>https://blog.zarathu.com/jp/posts/2023-09-10-wasm2/</guid>
  <pubDate>Sat, 09 Sep 2023 15:00:00 GMT</pubDate>
  <media:content url="https://blog.zarathu.com/jp/posts/2023-09-10-wasm2/img/webR-shiny-blog.png" medium="image" type="image/png" height="96" width="144"/>
</item>
<item>
  <title>web assembly를 이용하여 웹페이지에서 R 활용하기</title>
  <dc:creator>Jinhwan Kim</dc:creator>
  <link>https://blog.zarathu.com/jp/posts/2023-09-09-wasm/</link>
  <description><![CDATA[ <!-- Google tag (gtag.js) --><script async="" src="https://www.googletagmanager.com/gtag/js?id=G-L0DYYSH9KM"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L0DYYSH9KM');
</script><section id="개요" class="level2"><h2 class="anchored" data-anchor-id="개요">개요</h2>
<p>이번 글에서는 R 패키지 <code>webR</code>를 사용하여 별도의 서버 기능을 제공하지 않는 정적 웹페이지(이 블로그 같은!) 에서 R을 사용할 수 있게 하는 과정에 대해 소개합니다.</p>
<p>단 이 글에서는 wasm에 대한 이론적 배경 내용보다는 wasm을 활용하는 방법을 위주로 소개합니다.</p>
</section><section id="정적-페이지" class="level2"><h2 class="anchored" data-anchor-id="정적-페이지">정적 페이지</h2>
<p>webR의 이해를 돕기 위해서 먼저 정적 페이지 (Static Page)를 설명하겠습니다.</p>
<p>위키피디아의 설명을 인용하면, 정적 페이지는 <strong>모든 상황에서 모든 사용자에게 동일한 정보를 표시하는 페이지</strong>로, 처음 만들어 놓은 콘텐츠만이 사용자에게 전달되는 페이지(HTML 문서)라고 볼 수 있습니다.</p>
<p>서버에 저장되어 있는 데이터가 변경되지 않는한, 사용자와의 상호작용이나 요청에 관계 없이 동일한 정보를 보여주기 때문에 회사의 홈페이지나 개인의 <a href="https://education.zarathu.com/instructor.html" target="_blank"> 이력서 페이지</a>, 기술 문서나 설명서, 블로그 등이 이에 해당됩니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-09-wasm/img/staticpage.png" width="100%" text-align="center"></p>
<p>반대로 동적 페이지는 서버에서 사용자의 입력을 기반으로 추가 연산을 거쳐 결과물을 만들어내는 페이지로, 댓글이나 날씨, 잔여 재고수 , 연산 프로그램 등 정보의 업데이트가 있어야 하는 곳 등 대부분의 웹페이지에 사용됩니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-09-wasm/img/dynamicpage.png" width="100%" text-align="center"></p>
<p>정적 페이지의 주요 특징 중 하나는 동적 페이지에 비해 배포가 쉽고, 비용이 거의 들지 않는 다는 것입니다.</p>
<p>가령 동적 페이지의 예시중 하나인 shiny 어플리케이션을 제공하려면 별도의 서버를 준비하고 shiny server를 설치하여 배포 해야하지만 정적 페이지인 블로그의 경우 단순히 markdown을 github 에 올리는 것만으로 배포가 가능합니다.</p>
<p>(연산 로직이 필요하지 않아 사실상 콘텐츠를 <strong>print로 출력</strong>하는 것과 큰 차이가 없습니다.)</p>
</section><section id="웹과-r" class="level2"><h2 class="anchored" data-anchor-id="웹과-r">웹과 R</h2>
<p>차라투에서는 openstat이라는 사용자의 PC에 R을 설치하거나, 프로그래밍을 하지 않고도 웹에서 R의 기능을 이용할 수 있게 하는 의학통계 앱을 서비스로 제공하고 있습니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-09-wasm/img/openstat.png" width="100%" text-align="center"></p>
<p>이 서비스는 간단하게 표현하면 다음과 같은 구조로 이루어져 있습니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-09-wasm/img/openstat2.png" width="100%" text-align="center"></p>
<p>즉, openstat은 R의 연산 기능을 웹에서 활용하기 위해 동적 페이지를 구성했기 때문에 다음과 같은 문제점이 발생할 수 있습니다.</p>
<ol type="1">
<li><p>사용량이 많아지면 서버가 뻗을 가능성 존재. 특히나 R은 모든 작업들을 메모리에서 하기 때문에 데이터에 따라 사용자 당 GB 단위 이상을 필요로 하기도 합니다.</p></li>
<li><p>서버에 데이터가 왔다갔다하는 과정에서 (네트워크에서의) 보안 문제가 발생할 수도 있습니다.</p></li>
<li><p>모든 연산 결과를 네트워크를 통해 전달해야하기 때문에 사용자의 PC 성능이 아닌, 네트워크 연결 상태와 서버의 PC 성능에 어플리케이션의 퍼포먼스가 영향을 받습니다.</p></li>
</ol>
<p>물론 openstat에서 제공하는 (의학 연구용) 분석은, 스케일이나 컴퓨팅 퍼포먼스가 필요하지 않은 간단한 통계 분석 작업이 많기 때문에 별다른 문제가 발생하지는 않습니다.</p>
</section><section id="wasm-webr" class="level2"><h2 class="anchored" data-anchor-id="wasm-webr">wasm &amp; webR</h2>
<p>wasm은 Web Assembly의 줄임말로, 웹 브라우저 (크롬)에서 실행할 수 있는 프로그래밍 언어 정도로 이해해도 충분합니다.</p>
<p>2017년에 처음 등장한 개념으로, 각 프로그래밍 언어를 대상으로 작업되고 있으며 R에서는 <a href="https://docs.r-wasm.org/webr/latest/" target="_blank">webR</a>이라는 이름으로 2022년 1월부터 작업이 진행되고 있습니다.</p>
<p>이 webR의 정확한 원리는 복잡하지만, 간단하게는 아래 그림과 같이 자바스크립트 코드를 통해 사용자 PC에 백그라운드에서 실행되는 별도의 브라우저(web worker)를 만들어 서버 역할을 하게 한다 정도로 생각하셔도 충분합니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-09-wasm/img/webr2.png" width="100%" text-align="center"></p>
<p>webR을 사용하기 위해서는 웹페이지에 web worker를 실행하기 위한 자바스크립트 코드를 추가해야 하는데, quarto를 사용해서 간단한 웹페이지를 만들어 보겠습니다. 이후 배포는 github (github page)를 사용하며, 이 글에서는 이를 다루지 않습니다.</p>
</section><section id="quarto-page의-구성" class="level2"><h2 class="anchored" data-anchor-id="quarto-page의-구성">Quarto page의 구성</h2>
<p>webR을 정적 페이지에서 활용하기 위해 1. 코드를 입력할 공간과 2. 실행 결과를 보여줄 공간 (에디터), 3. 입력된 코드를 실행하게 할 버튼, 4. 마지막으로 앞서 언급했던 자바스크립트 코드를 추가해야합니다. (단, 자바스크립트가 에디터보다 먼저 로드되어야 하므로 앞서 선언해야함)</p>
<p>quarto에서 html을 실행하게 하기 위해서 아래의 내용을 <strong>```{=html} … ```</strong>로 감싸야 합니다.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!-- 4. scripts --&gt;</span></span>
<span id="cb1-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">link</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> rel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stylesheet"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> href</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"codemirror.min.css"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"codemirror.min.js"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r.js"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'webr-worker.js'</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span> </span>
<span id="cb1-6"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'webr-serviceworker.js'</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span> </span>
<span id="cb1-7"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"module"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'editor.js'</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!-- editor --&gt;</span></span>
<span id="cb1-10"></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!-- 1. code editor --&gt;</span></span>
<span id="cb1-12"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">h4</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Editor<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">h4</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">div</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"editor"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">div</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!-- 3. run button --&gt;</span></span>
<span id="cb1-16"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> style</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text-align: right;"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-17">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">button</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"btn btn-success btn-sm"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> disabled type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"button"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"runButton"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-18">    Loading webR...</span>
<span id="cb1-19">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">button</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-20"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">p</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-21"></span>
<span id="cb1-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!-- 2. code result --&gt;</span></span>
<span id="cb1-23"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">h4</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>Result<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">h4</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb1-24"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">pre</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">code</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"out"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">code</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">pre</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<p>먼저 <code>4. scripts</code>는 (웹페이지에 보여지는 내용은 아니지만) 아래와 같이 크게 3종류로 구분할 수 있습니다.</p>
<ol type="1">
<li>에디터를 위한 script: <code>codemirror.min.css</code>, <code>codemirror.min.js</code>, <code>r.js</code>
</li>
<li>백그라운드 프로세스 (사용자의 PC에서의 서버)를 위한 script: <code>webr-worker.js</code>, <code>webr-serviceworker.js</code>
</li>
<li>에디터와 백그라운드 프로세스를 연결하는 script</li>
</ol>
<p>두번째로 <code>1. code editor</code>와 <code>3. run button</code> 부분은 이미지처럼 UI에 코드를 넣는 에디터(껍데기)와 이 코드를 실행하는 버튼을 만드는데 사용됩니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-09-wasm/img/editor.png" width="100%" text-align="center"></p>
<p>마지막으로 <code>2. code result</code> 부분은 아래처럼 처음에는 없지만 계산 결과를 보여주는 공간을 만드는데 사용됩니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-09-09-wasm/img/result.png" width="100%" text-align="center"></p>
<p>추가로 script 파일의 경우는 아래처럼 CDN(웹)에서 불러와도 되지만 해당 파일도 다운로드 받아 미리 정적 페이지에서 제공하게 실행할 수도 있습니다.</p>
<p><code>&lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/codemirror.min.css"&gt;</code> (웹에서 사용자가 실시간으로 다운로드)</p>
<p><code>&lt;link rel="stylesheet" href="codemirror.min.css"&gt;</code> (페이지에서 미리 다운로드 후 제공)</p>
</section><section id="실제-webr-결과" class="level2"><h2 class="anchored" data-anchor-id="실제-webr-결과">실제 webR 결과</h2>
<p>아래는 실제 위 코드를 차라투 블로그 (정적 페이지)에 추가해 빌드한 결과물로 <code>Run code</code> 버튼을 누를때마다 랜덤한 값을 생성하고 평균과 표준편차를 계산하는 webR 예시입니다.</p>
<p>특별히 설치가 필요한 R 패키지와 함수를 사용하지 않는 이상</p>
<div class="cell">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/print.html">print</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/utils/head.html">head</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">iris</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>위의 내용처럼 코드를 바꿔 작성하면 그 결과도 바뀌는 것을 확인할 수 있습니다.</p>
<link rel="stylesheet" href="../../webr/codemirror.min.css">
<script src="../../webr/codemirror.min.js"></script><script src="../../webr/r.js"></script><script src="webr-worker.js"></script><script src="webr-serviceworker.js"></script><script type="module" src="editor.js"></script><h4 class="anchored">Editor</h4>
<div id="editor"></div>

<p style="text-align:right;">
  <button class="btn btn-success btn-sm" type="button" id="runButton">
    Loading webR...
  </button>
</p>

<h4 class="anchored">Result</h4>
<pre><code id="out"></code></pre>
</section><section id="정리" class="level2"><h2 class="anchored" data-anchor-id="정리">정리</h2>
<p>이번 글에서는 webR을 이용하여 정적 페이지에서 사용자가 R을 실행할 수 있는 방법을 정리했습니다.</p>
<p>이러한 방법의 장단점은 다음과 같습니다.</p>
<section id="장점" class="level3"><h3 class="anchored" data-anchor-id="장점">장점</h3>
<ol type="1">
<li>R의 간단한 개념을 설명할때 효과적</li>
</ol>
<blockquote class="blockquote">
<p>ex) <code><a href="https://rdrr.io/r/utils/head.html">head()</a></code>를 사용하면 데이터의 처음 6개 행을 보여준다</p>
</blockquote>
<p>코드와 실행 결과를 이미지로 첨부할 수도 있지만, <code>head(iris)</code> 같은 코드를 webR로 심어두는 것으로 내용을 더욱 효과적으로 전달할 수 있습니다.</p>
<p>만약 <a href="https://rstudio.github.io/learnr/" target="_blank">learnr</a>패키지를 함께 사용한다면 더욱 효과적으로 활용할 수 있습니다.</p>
<ol start="2" type="1">
<li>동적 페이지를 위한 서버 비용을 지출 없음</li>
</ol>
<p>정적페이지는 무료로 제공할 수 있는 서비스가 많이 있고, 모든 R 연산은 사용자의 PC에서 이루어지기 때문에 별도의 서버 비용을 신경쓰지 않아도 좋습니다. (파일만 미리 서버에 넣어두면)</p>
<ol start="3" type="1">
<li>데이터가 오고 가지 않기 때문에 보안상의 문제가 전혀 발생하지 않습니다. (이론상으로는 페이지의 모든 내용을 사용자가 저장해두면 오프라인 상태에서도 webR 활용 가능)</li>
</ol></section><section id="단점" class="level3"><h3 class="anchored" data-anchor-id="단점">단점</h3>
<ol type="1">
<li><p>webR은 아직 초기 단계이기 때문에 지원되지 않는 기능이나, 활용할 수 있는 자료가 거의 없습니다.</p></li>
<li><p>파일을 업로드/다운로드 하는 것 같이 <strong>단순하지 않은 작업</strong>은 webR에서 할 수 없습니다.</p></li>
</ol></section></section><section id="번외" class="level2"><h2 class="anchored" data-anchor-id="번외">번외</h2>
<div class="callout callout-style-simple callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
quarto
</div>
</div>
<div class="callout-body-container callout-body">
<p>추가로, 위처럼 별도의 스크립트 파일 준비 없이 quarto에서 바로 webR을 사용할 수 있게 하는 템플릿도 있어 <a href="https://github.com/coatless/quarto-webr"> 링크</a>를 첨부합니다.</p>
</div>
</div>
<div class="callout callout-style-simple callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Shiny
</div>
</div>
<div class="callout-body-container callout-body">
<p><a href="https://present.do/documents/64e98f167b111b10ca473ab4" target="_blank">shiny application</a> 또한 webR을 이용해서 정적페이지에서 제공할 수 있습니다.</p>
</div>
</div>


</section><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/">CC BY-NC 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{kim2023,
  author = {Kim, Jinhwan},
  title = {Web {assembly를} {이용하여} {웹페이지에서} {R} {활용하기}},
  date = {2023-09-09},
  url = {https://blog.zarathu.com/jp/posts/2023-09-09-wasm},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-kim2023" class="csl-entry quarto-appendix-citeas">
Kim, Jinhwan. 2023. <span>“Web Assembly를 이용하여 웹페이지에서 R
활용하기.”</span> September 9, 2023. <a href="https://blog.zarathu.com/jp/posts/2023-09-09-wasm">https://blog.zarathu.com/jp/posts/2023-09-09-wasm</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>webR</category>
  <category>wasm</category>
  <category>github page</category>
  <category>quarto</category>
  <guid>https://blog.zarathu.com/jp/posts/2023-09-09-wasm/</guid>
  <pubDate>Fri, 08 Sep 2023 15:00:00 GMT</pubDate>
  <media:content url="https://blog.zarathu.com/jp/posts/2023-09-09-wasm/img/webR.png" medium="image" type="image/png" height="143" width="144"/>
</item>
<item>
  <title>R의 officer 패키지를 활용하여 PPT 편집을 위한 벡터 그래픽스 만들기</title>
  <dc:creator>Jinhwan Kim</dc:creator>
  <link>https://blog.zarathu.com/jp/posts/2023-07-01-officer/</link>
  <description><![CDATA[ <!-- Google tag (gtag.js) --><script async="" src="https://www.googletagmanager.com/gtag/js?id=G-L0DYYSH9KM"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L0DYYSH9KM');
</script><section id="개요" class="level1"><h1>개요</h1>
<p>이번 글에서는 R 패키지 <code>officer</code>를 사용하여 PPT 프레젠테이션에 벡터 그래픽을 만드는 과정에 대해 소개합니다. officer를 포함하여 몇몇 패키지들이 <strong>officeverse</strong>라고 불리는 생태계를 구성하고 있으며 PPT외에도 엑셀이나 워드로 R의 결과를 만들어 낼 수 있습니다만, 이번 글에서는 벡터 그래픽을 저장하는 목적으로의 <code>officer</code>에 한정합니다.</p>
</section><section id="벡터-그래픽스" class="level1"><h1>벡터 그래픽스</h1>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-07-01-officer/img/VectorBitmapExample_kor.png" text-align="center"></p>
<p><a href="https://ko.wikipedia.org/wiki/%EB%B2%A1%ED%84%B0_%EA%B7%B8%EB%9E%98%ED%94%BD%EC%8A%A4" target="_blank"> 위키피디아</a>의 설명에 따르면, <strong>벡터 그래픽스</strong> (Vector Graphics)는 이미지를 보여줄 때 수학 방정식을 기반으로 점, 직선, 곡선 등의 물체를 활용하는 것을 의미합니다. (많이 쓰이는 <code>Pixel</code> 기반의 <strong>래스터 그래픽스</strong>의 대안이기도 합니다.)</p>
<p>예시처럼 벡터 그래픽스를 사용하면 이미지를 확대했을때 해상도가 망가지지 않거나, 이미지의 수정이 가능해진다는 장점이 있습니다.</p>
</section><section id="사례" class="level1"><h1>사례</h1>
<div class="cell" data-layout-align="center">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://ggplot2.tidyverse.org">ggplot2</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">plotObj</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">iris</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://ggplot2.tidyverse.org/reference/ggplot.html">ggplot</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://ggplot2.tidyverse.org/reference/aes.html">aes</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Sepal.Length</span>, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Sepal.Width</span>, color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Species</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://ggplot2.tidyverse.org/reference/geom_point.html">geom_point</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">plotObj</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 저장을 위한 코드</span></span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://blog.zarathu.com/jp/posts/2023-07-01-officer/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid quarto-figure quarto-figure-center figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>위와 같은 코드로, 그림을 만들고 이를 외부로 저장하려는 상황을 생각해보겠습니다.</p>
<p>이를 위해 일반적으로 우리가 할 수 있는 것은 Rstudio의 <strong>Plot</strong> (혹은 <strong>View</strong>)에서 이미지를 저장하는 것입니다.</p>
<div class="columns" style="text-align: center;">
<div class="column">
<figure class="figure"><img src="https://blog.zarathu.com/jp/posts/2023-07-01-officer/img/officer1.png" width="100%" class="figure-img"></figure>
</div><div class="column">
<figure class="figure"><img src="https://blog.zarathu.com/jp/posts/2023-07-01-officer/img/officer2.png" width="100%" style="margin-left: 1em" class="figure-img"></figure>
</div>
</div>
<p>하지만, 이렇게 png형태로 이미지를 저장하고 나면, 확대를 했을때 꺠지거나, 다른 편집이 <strong>거의 불가능</strong>합니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-07-01-officer/img/Rplot2.png" width="500px"></p>
<p>그러나 <code>officer</code>를 통해 벡터 그래픽으로 이미지를 저장한다면, 다음 예시처럼 파워포인트를 통해 세밀한 편집이 가능합니다.</p>
<div class="columns" style="text-align: center;">
<div class="column">
<figure class="figure"><img src="https://blog.zarathu.com/jp/posts/2023-07-01-officer/img/Rplot3.png" width="100%" class="figure-img"></figure>
</div><div class="column">
<figure class="figure"><img src="https://blog.zarathu.com/jp/posts/2023-07-01-officer/img/Rplot4.png" width="100%" style="margin-left: 1em" class="figure-img"></figure>
</div>
</div>
</section><section id="설치와-설정" class="level1"><h1>설치와 설정</h1>
<p><code>officer</code> 패키지의 설치는 아래의 코드로 가능합니다.</p>
<div class="cell">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remotes::install_github('davidgohel/officer/')</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remotes::install_github('davidgohel/rvg')</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://ardata-fr.github.io/officeverse/">officer</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># office + R</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://ardata-fr.github.io/officeverse/">rvg</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># r vector graphics</span></span></code></pre></div>
</div>
</section><section id="officer-사용" class="level1"><h1>officer 사용</h1>
<p><code>officer</code>로 벡터그래픽을 만드는 흐름은 크게 4가지 순서로 구성됩니다.</p>
<ol type="1">
<li>ppt 오브젝트를 만든다.</li>
<li>ppt 오브젝트에 슬라이드를 만들고</li>
<li>그 안에 이미지를 vector graphics로 넣는다.</li>
<li>ppt 오브젝트를 저장한다.</li>
</ol>
<p>이제 각각의 내용을 소개하겠습니다.</p>
<section id="오브젝트-만들기" class="level2"><h2 class="anchored" data-anchor-id="오브젝트-만들기">1. 오브젝트 만들기</h2>
<div class="cell">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ppt</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/read_pptx.html">read_pptx</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/print.html">print</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ppt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>pptx document with 0 slide(s)
Available layouts and their associated master(s) are:
             layout       master
1       Title Slide Office Theme
2 Title and Content Office Theme
3    Section Header Office Theme
4       Two Content Office Theme
5        Comparison Office Theme
6        Title Only Office Theme
7             Blank Office Theme</code></pre>
</div>
</div>
<p><code>read_pptx</code>는 원래 ppt 파일을 R 오브젝트 형태로 읽기 위한 함수이지만, 만약 함수에 파일을 입력하지 않으면 새로운 ppt 오브젝트를 생성합니다.</p>
<div class="cell">
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ppt</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/read_pptx.html">read_pptx</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mypptx.pptx"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 기존 ppt 읽기 </span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ppt</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/read_pptx.html">read_pptx</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 새로운 ppt 생성</span></span></code></pre></div>
</div>
<p>한편 <code>officer</code>에는 <code>read_pptx</code> 외에도 <code>read_docx</code>(워드), <code>read_xlsx</code>(엑셀)도 존재합니다.</p>
<p>ppt 오브젝트를 콘솔에 입력하면, 몇개의 슬라이드로 구성되어있는지 확인할 수 있습니다. (<code>layout</code>과 <code>master</code>는 신경쓰지 않으셔도 좋습니다.)</p>
</section><section id="슬라이드-만들기" class="level2"><h2 class="anchored" data-anchor-id="슬라이드-만들기">2. 슬라이드 만들기</h2>
<p>처음 만든 ppt 오브젝트에는 <strong>pptx document with 0 slide(s)</strong>, 즉 슬라이드가 없습니다.</p>
<p>이 오브젝트에 슬라이드를 추가하는 것은 <code><a href="https://davidgohel.github.io/officer/reference/add_slide.html">add_slide()</a></code>로 할 수 있습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ppt</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/add_slide.html">add_slide</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ppt &lt;- ppt |&gt; add_slide() 로 안해도 됨</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>pptx document with 1 slide(s)
Available layouts and their associated master(s) are:
             layout       master
1       Title Slide Office Theme
2 Title and Content Office Theme
3    Section Header Office Theme
4       Two Content Office Theme
5        Comparison Office Theme
6        Title Only Office Theme
7             Blank Office Theme</code></pre>
</div>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ppt</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pptx document with 1 slide(s)</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>pptx document with 1 slide(s)
Available layouts and their associated master(s) are:
             layout       master
1       Title Slide Office Theme
2 Title and Content Office Theme
3    Section Header Office Theme
4       Two Content Office Theme
5        Comparison Office Theme
6        Title Only Office Theme
7             Blank Office Theme</code></pre>
</div>
</div>
<p><code><a href="https://davidgohel.github.io/officer/reference/add_slide.html">add_slide()</a></code>에는 layout과 master라는 옵션을 지정할 수 있고 가능한 값은 다음과 같습니다.</p>
<ul>
<li>Title Slide</li>
<li><strong>Title and Content (기본값)</strong></li>
<li>Section Header</li>
<li>Two Content</li>
<li>Comparison</li>
<li>Title Only</li>
<li>Blank</li>
</ul>
<p>아마 눈치 채셨을 수도 있겠지만 레이아웃은 콘솔에서 ppt 오브젝트를 확인할 때 나오는 것들이며,</p>
<p>우리의 목적은 <strong>슬라이드 구성이 아닌 이미지 저장</strong>이기 때문에 어떤 값을 선택해도 동일한 결과를 얻을 수 있습니다.</p>
<p>아래의 이미지는 각 옵션들을 적용하여 만든 슬라이드의 결과물로 모두 동일한 것을 알 수 있습니다.</p>
<p style="text-align: center;">
<img src="https://blog.zarathu.com/jp/posts/2023-07-01-officer/img/layout.png" width="500px"></p>
</section><section id="벡터-그래픽스-슬라이드에-추가" class="level2"><h2 class="anchored" data-anchor-id="벡터-그래픽스-슬라이드에-추가">3. 벡터 그래픽스 슬라이드에 추가</h2>
<p>앞서 만든 ggplot의 결과를 <code>ph_with</code>이라는 함수로 슬라이드에 추가할 수 있습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ppt</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/ph_with.html">ph_with</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># paragraph의 ph가 아닐까 생각</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/rvg/reference/dml.html">dml</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ggobj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">plotObj</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 앞에서 만들었던 ggplot 이미지 오브젝트</span></span>
<span>  location <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/ph_location_fullsize.html">ph_location_fullsize</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 쉬운 편집을 위해 이미지의 크기를 슬라이드에 가득 채움</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>여기서 <code>dml</code>은 <a href="http://officeopenxml.com/drwOverview.php" target="_blank"><code>DrawingML</code></a>이라는 오피스 프로덕트(pptx)에 X<strong>ML</strong>로 이미지를 만들기 위한 내용입니다. location에는 다른 옵션도 있지만 <strong>ph_location_fullsize</strong>를 권장합니다</p>
<p>만약 여러개의 이미지를 여러장의 슬라이드로 집어넣어 만들고 싶다면 다음처럼 <code>ph_with</code>를 pipe (<code>|&gt;</code>)로 이어서 사용 할 수 있습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ppt</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/add_slide.html">add_slide</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1번째 슬라이드 </span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/ph_with.html">ph_with</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/rvg/reference/dml.html">dml</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ggobj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">plotObj</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>    location <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/ph_location_fullsize.html">ph_location_fullsize</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/add_slide.html">add_slide</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2번째 슬라이드</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/ph_with.html">ph_with</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> </span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/rvg/reference/dml.html">dml</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ggobj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">plotObj2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>    location <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/ph_location_fullsize.html">ph_location_fullsize</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/add_slide.html">add_slide</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3번째 슬라이드 </span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/ph_with.html">ph_with</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> </span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/rvg/reference/dml.html">dml</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ggobj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">plotObj3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>    location <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/ph_location_fullsize.html">ph_location_fullsize</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
</section><section id="ppt-저장" class="level2"><h2 class="anchored" data-anchor-id="ppt-저장">4. ppt 저장</h2>
<p>마지막으로 <code>add_slide</code>와 <code>ph_with</code>를 통해 만든 슬라이드는 <code>print</code>로 현재 작업중인 디렉토리에 (<code><a href="https://rdrr.io/r/base/getwd.html">getwd()</a></code>로 확인) 저장할 수 있습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/getwd.html">getwd</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ppt가 저장되는 위치</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ppt</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/print.html">print</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myPrint.pptx"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>이렇게 만들어진 pptx는 <strong>파워포인트</strong>와 <strong>키노트</strong>, 그리고 <strong>구글 슬라이드</strong>에서 작업할 수 있습니다.</p>
</section><section id="정리" class="level2"><h2 class="anchored" data-anchor-id="정리">정리</h2>
<p>위 4개의 단계를 1개의 코드로 연결하면 다음과 같습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://ardata-fr.github.io/officeverse/">officer</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://ardata-fr.github.io/officeverse/">rvg</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://ggplot2.tidyverse.org">ggplot2</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 생성</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">plotObj</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">iris</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://ggplot2.tidyverse.org/reference/ggplot.html">ggplot</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://ggplot2.tidyverse.org/reference/aes.html">aes</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Sepal.Length</span>, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Sepal.Width</span>, color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Species</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://ggplot2.tidyverse.org/reference/geom_point.html">geom_point</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ppt</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/read_pptx.html">read_pptx</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ppt 생성, 별도의 오브젝트로 저장하지 않아도 됨.</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/add_slide.html">add_slide</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 슬라이드 추가</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/ph_with.html">ph_with</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 이미지 추가</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/rvg/reference/dml.html">dml</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ggobj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">plotObj</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, </span>
<span>    location <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://davidgohel.github.io/officer/reference/ph_location_fullsize.html">ph_location_fullsize</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> </span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/print.html">print</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'image.pptx'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ppt 저장 </span></span></code></pre></div>
</div>
<p>한편, <code>officer</code>를 활용하여 더 자세한 ppt 생성과 편집도 가능하지만, 이 글에서는 다루지 않으며 <code>quarto</code>를 활용한 <code>revealjs</code> 슬라이드 생성하는 방법을 <a href="https://education.zarathu.com/day3/quartopres.html" target="_blank">링크</a>로 대신 첨부해드립니다.</p>


</section></section><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/">CC BY-NC 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{kim2023,
  author = {Kim, Jinhwan},
  title = {R의 Officer {패키지를} {활용하여} {PPT} {편집을} {위한}
    {벡터} {그래픽스} {만들기}},
  date = {2023-07-01},
  url = {https://blog.zarathu.com/jp/posts/2023-07-01-officer},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-kim2023" class="csl-entry quarto-appendix-citeas">
Kim, Jinhwan. 2023. <span>“R의 Officer 패키지를 활용하여 PPT 편집을 위한
벡터 그래픽스 만들기.”</span> July 1, 2023. <a href="https://blog.zarathu.com/jp/posts/2023-07-01-officer">https://blog.zarathu.com/jp/posts/2023-07-01-officer</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>officer</category>
  <category>vectorgraphics</category>
  <category>ggplot2</category>
  <category>powerpoint</category>
  <category>visualization</category>
  <guid>https://blog.zarathu.com/jp/posts/2023-07-01-officer/</guid>
  <pubDate>Fri, 30 Jun 2023 15:00:00 GMT</pubDate>
  <media:content url="https://blog.zarathu.com/jp/posts/2023-07-01-officer/img/wacom.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>R Shiny 기반 방역관리 위험도 평가 대시보드</title>
  <dc:creator>Yeongho Kim</dc:creator>
  <link>https://blog.zarathu.com/jp/posts/2023-05-24-surveyDashboardR/</link>
  <description><![CDATA[ <!-- Google tag (gtag.js) --><script async="" src="https://www.googletagmanager.com/gtag/js?id=G-L0DYYSH9KM"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L0DYYSH9KM');
</script><p><code>R Shiny</code>의 활용성은 무궁무진합니다. 다양한 Shiny 전용 패키지와 함수, Javascript, CSS와의 연계성 등 다양한 기능을 활용해 반응형 웹페이지 제작이 가능합니다.</p>
<p>본 글에서는 이렇게 무궁무진한 <code>R Shiny</code>로 <em>웹 기반 방역관리 위험도 평가 대시보드</em>를 제작한 경험을 공유하며 사용한 여러 기능을 소개하려고 합니다.</p>
<p><small> UI의 전반적인 레이아웃은 <code>Shinydashboard</code>를 사용했으며 본문에선 <code>Shinydashboard</code>와 <code>Shiny</code>의 기본 함수에 대한 설명은 생략합니다. 두 패키지에 대한 기본적인 함수 및 구조 설명은 아래 링크를 참조하세요.</small></p>
<p><code>Shinydashboard</code> package : <a href="https://rstudio.github.io/shinydashboard/">Shiny Dashboard</a></p>
<p><code>Shiny</code> package : <a href="https://mastering-shiny.org/">Mastering Shiny</a> </p>
<p><br></p>
<section id="db-dbi-rsqlite" class="level2"><h2 class="anchored" data-anchor-id="db-dbi-rsqlite">1. DB : <code>DBI</code> &amp; <code>RSQLite</code>
</h2>
<p>본 대시보드는 사용자별로 데이터 무결성이 유지되어야 했고 지속적인 데이터 수집이 필요했기에 DB를 따로 운영하기로 했습니다.</p>
<p>DB를 다룰 수 있는 <a href="https://dbi.r-dbi.org/"><code>DBI</code></a> 패키지와 간단한 DBMS인 SQLite를 사용할 수 있는 <a href="https://rsqlite.r-dbi.org/"><code>RSQLite</code></a>를 사용하여 DB 설계 및 유지 보수를 진행했습니다.</p>
<p>다음과 같이 DB connect / disconnect 함수를 따로 지정하여 초기 설정을 해줍니다.</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://dbi.r-dbi.org">DBI</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://rsqlite.r-dbi.org">RSQLite</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># connection</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">con</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DBI</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://dbi.r-dbi.org/reference/dbConnect.html">dbConnect</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rsqlite.r-dbi.org/reference/SQLite.html">SQLite</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>            dbname <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[path]/[DBname].sqlite"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>    </span>
<span>  </span>
<span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#기존에 SQLite DB가 존재한다면 Connected, 아니면 create DB</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># disconnection</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">discon</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://dbi.r-dbi.org/reference/dbDisconnect.html">dbDisconnect</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">con</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p><code>DBI</code> 패키지의 대부분의 함수는 parameter로 DBIconnection object를 요구합니다. 따라서 다음과 같이 <code>con()</code> 이라는 함수를 parameter로 호출하여 DBI의 함수를 사용할 수 있습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example :  DBname : database.sqlite</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DBI</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://dbi.r-dbi.org/reference/dbExecute.html">dbExecute</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">con</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CREATE TABLE table1 (</span></span>
<span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                 keyvalue INTEGER(10) PRIMARY KEY,</span></span>
<span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                 value1 DATE,</span></span>
<span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                 value2 VARCHAR(20) CHECK(value2 IN ('a', 'b', 'c'))</span></span>
<span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                 )"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">discon</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DBI</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://dbi.r-dbi.org/reference/dbExecute.html">dbExecute</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">con</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"INSERT INTO table1 VALUES (?, ?, ?)"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-05-24"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DBI</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://dbi.r-dbi.org/reference/dbGetQuery.html">dbGetQuery</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">con</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SELECT * FROM table1"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p><code>dbExecute</code> 함수를 통해 실행하고자 하는 SQL문을 실행시킵니다. 이전에 생성한 <code>con()</code> 함수를 통해 DB에 연결한 뒤 SQL문을 문자열 형태로 입력하여 실행합니다. 또한 SQL문에 동적으로 R의 변수를 넣어야하는 경우, <code>?</code>를 통해 SQL문을 입력한 뒤에 <code>?</code>에 넣고자 하는 순서에 맞게 뒤에 vector 형태로 입력하면 됩니다.</p>
<p><code>dbGetQuery</code>의 경우<code>SELECT문</code>같이 SQL Query의 결과를 갖고 오고 싶은 경우 사용합니다. 추출 결과를 dataframe 형태로 가져옵니다.</p>
<p>본 대시보드 제작 과정에선 <code>RSQLite</code>를 이용하여 Table 4개를 운용하였고, <code>SQLite</code>에서도 당연히 참조 무결성 제약조건(PK-FK)을 생성할 수 있기때문에 직접 R에서 코드를 작성하지 않고 SQL문을 통해 미리 제약조건을 생성할 수 있습니다.</p>
<hr></section><section id="log-in-register-shinyauthr-customizing" class="level2"><h2 class="anchored" data-anchor-id="log-in-register-shinyauthr-customizing">2. Log in / Register : <code>shinyauthr</code> Customizing</h2>
<p><code>Shiny</code> 패키지 중 Log in/Log out UI를 제공하는 패키지는 대표적으로 <a href="https://datastorm-open.github.io/shinymanager/"><code>shinymanager</code></a>와 <a href="https://github.com/PaulC91/shinyauthr"><code>shinyauthr</code></a>가 있습니다. 그러나 <code>Shinymanager</code>에는 회원가입 기능을 추가하기가 어려운 부분이 있어 <code>shinyauthr</code>를 사용하되, 살짝 코드를 수정하여 Log in/Log out/Register option을 Web에 추가하였습니다.</p>
<p><code>shinyauthr</code> package의 주요 함수는 다음과 같습니다.</p>
<ul>
<li>
<code>loginUI</code> : log in UI를 보여주는 함수로 화면에 나타나는 메시지를 수정가능합니다.</li>
<li>
<code>loginServer</code> : log in의 base가 되는 database를 설정하고 id, password 설정, 쿠키 로그인 설정이 가능합니다.</li>
<li>
<code>logoutUI</code> : log out UI를 보여주는 함수로, 화면에 나타나는 메시지 및 css style을 수정할 수 있습니다.</li>
<li>
<code>logoutServer</code> : log out시 실행되는 함수로, 사용자의 권한(<code>user_auth</code>)를 boolean reactive 형태로 관리합니다.</li>
</ul>
<p>login logic : <code>loginUI</code>에 ID/PW 입력 -&gt; <code>loginServer</code>에서 확인 후 권한 부여</p>
<p>logout logic : <code>logoutUI</code>의 logout button 클릭 -&gt; <code>logoutServer</code>에서 reactive하게 user_auth 상태 변경</p>
<p><small> (자세한 내용은 <a href="https://github.com/PaulC91/shinyauthr">shinyauthr package</a> 참조) </small></p>
<p>UI의 일반적인 구성은 다음과 같습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dashboardPage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>  </span>
<span>  skin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,</span>
<span>  header <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dashboardHeader</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"방역관리 위험도 평가"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">tags</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">li</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>class <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dropdown"</span>, style <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"padding: 8px;"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyauthr</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shinyauthr/man/logoutUI.html">logoutUI</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"logout"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>  </span>
<span>  sidebar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dashboardSidebar</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># menu </span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>  </span>
<span>  body <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dashboardBody</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyauthr</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shinyauthr/man/loginUI.html">loginUI</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"login"</span>,</span>
<span>                        title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">h4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">HTML</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;center&gt; 이름과 전화번호를 입력해주세요 &lt;/center&gt;"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, </span>
<span>                        user_title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"이름"</span>, </span>
<span>                        pass_title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"전화번호"</span>, </span>
<span>                        login_title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"로그인"</span>,</span>
<span>                        error_message <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">h6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"유효하지 않은 정보입니다. 처음이시라면 회원가입을 눌러주세요."</span>, style <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color : red"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>                        additional_ui <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">tags</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">a</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>                          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionBttn</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>                            inputId <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"register"</span>,</span>
<span>                            label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"회원가입"</span>,</span>
<span>                            style <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fill"</span>, </span>
<span>                            color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"danger"</span>,</span>
<span>                            size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"xs"</span></span>
<span>                          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>                        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># menu 별 UI</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>본 UI는 <code>shinydashboard</code>를 기반으로 구성되어있습니다. 따라서 header에 logout 버튼을 생성하려 했고, dashboradBody에 login UI를 배치해 메인 화면에 바로 로그인 화면이 나오도록 하였습니다. 또한 loginUI의 parameter를 원하는 텍스트로 설정하였고, 회원가입은 <code>additional_ui</code> parameter를 이용하여 추가적으로 <a href="https://shinyapps.dreamrs.fr/shinyWidgets/"><code>shinyWidgets::actionBttn</code></a> 에 따른 UI가 생성되도록 설계하였습니다. 아래는 로그인 화면과 회원가입 버튼 클릭 시의 화면입니다.</p>
<div class="columns">
<div class="column" style="width:50%;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://blog.zarathu.com/jp/posts/2023-05-24-surveyDashboardR/img/login.png" class="img-fluid figure-img" style="width:50.0%"></p>
<figcaption>로그인 화면</figcaption></figure>
</div>
</div><div class="column" style="width:50%;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://blog.zarathu.com/jp/posts/2023-05-24-surveyDashboardR/img/Register.png" class="img-fluid figure-img" style="width:50.0%"></p>
<figcaption>회원가입 화면</figcaption></figure>
</div>
</div>
</div>
<p>그러나 <code>loginServer</code> 함수의 경우, 기본 ID/PW 저장 DB 세팅이 <code>tidyverse</code> 패키지의 <code>tibble</code>형태로 작성되어 있기 때문에 동적 형태의 DB를 지원하고 있지 않습니다.</p>
<p>예를 들어 회원 가입 후 즉시 로그인하기 위해선 새로운 사용자의 정보가 반영된 DB를 reactive하게 Call 해야하는데 이 부분에 제약사항이 있었습니다.</p>
<p>따라서 reactive하게 DB 정보를 받아올 수 있도록 함수를 수정해야 했습니다. (다음 링크 참조 : <a href="https://github.com/thisis05/shinyauthr_with_reactive_DB">Shinyauthr loginServer Customizing</a>)</p>
<div class="cell">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">session</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  </span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#login/logout function--------------------------------------</span></span>
<span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">credentials</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Myloginserver</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>      id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"login"</span>,</span>
<span>      log_out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">logout_init</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>      reload_on_logout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  </span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">logout_init</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyauthr</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shinyauthr/man/logoutServer.html">logoutServer</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> </span>
<span>    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"logout"</span>, </span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">credentials</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">user_auth</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  </span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">userdata</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">credentials</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">info</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  </span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p><code>Myloginserver</code>는 customizing 된 <code><a href="https://rdrr.io/pkg/shinyauthr/man/loginServer.html">shinyauthr::loginServer</a></code> 함수이며 미리 생성된 사용자 정보 DB table을 바탕으로 로그인이 되도록 설정되어 있습니다. 기본적으로 <code><a href="https://rdrr.io/pkg/shinyauthr/man/loginServer.html">shinyauthr::loginServer</a></code> 함수는 <code>info</code>와 <code>user_auth</code>라는 변수를 담고 있습니다.</p>
<ul>
<li><p><code>info</code>의 경우, 로그인의 기반이 되는 DB 내에서 사용자의 ID/PW에 해당하는 row의 컬럼 값들을 table 형태로 저장하고 있습니다.</p></li>
<li><p><code>user_auth</code>의 경우, 권한이 있느냐 없느냐를 나타내며 로그인이 완료될 시 TRUE, 아닐 시 FALSE 값을 가지게 됩니다.</p></li>
</ul>
<p>따라서 <code>credentials</code>이라는 변수에 <code>loginServer</code> 함수를 저장하면 reactive한 <code>user_auth</code>값과 <code>info</code>값을 지니게 됩니다.</p>
<p><code>reload_on_logout = TRUE</code>로 설정하면 로그 아웃 시 세션이 초기화되어 자동으로 로그인 화면으로 돌아갑니다. 기본적으로 세션이 초기화되면 <code>credentials()$user_auth == FALSE</code>가 되어 로그인이 취소되고 권한이 사라지므로, 좀 더 확실한 로그아웃을 위해 다음과 같은 옵션을 설정하였습니다.</p>
<p><code>logout_init</code>은 <code>logoutServer</code> 함수로 <code>logoutUI</code>의 ID를 받아온 뒤, reactive 함수에 따라 logout 버튼을 보여줄 지 숨길 지 반응형으로 설정할 수 있습니다. 기본적으로 권한이 있느냐 없느냐에 따라 logout 버튼을 보여주거나 숨겨야하기때문에 위와 같이 설정해줍니다.</p>
<p>또한 <code>shinyauthr</code> 패키지는 로그인 / 로그아웃 UI만 보여주고 로그인 상태에 따른 UI 변환 기능은 없기 때문에, 수동으로 로그인 완료시에만 보여주고 싶은 UI에는 옵션을 추가해야 합니다.</p>
<pre><code>req(credential()$user_auth)</code></pre>
<p>다음과 같은 옵션을 <code>uiOutput</code>을 이용하여 <code>renderUI</code>에 추가하거나, 아래와 같이 <code>MenuOutput</code> 과 <code>renderMenu</code>를 이용하여 <code>shinydashboard</code>의 Menu 자체를 숨길 수 있습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#UI</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dashboardPage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>  </span>
<span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># others</span></span>
<span>  </span>
<span>  sidebar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dashboardSidebar</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarMenu</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>      id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tabs"</span>,</span>
<span>      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">menuItemOutput</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"check"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>  </span>
<span>  body <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dashboardBody</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tabItems</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tabItem</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>tabName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"check"</span>,</span>
<span>              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># UI contents</span></span>
<span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Server</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">session</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  </span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">check</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderMenu</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">req</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">credentials</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">user_auth</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">menuItem</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"방역관리자 업무 점검"</span>, icon <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">icon</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"check"</span>, lib <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glyphicon"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, tabName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"check"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</section><section id="필수-응답-설문-설정-shinyvalidate" class="level2"><h2 class="anchored" data-anchor-id="필수-응답-설문-설정-shinyvalidate">3. 필수 응답 설문 설정 : <code>shinyvalidate</code>
</h2>
<p><a href="https://rstudio.github.io/shinyvalidate/"><code>shinyvalidate</code></a> package는 <code>selectInput</code>, <code>numericInput</code> 등 <code>Input</code> function에 대해 사용자의 입력값에 대한 제약조건을 걸 수 있는 package입니다.</p>
<p>기본적으로 필수적으로 응답해야는 부분에 대해 설정할 수 있으며, ‘&lt;’ 등의 연산자를 사용한 제약조건, ‘email’ 형식 제약조건 등 여러가지 option이 있습니다.</p>
<p>본 개발에선 필수 응답 설문 항목에 대한 설정을 위해 다음과 같이 <code>shinyvalidate</code> package를 사용하였습니다.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">[validation name] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> shinyvalidate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>InputValidator<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">new</span>()</span>
<span id="cb7-2">[validation name]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_rule</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input$[input variable]"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sv_required</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[Warning message]"</span>))</span></code></pre></div>
</div>
<p>기본적인 Logic은 다음과 같습니다.</p>
<ol type="1">
<li>
<code>InputValidator$new()</code>를 통한 validation 변수 선언</li>
<li>
<code>add_rule</code>을 통한 <code>input variable</code>별 Warning Message 작성</li>
</ol>
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://blog.zarathu.com/jp/posts/2023-05-24-surveyDashboardR/img/validate.png" class="img-fluid figure-img" style="width:50.0%"></p>
<figcaption>회원가입 시 shinyvalidate 사용 예시</figcaption></figure>
</div>
<p>다음과 같이 필수 입력 항목의 경우, 응답하지 않을 시 기본적으로 빨간색 테두리와 작성한 경고 메시지가 뜨게 됩니다.</p>
<p>추가적으로 이러한 필수 응답 항목에 답하지 않을 시 다음단계로 지나가지 못하게 제약조건을 추가할 수 있습니다.</p>
<pre><code>    1. req([validation name]$is_valid())

    2. if([validation name]$is_valid())</code></pre>
<p>다음과 같은 옵션을 추가하여 <code>renderUI</code> 혹은 <code>actionButton</code> click시의 전제 조건으로 추가하여 Web 설계가 가능합니다.</p>
</section><section id="reactable-onclick-활용-ui에서-동적으로-db-table-update하기" class="level2"><h2 class="anchored" data-anchor-id="reactable-onclick-활용-ui에서-동적으로-db-table-update하기">4. Reactable onClick 활용 : UI에서 동적으로 DB Table Update하기</h2>
<p>본 대시보드의 관리자 버전에선 관리자가 컨설팅 완료 여부를 입력해야하는 기능이 필요했습니다.</p>
<p>또한 DB의 값이 관리자의 Web 내의 완료 여부 입력에 따라 같이 변경되어야 했습니다.</p>
<p>따라서 <a href="https://glin.github.io/reactable/"><code>reactable</code></a> 형태로 DB의 테이블을 보여준 뒤 cell 마다 <code>onClick</code> 옵션을 추가하여 binary 형태로 값을 자유롭게 변경할 수 있도록 기능을 추가했습니다.</p>
<p>아래는 <code>reactable</code>에 구현한 예시 코드입니다.</p>
<div class="cell">
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">consult_rt</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">table</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">rt</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>      data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">table</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># DB에서 받아온 테이블</span></span>
<span>      onClick <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">JS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"function(rowInfo, colInfo) {</span></span>
<span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                      var tb_index = {'colId': colInfo.id, 'rowId': rowInfo.id };</span></span>
<span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                      Shiny.setInputValue('consult_index', tb_index, { priority: 'event' })}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>      </span>
<span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#...이외 내용 생략</span></span>
<span>        </span>
<span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>먼저 <code>onClick</code> parameter를 통해 각 cell을 클릭할 시의 reactive action을 설정해줍니다.</p>
<p><code>JS</code> 함수를 통해 JavaScript 코드를 호출하였고, <code>tb_index</code>라는 variable을 선언하여 row Id와 column Id를 저장한 뒤 <code>Shiny</code> 내 <code>consult_index</code>라는 input 변수에 <code>tb_index</code>의 값이 저장되도록 하였습니다.</p>
<p>따라서 이 input 변수를 다음과 같이 활용하였습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observeEvent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">consult_index</span>,  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># table : reactable에 사용한 table로 똑같이 DB에서 받아옴</span></span>
<span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">rowid</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/integer.html">as.integer</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">consult_index</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">rowId</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colid</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">consult_index</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colId</span> </span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colname</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">consult_list</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/match.html">match</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colid</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">consult_list_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#원래 DB 컬럼명</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">userKey</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">table</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">rowid</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KeyName"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#해당 row의 DB Key</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">value</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">table</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">rowid</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colname</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#실제 DB에서의 값</span></span>
<span>    </span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colname</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">consult_list</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/match.html">match</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colid</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">consult_list_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">date</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/character.html">as.character</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/Sys.time.html">Sys.Date</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">value</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/NA.html">is.na</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">message</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">h5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"컨설팅 완료 상태로 변경되었습니다."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">query</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/paste.html">paste0</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UPDATE consult SET "</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colname</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" = ? WHERE PKcolumn = ?"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://dbi.r-dbi.org/reference/dbExecute.html">dbExecute</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">con</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">query</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">date</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">userKey</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">discon</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">message</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">h5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"컨설팅 미완료 상태로 변경되었습니다."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">query</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/paste.html">paste0</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UPDATE consult SET "</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colname</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" = ? WHERE PKcolumn = ?"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://dbi.r-dbi.org/reference/dbExecute.html">dbExecute</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">con</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">query</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">userKey</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">discon</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span>    </span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p><code>consult_incex</code>에 저장된 row Id와 column Id는 index 형태로, <code>input$consult_index$rowId</code> 형식으로 값을 받아올 수 있습니다.</p>
<p>받아온 index는 0부터 시작하고, DB table이 저장된 <code>data.table</code> 형태의 table은 index가 1부터 시작하기 때문에 +1 해주어 row의 index를 받아왔습니다.</p>
<p>이렇게 row의 index와 column의 index를 <code>rowid</code>, <code>colid</code>에 저장한 다음 <code>table[rowid][["Key Name"]]</code>을 통해 현재 row의 DB 내 key 값을 받아왔습니다.</p>
<p>현재 DB는 컨설팅 완료 시에는 컨설팅 완료 날짜를, 미완료 시에는 NA로 저장되어 있기 때문에 이를 <code>ifelse</code> 구문을 활용하여 각각의 경우에 맞게 코드를 작성하였습니다.</p>
<p>위에서 받아온 row의 DB Key 값을 이용해 SQL문으로 DB table에 접근하여 값을 update 해주었습니다.</p>
<p><small> (이렇게 변경된 DB table이 반영된 <code>reactable</code>을 사용자에게 동적으로 보여주기 위해선 UI 함수와 reactable을 재호출해야하는데, 이 부분에 대해선 생략하겠습니다.) </small></p>
<p>또한 <a href="https://daattali.com/shiny/shinyalert-demo/">shinyalert</a>를 사용하여 값이 변경되었음을 팝업 메시지로 띄워주었습니다.</p>
<p>아래는 실제 UI에서 구현된 예시입니다.</p>
<div class="columns">
<div class="column" style="width:50%;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://blog.zarathu.com/jp/posts/2023-05-24-surveyDashboardR/img/consulting_pre.png" class="img-fluid figure-img" style="width:150.0%"></p>
<figcaption>변경 전</figcaption></figure>
</div>
</div><div class="column" style="width:50%;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://blog.zarathu.com/jp/posts/2023-05-24-surveyDashboardR/img/consulting_post.png" class="img-fluid figure-img" style="width:100.0%"></p>
<figcaption>변경 후</figcaption></figure>
</div>
</div>
</div>
</section><section id="이-외" class="level2"><h2 class="anchored" data-anchor-id="이-외">5. 이 외</h2>
<section id="reactable-reactive-download-to-csv" class="level3"><h3 class="anchored" data-anchor-id="reactable-reactive-download-to-csv">(1) <code>reactable</code> : reactive download to csv</h3>
<p>admin을 위한 web page 제작 과정에서, DB table 들로부터 받아온 사용자 정보를 <code>reactable</code>을 이용하여 다음과 같이 제작하였습니다.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://blog.zarathu.com/jp/posts/2023-05-24-surveyDashboardR/img/userinfo.png" class="img-fluid figure-img" style="width:80.0%"></p>
<figcaption>사용자 정보</figcaption></figure>
</div>
<p>이러한 table을 csv로 다운로드 받을 수 있게 하면서도, 만약 사용자가 일부 사용자의 정보를 확인하고 싶어 검색 기능을 사용했을 때 보여지는 subset table을 reactive하게 csv로 다운로드 받을 수 있게 하려했습니다.</p>
<p>이 부분은 <a href="https://glin.github.io/reactable/articles/javascript-api.html">Reactable 공식 문서</a>의 JavaScript API 이용 부분을 차용하여 작성하였습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/graphics/box.html">box</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"전체 사용자 정보"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">h5c</span>,</span>
<span>                    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactableOutput</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"infotable"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, </span>
<span>                    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">br</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>                    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">htmltools</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/htmltools/reference/browsable.html">browsable</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>                      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tagList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>                        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">tags</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">button</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>                          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tagList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fontawesome</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rstudio.github.io/fontawesome/reference/fa.html">fa</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"download"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Download CSV"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>                          onclick <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Reactable.downloadDataCSV('user_info', '[filename].csv')"</span></span>
<span>                        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>                      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>                    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>UI 작성 Part에서 <code>box</code>를 통해 <code>reactable</code>을 이용한 사용자 정보를 보여주려고 한다면 위와 같이 filename 부분을 수정하여 작성하면 현재 Web에 보여지는 <code>reactable</code>을 Download to csv가 가능합니다.</p>
</section><section id="lapply를-이용한-설문-ui-간단하게-만들기" class="level3"><h3 class="anchored" data-anchor-id="lapply를-이용한-설문-ui-간단하게-만들기">(2) <code>lapply</code>를 이용한 설문 UI 간단하게 만들기</h3>
<p>만약 설문의 스타일이 간단하거나 (Ex: 예/아니오 유형, 체크 유형, 점수 유형) 반복되는 경우 <code>lapply</code>함수를 통해 좀 더 간단하고 정갈하게 UI 및 Server 코드를 작성할 수 있습니다.</p>
<p>예를 들어, 해당하는 항목에 체크하는 형식의 설문이라면, 아래와 같이 미리 설문내용만 list 형태로 만들어 놓을 수 있습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># example 5개 Question</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Q_list</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" 시설 위험도 평가 후 시설 별 맞춤형 방역관리 지침을 마련하였는가?"</span>, </span>
<span>    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" 정기적으로 종사자들에게 방역 수칙 교육·안내 하였는가?"</span>,</span>
<span>    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" 발열 및 호흡기 증상 유무를 확인하고 증상이 있는 경우 즉시 검사받도록 안내하였는가?"</span>,</span>
<span>    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" 감염병 예방수칙 홍보 안내문을 잘 보이는 곳에 배치 하였는가?"</span>,</span>
<span>    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" 환기 대장 및 소독 대장을 배치 하였는가?"</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Shiny Input 함수의 ID를 각 설문 항목별 name으로 지정 (이 때 DB를 사용하실 거라면 DB의 컬럼명으로 ID를 지정하면 간편합니다)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/names.html">names</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Q_list</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/paste.html">paste0</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"q"</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>다음과 같이 설문 내용을 정리한 변수를 기반으로 <code>Shiny</code> 코드를 작성할 수 있습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># UI code </span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/lapply.html">lapply</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/names.html">names</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Q_list</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>                              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">checkboxInput</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Q_list</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span>, value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">F</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>                             <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Server code</span></span>
<span>  </span>
<span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 답변 여부에 따라 Yes or No 형식으로 저장 </span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">inputlist</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/lapply.html">lapply</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/names.html">names</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Q_list</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>      <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Yes"</span></span>
<span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No"</span></span>
<span>      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  </span>
<span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## DB에Insert (DB 컬럼 순서에 맞게) </span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DBI</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://dbi.r-dbi.org/reference/dbExecute.html">dbExecute</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">con</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/paste.html">paste0</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"INSERT INTO [table name] values ('"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/paste.html">paste</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/unlist.html">unlist</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">inputlist</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, collapse <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"', '"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"')"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">discon</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p><code>Shiny</code>의 UI 내에서도 간편하게 위와 같이 <code>lapply</code> 함수를 사용하여 Input 함수를 나타내는 것이 가능합니다.</p>
<p><code>Input[[x]]</code>로 사용자의 입력 내용에 접근 가능하므로 다음과 같이 <code>inputlist</code>로 Input 값에 접근에 DB에 저장할 수 있습니다.</p>
<p>설문 내용을 value로, Input ID 및 DB columnname을 name으로 할 시 좀더 간편하게 코드 작성이 가능합니다.</p>
<p>답변 유형(Yes or No, 점수 등등)에 따라 설문 datatable을 만들어 놓은 뒤 이에 맞게 datatable 컬럼 별로 <code>lapply</code> 함수를 잘 사용하여 UI 코드를 작성하면 보다 간편하게 <code>Shiny</code>를 이용하실 수 있습니다.</p>
</section></section><section id="마치며" class="level2"><h2 class="anchored" data-anchor-id="마치며">마치며</h2>
<p>R만을 이용하여 Server와 UI를 동시에 제작하고 배포할 수 있다는 것이 <strong>R Shiny</strong> 의 가장 큰 장점입니다. 또한 오픈 소스가 활성화되어 있어 다양한 사용자 개발 library를 이용할 수 있으므로 사용하고 싶은 기능은 웬만하면 사용이 가능하며, 기존 library의 함수를 원하는 방식으로 변형하여 사용할 수도 있습니다. JavaScript나 CSS와도 호환이 잘 되기 때문에 UI 디자인까지 R이라는 한 Tool로 작업이 가능하기 때문에 상당히 편리합니다.</p>
<p>본 글에선 이러한 <strong>R Shiny</strong> 웹 App의 기반이 되는 로그인 시스템, DB 운용 등 잘 알려지지 않은(?) 여러가지 세세한 기능과 가능성에 대해 소개해보았습니다.</p>
<p>이외에 여러 package를 공부해가며 나만의 Shiny Web App을 제작해보는 과정 역시 재미있으니, 많은 분들께서 <strong>R Shiny</strong>를 이용하여 멋진 웹 페이지 제작에 참여해보시길 바라겠습니다.</p>


</section><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/">CC BY-NC 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{kim2023,
  author = {Kim, Yeongho},
  title = {R {Shiny} {기반} {방역관리} {위험도} {평가} {대시보드}},
  date = {2023-06-20},
  url = {https://blog.zarathu.com/jp/posts/2023-05-24-surveyDashboardR},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-kim2023" class="csl-entry quarto-appendix-citeas">
Kim, Yeongho. 2023. <span>“R Shiny 기반 방역관리 위험도 평가
대시보드.”</span> June 20, 2023. <a href="https://blog.zarathu.com/jp/posts/2023-05-24-surveyDashboardR">https://blog.zarathu.com/jp/posts/2023-05-24-surveyDashboardR</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>shiny</category>
  <guid>https://blog.zarathu.com/jp/posts/2023-05-24-surveyDashboardR/</guid>
  <pubDate>Mon, 19 Jun 2023 15:00:00 GMT</pubDate>
  <media:content url="https://blog.zarathu.com/jp/posts/2023-05-24-surveyDashboardR/img/logo.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>ADaM in CDISC and tidyCDISC</title>
  <dc:creator>Seoyoon Kim</dc:creator>
  <link>https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/</link>
  <description><![CDATA[ 
<!-- Google tag (gtag.js) -->
<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-L0DYYSH9KM"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L0DYYSH9KM');
</script>





<p><img src="https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/img/logo.png" width="500"></p>
<p>Clinical trials 데이터가 CDISC 형태로 통일되어 가며, CDISC에 대한 관심도가 많아지고 있다. 오늘 CDISC와 대략적인 data format에 대해 배워보고, CDISC ADaM 데이터를 시각화 해주는 Shiny App 오픈소스 패키지인 tidyCDISC에 대해서 소개하려고 한다.</p>
<p><br></p>
<section id="cdisc란-왜-중요할까" class="level2">
<h2 class="anchored" data-anchor-id="cdisc란-왜-중요할까">1. CDISC란? 왜 중요할까?</h2>
<p>임상시험에서 수많은 종류의 데이터들이 수집된다. 임상시험 데이터는 의약품의 안전성과 유효성을 증명하며, 임상효과를 확인하고 이상반응을 조사하는 데 사용될 수 있어 매우 중요하다.</p>
<p><em>그러나</em> 문제는 각 기관마다 통일된 규정이 없어서 데이터들의 변수 이름도 제각각이고, 데이터의 구조와 정의가 다 다르다.</p>
<p>▶️ 데이터를 정리하고 분석하는지에 대한 국제적인 표준이 없다면, 데이터를 해석하고 설명하는 데만 상당한 시간과 노력이 필요하여서 비효율적이다.</p>
<p>이런 비효율성을 없애고자 <strong>CDISC</strong>라는 비영리 단체가 1997년에 설립되어 규제기관, 제약회사, 임상연구 조직 등을 규합해서 임상시험 데이터의 표준을 정의하였다.</p>
<p>이제 미국 FDA나 일본의 PMDA와 같은 규제기관들도 신약개발 및 임상시험에서 데이터를 <strong>CDISC</strong> 표준으로 제출하기를 요구하게 되는 만큼 <strong>CDISC</strong> 표준은 널리 사용되고 있기에, 이에 대해서 잘 알고 있는 것이 중요하다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/img/cdiscflow.png" width="610"> <br><small> image from <a href="https://tcpharm.org/pdf/10.12793/jkscpt.2007.15.1.20">Kor J Clin Pharmacol Ther</a> </small></p>
<p>CDISC에는 데이터와 관련된 SDTM (Study Data Tabulation Model) 과 ADaM (Analysis Data Model)이 있다.</p>
<ul>
<li><p>SDTM은 임상시험의 데이터를 제출하기 위해 정의한 표준으로, Raw Data를 정해진 형식으로 정리/정의한다.</p></li>
<li><p>SDTM을 이용하여 데이터분석이 가능하도록 변환한 형태로 변환하는게 ADaM이다. <br> <small><a href="https://www.lexjansen.com/pharmasug/2010/CD/CD06.pdf">How we build ADaM from SDTM</a></small></p></li>
</ul>
<p><br> <span style="color: red">즉, ADaM은 데이터의 도출과 분석, SDTM은 Raw Data를 형식에 맞게 잘 정리하여 테이블에 정렬하는 것!</span></p>
<p>이 글에서는 ADaM에 대해서 알아본 후, tidyCDISC에 대해서 소개하고자 한다.</p>
</section>
<section id="adam이란" class="level2">
<h2 class="anchored" data-anchor-id="adam이란">2. ADaM이란?</h2>
<p>우선 ADaM의 데이터 구조에 대해서 배우기 전에, CDISC에서 정의한 ADaM의 <em>Fundamental Principles</em> 를 확인해 보자.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/img/fundamental.png" width="655"> <br><small> image from <a href="https://www.pharmasug.org/proceedings/2015/DS/PharmaSUG-2015-DS11.pdf">PharmaSUG</a> </small></p>
<p>ADaM의 <em>Fundamental Principles</em> 는 데이터셋 구조가 아닌 분석 요구와 이해에 중점을 둔다. ADaM은 분석 가능한 데이터셋을 만드는 역할을 한다.</p>
<p><br> ADaM에서 정의된 Data Structure는 4개가 있다:</p>
<ol type="1">
<li>ADSL (subject-level analysis dataset)</li>
<li>BDS (basic data structure)</li>
<li>OCCDS (occurence data structure)</li>
<li>OTHER</li>
</ol>
<p><img src="https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/img/categoriesadam.png" width="600"> <br><small> copy of “ADaMIG v1.1 Figure 1.6.1 Categories of Analysis Datasets”</small></p>
<ul>
<li><p>이런 Data Structure가 왜 필요할까?</p>
<ul>
<li>분석을 위한 structure가 필요하기 때문이다!</li>
</ul></li>
<li><p>분석 목적에 따라 맞는 특정한 data structure를 사용한다.</p></li>
</ul>
<p><br></p>
<section id="adsl-analysis-data-subject-level" class="level3">
<h3 class="anchored" data-anchor-id="adsl-analysis-data-subject-level">2.1. ADSL (Analysis Data Subject Level)</h3>
<p>ADaM의 첫 번째 데이터 구조는 <strong>ADSL</strong>(Analysis Data Subject Level)이다.</p>
<p><strong>ADSL</strong>은:</p>
<ul>
<li><p>개별 연구대상자를 가진다, <em>contains one record per subject</em></p></li>
<li><p>한 행에 대상자의 정보, 임상시험의 정보 등 SDTM의 한 대상자의 모든 자료가 들어가고, 다른 ADaM datasets의 분석에 필요한 data가 있다.</p></li>
<li><p>주요 변수는 ID (USUBJID), 약물그룹(TRT01P), 시작일(RFSTDTC), 종료일 (RFENDTC) 등이 있다.</p></li>
</ul>
<p>ADSL example in <a href="https://rinpharma.shinyapps.io/tidyCDISC/">tidyCDISC</a></p>
<p><small> 다른 변수들의 의미는 <a href="https://www.cdisc.org/system/files/members/standard/foundational/ADaMIG_v1.3.pdf">여기</a>를 확인할 수 있다.</small></p>
</section>
<section id="bds-basic-data-structure" class="level3">
<h3 class="anchored" data-anchor-id="bds-basic-data-structure">2.2. BDS (Basic Data Structure)</h3>
<p>ADaM의 두 번째 데이터 구조는 <strong>BDS</strong>(Basic Data Structure)이다.</p>
<ul>
<li><p>한 대상자에 대한 반복적인 혹은 여러 번의 결과가 나타나 있는 데이터이다.</p></li>
<li><p>대상자, 분석 변수, 분석 시점별로 하나 이상의 데이터가 존재한다.</p></li>
<li><p><strong>BDS</strong> 에서는 분석하려는 매개변수(예: PARAM 및 관련 변수들)을 설명하고 분석할 값 (예: AVAL 및 AVALC 등 관련 변수들)을 포함하는 중앙 변수 집합이 포함된다.</p>
<ul>
<li>PARAM: 분석하고자 하는 값에 대한 설명</li>
<li>AVAL/AVALC: 분석하고자 하는 값</li>
</ul></li>
<li><p><strong>ADSL</strong> 및 <strong>OCCDS</strong>와 같은 다른 데이터 구조의 기초 또는 시작점이기 때문에 “Basic”라고 한다.</p></li>
<li><p>기본 데이터 집합(예: 치료, 인구학 및 안전성 데이터)을 처리하는 데 사용되는 데이터 구조이다.</p></li>
<li><p>반복측정이 계획되어 있거나, 이미 반복적으로 측정한 값이다.</p></li>
<li><p><strong>BDS</strong>는 부작용이나 기타 발생 데이터(other occurrence data)의 발생률 분석은 지원하지 않는다.</p></li>
<li><p>모든 <strong>ADSL</strong> 변수가 <strong>BDS</strong> dataset에 있을 필요가 없다.</p></li>
</ul>
<section id="adlb-laboratory-data-analysis-dataset" class="level4">
<h4 class="anchored" data-anchor-id="adlb-laboratory-data-analysis-dataset">2.2.1. ADLB (Laboratory Data Analysis Dataset):</h4>
<ul>
<li><p>검사 데이터, laboratory test results data.</p></li>
<li><p>주요 변수는 ID (USUBJID), 검사항목 (LBTESTCD, LBTEST), 결과값 (LBORRES)이 있다.</p></li>
</ul>
<p><img src="https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/img/adlb.png" width="663"> <br><small>CDISC. (2011). Analysis Data Model Implementation Guide: ADaM Version 1.1.</small></p>
</section>
<section id="adeff-analysis-dataset-definition" class="level4">
<h4 class="anchored" data-anchor-id="adeff-analysis-dataset-definition">2.2.2. ADEFF (Analysis Dataset Definition):</h4>
<ul>
<li><p>메타데이터 (다른 데이터를 설명해 주는 데이터) 테이블이다.</p></li>
<li><p>분석하려는 data set의 내용 및 구조를 설명한다.</p></li>
<li><p>ADaM dataset를 만드는데 ADEFF table이 사용된다.</p></li>
</ul>
<p><small> <span style="color: red"><em>The ADEFF table should be completed before creating the analysis datasets to ensure consistency in variable definitions and to allow traceability of the analysis datasets back to their source data.</em></span></small></p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/img/adeff.png" width="850"> <small>table from <a href="https://www.cdisc.org/kb/examples/adam-basic-data-structure-bds-using-paramcd-80288192">CDISC.org</a></small></p>
</section>
<section id="adtte-analysis-data-time-to-event" class="level4">
<h4 class="anchored" data-anchor-id="adtte-analysis-data-time-to-event">2.2.3. ADTTE (Analysis Data Time-to-Event):</h4>
<ul>
<li><p>임상 시험에서 기록하고자하는 사건(event)의 발생 시간</p></li>
<li><p>more detailed information about <strong>ADTTE</strong> could be found <a href="https://www.lexjansen.com/pharmasug/2014/DS/PharmaSUG-2014-DS09.pdf">here</a> <img src="https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/img/adtte.png" width="730"></p></li>
</ul>
<p><small> [PARAMCD:Parameter Code, STARTDT: Time to event origin date for subject, ADT: Analysis date, SRCDOM: Source Data] </small></p>
</section>
</section>
<section id="occds-occurence-data-structure" class="level3">
<h3 class="anchored" data-anchor-id="occds-occurence-data-structure">2.3. OCCDS (Occurence Data Structure)</h3>
<p>ADaM Dataset structure 중 세 번째 <strong>OCCDS</strong>는 한 대상자에 대한 반복적인 결과가 나타난다는 점에서 <strong>BDS</strong>와 비슷하다.</p>
<p><br> <em>하지만</em>, <strong>OCCDS</strong>는 <strong>BDS</strong>처럼 반복적으로 측정되지 않으며, 한 대상자에 대한 결과가 한 건도 발생하지 않거나, 이와 반대로 무수히 많이 발생할 수도 있다.</p>
<p><br> <strong>OCCDS</strong> 는 부작용과 같은 discrete event를 분석하는 데 사용된다.</p>
<p><br><small><a href="https://www.cdisc.org/system/files/members/standard/foundational/adam/ADaM_OCCDS_v1.0.pdf">CDISC ADaM structure for OCCDS v1.0</a></small></p>
<p><br> <strong>OCCDS</strong>의 종류를 알아보자!</p>
<section id="adae-adverse-events-analysis-datset" class="level4">
<h4 class="anchored" data-anchor-id="adae-adverse-events-analysis-datset">2.3.1. ADAE (Adverse Events Analysis Datset):</h4>
<ul>
<li>부작용 정보에 대한 dataset</li>
<li>One record per subject per adverse event</li>
<li>주요 변수는 임상시험 과정: ID (USUBJID), 부작용종류 (AETERM), 발생일 (AESTDTC), 해결일 (AEENDTC), 중증도(AESER)</li>
</ul>
<p>ADAE example in <a href="https://rinpharma.shinyapps.io/tidyCDISC/">tidyCDISC</a></p>
</section>
<section id="adcm-concomitant-medications-analysis-datase" class="level4">
<h4 class="anchored" data-anchor-id="adcm-concomitant-medications-analysis-datase">2.3.2. ADCM (Concomitant Medications Analysis Datase)</h4>
<ul>
<li><p>복용 약물정보</p></li>
<li><p>주요 변수는 ID (USUBJID), 약물명 (CMTRT), 시작일 (CMSTDTC), 종료일 (CMENDTC), 용량 (CMDOSFRQ)</p></li>
<li><p>One record or multiple records per subject per recorded medication occurrence or constantdosing interval</p></li>
</ul>
<p>example ADCM dataset: <img src="https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/img/adcm.png" width="730"></p>
</section>
</section>
<section id="other" class="level3">
<h3 class="anchored" data-anchor-id="other">2.4. OTHER</h3>
<p>OTHER의 dataset은:</p>
<ul>
<li>ADaM의 Fudamental Principles 및 기타 ADaM 규칙(naming convention 등등)을 따르지만, ADaM의 정의된 3개의 데이터 구조(ADSL, BDS, OCCDS)를 따르지 않는다.</li>
</ul>
<p><small> details on <a href="https://www.pharmasug.org/proceedings/2015/DS/PharmaSUG-2015-DS16.pdf">other</a></small></p>
<p><br></p>
</section>
</section>
<section id="r-shiny-app-tidycdisc" class="level2">
<h2 class="anchored" data-anchor-id="r-shiny-app-tidycdisc">3. R Shiny App tidyCDISC</h2>
<p><strong>tidyCDISC</strong>는 오픈소스 프로그램이며, ADaM-ish 데이터로 인터랙티브한 표, 그래프, 그리고 환자들의 프로필 생성을 할 수 있는 shiny app이다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/img/tidycdisc.png" width="250"></p>
<p>tidyCDISC의 데모를 같이 실행해보자 ▶️ <a href="https://rinpharma.shinyapps.io/tidyCDISC/" class="uri">https://rinpharma.shinyapps.io/tidyCDISC/</a></p>
<p><strong>tidyCDISC</strong>의 세 가지 주요 기능:</p>
<ol type="1">
<li>Drag-and-Drop Table Generator</li>
<li>Population Explorer (Graph Generator)</li>
<li>Individual Explorer/ Patient Profile Viewer</li>
</ol>
<p><br> 각 기능에 대해 세 개의 R 패키지를 사용한다:</p>
<ol type="1">
<li>Table Generator ▶️ GT 패키지</li>
<li>Population Explorer ▶️ plotly 패키지지</li>
<li>Patient Profile Viewer ▶️ timevis 패키지지</li>
</ol>
<p><br> 차근차근 각 패널이 어떤 기능이 있는지 확인해 보자!</p>
<section id="data-upload-패널" class="level3">
<h3 class="anchored" data-anchor-id="data-upload-패널">3.1. Data Upload 패널</h3>
<p>맨 처음 <strong>tidyCDISC</strong> 데모에 들어가면 아래와 같이 Data Upload 패널이 랜딩 페이지로 보일 것이다. 데모에는 <em>CDISC Pilot Data</em> 예시 데이터가 사용되고 있다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/img/dataupload.png" width="762"></p>
<p>tidyCDISC 앱은 ADaM(-ish) 데이터가 없으면 사용할 수가 없다. 앱을 실행하려면 최소한 ADSL sas7bdat 파일이 필요하며, 더 많은 데이터가 있을수록 더 많은 기능과 인사이트를 탐색할 수 있다.</p>
<p><br></p>
</section>
<section id="table-generator-패널" class="level3">
<h3 class="anchored" data-anchor-id="table-generator-패널">3.2. Table Generator 패널</h3>
<p>다음 <code>Table Generator</code> 탭에 들어가면 인터랙티브한 테이블을 만들 수 있다.</p>
<p>Table Generator 탭은 두 개로 구분된다. 왼쪽 영역은 테이블을 만드는 데 사용되는 드래그 앤 드롭 인터페이스이고 오른쪽 영역은 실시간 테이블 출력한다.</p>
<p>우선 테이블을 생성하려면 왼쪽의 변수 블록을 “Variable” 드롭 영역으로 끌어다 놓고, <code>ANOVA</code>, <code>CHG</code>, <code>MEAN</code>, <code>FREQ</code> 등등을 “Stats” 드롭 영역에 끌어다 놓으면 된다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/img/tablegenerator.gif" width="700"></p>
<ul>
<li>변수들 위에 <code>Standard Analysis Tables</code> 드롭 다운에는 규제 당국에 제출할 문서에 공통으로 포함되는 테이블 list가 나온다.
<ul>
<li>테이블 중 하나를 선택하면, 해당 테이블을 생성할 때 필요한 변수와 Stats가 올바른 순서로 선택되어 원하는 테이블을 생성합니다.</li>
</ul></li>
<li><code>Group Data By</code> 드롭다운을 사용하여 범주형 변수들의 통계량을 계산할 수도 있다.</li>
</ul>
<p><img src="https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/img/groupby.png" width="500"></p>
<ul>
<li>밑에 <code>Table Title</code>로 테이블의 이름을 설정하고 파일로(RTF, CSV, 그리고 HTML) 저장이 가능하다.</li>
</ul>
<p><img src="https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/img/exporttable.png" width="662"></p>
<p><br></p>
</section>
<section id="population-explorer-패널" class="level3">
<h3 class="anchored" data-anchor-id="population-explorer-패널">3.3. Population Explorer 패널</h3>
<p>다음으로 <code>Population Explorer</code> 탭에서 여러 차트로 데이터 시각화를 할 수 있다.</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><img src="https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/img/plotgen.png" width="240"></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<ul>
<li>Type of Chart:
<ul>
<li>원하는 차트의 종류를 고를 수 있다.</li>
</ul></li>
<li>General plot controls:
<ul>
<li>차트 유형에 따라 바뀐다.</li>
<li>일반적으로 BDS 데이터 소스의 변수 또는 매개 변수 등을 사용하여 축을 설정하도록 된다.</li>
</ul></li>
</ul>
</div>
</div>
</div>
<p>위 설정에 따라 메인 패널에는 아래와 같은 인터랙티브 그래프가 표시될 것이다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/img/plot.gif" width="662"></p>
<p><br></p>
</section>
<section id="individual-explorer-패널" class="level3">
<h3 class="anchored" data-anchor-id="individual-explorer-패널">3.4. Individual Explorer 패널</h3>
<p>마지막 탭은 <code>Individual Explorer</code>이다. 이 탭에서는 특정 환자 데이터를 탐색하기 위해 사용됩니다. 처음 들어가시면 환자의 <code>USUBJID</code>로 환자를 선택할 수 있는 기능이 있습니다. 특정 그룹에 포함된 환자 데이터를 탐색해야 할 경우 (예를 들어, 나이가 10세 이하), <code>Advanced Pre-Filtering</code>을 이용하면 된다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/img/individualexplorer.png" width="250"></p>
<p><small> <a href="https://biogen-inc.github.io/tidyCDISC/articles/x04_Filtering.html">Details</a> on filtering. </small></p>
<p><br> 특정 환자를 선택한 후, 밑에 <code>Events</code>에서는 환자 타임라인과 events에 대한 데이터 테이블을 확인할 수 있다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/img/individual.png" width="750"></p>
<p><code>Events</code> 탭 바로 옆에 <code>Visits</code>탭에서는 BDS data sets에서의 <code>PARAMS</code>과 Study Visit의 plot과 데이터 테이블을 보여준다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/img/visits.png" width="800"></p>
<p>환자의 특정 변수별 plot을 담은 파일을 png 혹은 html 파일로 다운 가능하다.</p>
<p><br></p>
</section>
</section>
<section id="마치며" class="level2">
<h2 class="anchored" data-anchor-id="마치며">마치며</h2>
<p>지금까지 CDISC의 ADaM에 대해서 4개의 data structure를 살표보며 알아갔고, ADaM 데이터를 활용한 오픈소스 프로그램인 tidyCDISC를 사용하는 방법에 대해서 배웠다.</p>
<p>여러 해외 규제기관에서 임상이나 비임상시험 데이터 제출시 CDISC 적용을 의무하고 있는 만큼, CDISC 표준을 잘 이해하고 자료 관리에 있어 적용이 필요해 보인다.</p>
<p>CDISC의 전문가가 되지 않는한 어렵고 복잡한 것을 알 필요는 없지만, 임상시험 결과가 ADaM을 이용해서 만들어야 하기 때문에 적어도 CDISC data format과 임상시험의 전체 흐름에 대해서 잘 파악하고 있는 것이 중요할 것 같다.</p>
<hr>
<section id="reference" class="level6">
<h6 class="anchored" data-anchor-id="reference">Reference</h6>
<p><small></small></p><small>
<ul>
<li><p>Jeong, Sunok, et al.&nbsp;“International Standard in Electronic Clinical Trial.” Journal of Korean Society for Clinical Pharmacology and Therapeutics, vol.&nbsp;15, no. 1, Korean Society for Clinical Pharmacology and Therapeutics, 2007, p.&nbsp;20. Crossref, https://doi.org/10.12793/jkscpt.2007.15.1.20.</p></li>
<li><p>“Get Started With {tidyCDISC}.” Get Started With {tidyCDISC}, cran.r-project.org/web/packages/tidyCDISC/vignettes/getting_started.html.</p></li>
<li><p>“SDTMIG v3.3.” SDTMIG v3.3 | CDISC, www.cdisc.org/standards/foundational/sdtmig/sdtmig-v3-3/html#Representing+Relationships+and+Data.</p></li>
<li><p>“TidyCDISC an Open Source Application to Interactively Create Tables, Figures, and Patient Profiles.” YouTube, 17 Aug.&nbsp;2020, www.youtube.com/watch?v=EFGkHrV0WbY.</p></li>
<li><p>Li, Chengxin. “The Dataset Generation for Survival Analysis With the ADaM Basic Data Structure for Time-to-Event Analyses (ADTTE) Standard.” Pharmaceutical Programming, vol.&nbsp;5, no. 1–2, Informa UK Limited, Dec.&nbsp;2012, pp.&nbsp;1–4. Crossref, https://doi.org/10.1179/1757092112z.0000000001.</p></li>
</ul>


</small></section><small>
</small></section><small>

</small><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/">CC BY-NC 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{kim2023,
  author = {Kim, Seoyoon},
  title = {ADaM in {CDISC} and {tidyCDISC}},
  date = {2023-05-02},
  url = {https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-kim2023" class="csl-entry quarto-appendix-citeas">
Kim, Seoyoon. 2023. <span>“ADaM in CDISC and tidyCDISC.”</span> May 2,
2023. <a href="https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc">https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>rpackage</category>
  <category>shiny</category>
  <guid>https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/</guid>
  <pubDate>Mon, 01 May 2023 15:00:00 GMT</pubDate>
  <media:content url="https://blog.zarathu.com/jp/posts/2023-04-28-tidycdisc/img/logo.png" medium="image" type="image/png" height="66" width="144"/>
</item>
<item>
  <title>sunburstr 패키지 소개</title>
  <dc:creator>Seoyoon Kim</dc:creator>
  <link>https://blog.zarathu.com/jp/posts/2023-04-21-sunburst/</link>
  <description><![CDATA[ <!-- Google tag (gtag.js) --><script async="" src="https://www.googletagmanager.com/gtag/js?id=G-L0DYYSH9KM"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L0DYYSH9KM');
</script><p><img src="https://blog.zarathu.com/jp/posts/2023-04-21-sunburst/img/sunburstpackage.png" width="460"></p>
<p>R에서 선버스트 차트를 그리는 방법은 다양하다. 그중에서 <a href="https://cran.r-project.org/web/packages/sunburstR/vignettes/sunburst-2-0-0.html">sunburstR</a> 패키지가 도출 결과가 매우 깔끔하고, shiny에서도 실행이 가능하며 plotly나 ggplot을 사용하는 것보다 편리하다 느껴 이 글에서 소개하려고 한다.</p>
<hr>
<section id="선버스트-차트란" class="level2"><h2 class="anchored" data-anchor-id="선버스트-차트란">1. 선버스트 차트란?</h2>
<p>계층형 데이터 구조를 시각화할 때 이상적인 <strong>선버스트 차트</strong>는 계층 구조를 갖는 외부원과 내부원의 관계를 쉽게 보여주는 차트이다.</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://www.syncfusion.com/products/aspnetcore/control/images/sunburst/aspnet-core-sunburst-chart-with-levels.png" class="img-fluid figure-img"></p>
<figcaption>sunburst chart</figcaption></figure>
</div>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure"><p><img src="https://earo.me/publication/hts/featured_hubeebba943083c6a43a2fa79c680be887_56936_720x0_resize_lanczos_2.png" class="img-fluid figure-img"></p>
<figcaption>hierarchical data</figcaption></figure>
</div>
</div>
</div>
</div>
<p>image from <a href="https://www.syncfusion.com/jquery/aspnet-core-ui-controls/sunburst-chart">syncfusion</a>*image from <a href="https://earo.me/publication/hts/">earo</a></p>
<p><br></p>
<p>하나의 고리 또는 원이 계층 구조의 각 수준을 나타내며, 가장 안쪽에 있는 원이 계층 구조의 가장 높은 수준을 나타낸다. 복잡한 계층적 데이터를 명확하고 매력적인 방식으로 이해할 수 있는 능력에 있다.</p>
<section id="언제-사용하면-될까" class="level3"><h3 class="anchored" data-anchor-id="언제-사용하면-될까">언제 사용하면 될까?</h3>
<ol type="1">
<li>전체 항목 중에서 개별 항목이 차지하는 비중을 파악하고 싶을 때</li>
</ol>
<ul>
<li><p>트리맵 차트와 유사하게 데이터가 차지하는 비율을 면적으로 표현한 그래프이기 때문에 비중을 파악하기 용이하다.</p></li>
<li>
<p>데이터의 패턴 및 관계를 나타낸다.</p>
<ul>
<li>일례로, 가장 많은 하위 범주를 가진 범주나 가장 인기 있는 하위 범주를 빠르게 파악할 수 있다.</li>
</ul>
</li>
</ul>
<ol start="2" type="1">
<li>위계 구조를 가지는 데이터들의 패턴을 빠르게 확인하고 싶을 때</li>
</ol>
<ul>
<li>데이터의 개별 요소들이 소속된 계층이 있는 경우 패턴 파악이 용이하다.</li>
</ul></section></section><section id="sunburstr-패키지" class="level2"><h2 class="anchored" data-anchor-id="sunburstr-패키지">2. SunburstR 패키지</h2>
<p>R에 있는 <code>sunburstr</code> 패키지를 사용해 직접 계층적 데이터의 선버스트 차트를 만들어 보자.</p>
<section id="setup" class="level3"><h3 class="anchored" data-anchor-id="setup">2.1. Setup</h3>
<p><code>sunburstr</code>은 R에서 기본적으로 제공되는 데이터 구조가 아니기 때문에, package 설치가 필요합니다.</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Setup</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages("data.table")</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages("sunburstr")</span></span>
<span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://github.com/timelyportfolio/sunburstR">sunburstR</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://r-datatable.com">data.table</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://github.com/rstudio/htmltools">htmltools</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org">magrittr</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>위의 과정을 통해 package 설치 및 불러오기를 실행합니다.</p>
</section><section id="load-data" class="level3"><h3 class="anchored" data-anchor-id="load-data">2.2. Load data</h3>
<p>예제 데이터로는 2 단계에 걸쳐서 약을 복용한 149명 환자의 데이터를 사용한다.</p>
<div class="cell">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#load data</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdatatable.gitlab.io/data.table/reference/fread.html">fread</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/seodaegal/blog-sy/main/blog_example_data/sunburst_example.csv"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rmarkdown</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://pkgs.rstudio.com/rmarkdown/reference/paged_table.html">paged_table</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output-display">
<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":["Step.1"],"name":[1],"type":["chr"],"align":["left"]},{"label":["Step.2"],"name":[2],"type":["chr"],"align":["left"]},{"label":["personCount"],"name":[3],"type":["int"],"align":["right"]}],"data":[{"1":"Clopidogrel + Aspirin","2":"","3":"61"},{"1":"Aspirin","2":"","3":"36"},{"1":"Clopidogrel + Aspirin","2":"Clopidogrel + cilostazol + Aspirin","3":"8"},{"1":"Aspirin","2":"Clopidogrel + Aspirin","3":"7"},{"1":"cilostazol + Aspirin","2":"","3":"4"},{"1":"cilostazol + Aspirin","2":"Clopidogrel + cilostazol + Aspirin","3":"2"},{"1":"Clopidogrel","2":"","3":"11"},{"1":"Clopidogrel","2":"Clopidogrel + Aspirin","3":"5"},{"1":"Aspirin","2":"cilostazol + Aspirin","3":"3"},{"1":"Clopidogrel","2":"Clopidogrel + cilostazol","3":"2"},{"1":"Aspirin","2":"Clopidogrel","3":"1"},{"1":"cilostazol","2":"","3":"6"},{"1":"Clopidogrel + Aspirin","2":"Clopidogrel + Aspirin + Triflusal","3":"2"},{"1":"Triflusal","2":"Clopidogrel + Aspirin + Triflusal","3":"1"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<ul>
<li>
<code>data</code>에서 Step.1은 첫 단계에서 복용한 약의 종류, Step.2는 첫 단계 이후에 두 번째로 복용한 약의 종류이다.</li>
<li>personCount는 특정 약을 복용한 사람의 수를 의미한다.</li>
</ul></section><section id="fix-data" class="level3"><h3 class="anchored" data-anchor-id="fix-data">2.3. Fix data</h3>
<p>데이터를 불러온 후, <code>sunburstr</code> 패키지를 적용하기 위해서는 sunburstr에 맞게 데이터를 재정렬해야 한다.</p>
<ul>
<li>
<code>data</code> 에는 단계마다 (Step.1, Step.2) 복용한 약이 한 개가 아니라 여러 개인 경우도 있어 각 단계 안에서도 복용한 약을 따로 분리해 주자.</li>
</ul>
<div class="cell">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># size는 personCount로 지정</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/names.html">names</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/lapply.html">lapply</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.SD</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/grep.html">gsub</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\\+"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, .SDcols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/names.html">names</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">personCount</span>, Step.1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Step.1</span>, Step.2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Step.2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span> </span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"st1level2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"st1level1"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdatatable.gitlab.io/data.table/reference/tstrsplit.html">tstrsplit</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Step.1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" - "</span>, fixed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, type.convert <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Step.1에서 복용한 약 종류는 2개라서, 2개의 다른 열로 나눈다</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/NA.html">is.na</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">st1level1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">st1level1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">st1level2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 복용한 약의 종류가 하나라면 두번째 열에 똑같은 약을 입력하도록 한다다</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Step.1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"st2level1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"st2level2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"st2level3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdatatable.gitlab.io/data.table/reference/tstrsplit.html">tstrsplit</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Step.2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" - "</span>, fixed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, type.convert <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Step.2에서 복용한 약 종류는 3개라서, 3개의 다른 열로 나눈다</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/NA.html">is.na</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">st2level2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">st2level2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">st2level1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span> </span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/NA.html">is.na</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">st2level3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">st2level3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">st2level2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 복용한 약이 3개가 아닐 경우 그전에 복용했던 약을 입력</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>,<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Step.2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdatatable.gitlab.io/data.table/reference/setcolorder.html">setcolorder</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"st1level1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"st1level2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"st2level1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"st2level2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"st2level3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"size"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># setcolorder( ) 함수로 열의 순서를 정한다</span></span>
<span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rmarkdown</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://pkgs.rstudio.com/rmarkdown/reference/paged_table.html">paged_table</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<div class="cell-output-display">
<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":["st1level1"],"name":[1],"type":["chr"],"align":["left"]},{"label":["st1level2"],"name":[2],"type":["chr"],"align":["left"]},{"label":["st2level1"],"name":[3],"type":["chr"],"align":["left"]},{"label":["st2level2"],"name":[4],"type":["chr"],"align":["left"]},{"label":["st2level3"],"name":[5],"type":["chr"],"align":["left"]},{"label":["size"],"name":[6],"type":["chr"],"align":["left"]}],"data":[{"1":"Aspirin","2":"Clopidogrel","3":"NA","4":"NA","5":"NA","6":"61"},{"1":"Aspirin","2":"Aspirin","3":"NA","4":"NA","5":"NA","6":"36"},{"1":"Aspirin","2":"Clopidogrel","3":"Clopidogrel","4":"cilostazol","5":"Aspirin","6":"8"},{"1":"Aspirin","2":"Aspirin","3":"Clopidogrel","4":"Aspirin","5":"Aspirin","6":"7"},{"1":"Aspirin","2":"cilostazol","3":"NA","4":"NA","5":"NA","6":"4"},{"1":"Aspirin","2":"cilostazol","3":"Clopidogrel","4":"cilostazol","5":"Aspirin","6":"2"},{"1":"Clopidogrel","2":"Clopidogrel","3":"NA","4":"NA","5":"NA","6":"11"},{"1":"Clopidogrel","2":"Clopidogrel","3":"Clopidogrel","4":"Aspirin","5":"Aspirin","6":"5"},{"1":"Aspirin","2":"Aspirin","3":"cilostazol","4":"Aspirin","5":"Aspirin","6":"3"},{"1":"Clopidogrel","2":"Clopidogrel","3":"Clopidogrel","4":"cilostazol","5":"cilostazol","6":"2"},{"1":"Aspirin","2":"Aspirin","3":"Clopidogrel","4":"Clopidogrel","5":"Clopidogrel","6":"1"},{"1":"cilostazol","2":"cilostazol","3":"NA","4":"NA","5":"NA","6":"6"},{"1":"Aspirin","2":"Clopidogrel","3":"Clopidogrel","4":"Aspirin","5":"Triflusal","6":"2"},{"1":"Triflusal","2":"Triflusal","3":"Clopidogrel","4":"Aspirin","5":"Triflusal","6":"1"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p><code>data2</code> 에서</p>
<ul>
<li><p><code>st1</code> 은 Step.1, <code>st2</code> 는 Step.2 에서 복용한 약을 의미한다.</p></li>
<li>
<p><code>size</code> 는 해당 약을 복용한 personCount 이다.</p>
<p><br> 열의 순서가 hierarchy에 영향을 미치기 때문에, <span style="color: blue"><em>열의 순서를 ordering 하는데 주의가 필요하다!</em></span></p>
<ul>
<li>계층 구조가 높을수록 열의 순서가 왼쪽으로 오게 설정해야 한다.</li>
</ul>
</li>
</ul></section><section id="building-hierarchy-on-data" class="level3"><h3 class="anchored" data-anchor-id="building-hierarchy-on-data">2.4. Building hierarchy on data</h3>
<p><code>d3r</code> 패키지를 사용해 sunburstr에 적합한 환자들의 약 복용 데이터의 계층 구조를 구축한다. <code>d3_nest</code> 함수로 높은 순서대로 정리된 <code>data2</code>의 변수들을 그룹화한 뒤 데이터 갯수 변수 (count)를 지정한다.</p>
<div class="cell">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#datatable을 hierarchy로 convert</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://github.com/timelyportfolio/d3r">d3r</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hierarchy</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/d3r/man/d3_nest.html">d3_nest</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data2</span>, value_cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"size"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hierarchy</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>{"children":[{"name":"Aspirin","children":[{"name":"Clopidogrel","children":[{"name":"Clopidogrel","children":[{"name":"cilostazol","children":[{"name":"Aspirin","size":"8","colname":"st2level3"}],"colname":"st2level2"},{"name":"Aspirin","children":[{"name":"Triflusal","size":"2","colname":"st2level3"}],"colname":"st2level2"}],"colname":"st2level1"}],"size":"61","colname":"st1level2"},{"name":"Aspirin","children":[{"name":"Clopidogrel","children":[{"name":"Aspirin","children":[{"name":"Aspirin","size":"7","colname":"st2level3"}],"colname":"st2level2"},{"name":"Clopidogrel","children":[{"name":"Clopidogrel","size":"1","colname":"st2level3"}],"colname":"st2level2"}],"colname":"st2level1"},{"name":"cilostazol","children":[{"name":"Aspirin","children":[{"name":"Aspirin","size":"3","colname":"st2level3"}],"colname":"st2level2"}],"colname":"st2level1"}],"size":"36","colname":"st1level2"},{"name":"cilostazol","children":[{"name":"Clopidogrel","children":[{"name":"cilostazol","children":[{"name":"Aspirin","size":"2","colname":"st2level3"}],"colname":"st2level2"}],"colname":"st2level1"}],"size":"4","colname":"st1level2"}],"colname":"st1level1"},{"name":"Clopidogrel","children":[{"name":"Clopidogrel","children":[{"name":"Clopidogrel","children":[{"name":"Aspirin","children":[{"name":"Aspirin","size":"5","colname":"st2level3"}],"colname":"st2level2"},{"name":"cilostazol","children":[{"name":"cilostazol","size":"2","colname":"st2level3"}],"colname":"st2level2"}],"colname":"st2level1"}],"size":"11","colname":"st1level2"}],"colname":"st1level1"},{"name":"cilostazol","children":[{"name":"cilostazol","children":[],"size":"6","colname":"st1level2"}],"colname":"st1level1"},{"name":"Triflusal","children":[{"name":"Triflusal","children":[{"name":"Clopidogrel","children":[{"name":"Aspirin","children":[{"name":"Triflusal","size":"1","colname":"st2level3"}],"colname":"st2level2"}],"colname":"st2level1"}],"colname":"st1level2"}],"colname":"st1level1"}],"name":"root"} </code></pre>
</div>
</div>
</section><section id="sunburstr-패키지-사용" class="level3"><h3 class="anchored" data-anchor-id="sunburstr-패키지-사용">2.5. Sunburstr 패키지 사용</h3>
<p>sunburstr 패키지를 사용해 차트의 색깔, 크기 등등을 바꿀 수 있다.</p>
<div class="cell">
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#colors</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colors</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#FFAA00'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#2D5F91'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#91D4D2'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#E8655F'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">labels</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KYR_Aspirin_20230414"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KYR_Clopidogrel_20230414"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KYR_cilostazol_20230414"</span>,  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KYR_Triflusal_20230414"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># setting data as 'hierarchy', then setting legend, width, height, count</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sb</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/sunburstR/man/sunburst.html">sunburst</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hierarchy</span>,</span>
<span>  legend <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span>  width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100%"</span>,</span>
<span>  colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/list.html">list</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colors</span>, domain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">labels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>  height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>,</span>
<span>  count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sb</span></span></code></pre></div>
<div class="cell-output-display">
<div class="sunburst html-widget " id="htmlwidget-03a8578f9f38dae3e1b8" style="width:100%;height:400px; position:relative;">
<div>
<div class="sunburst-main">
<div class="sunburst-sequence"></div>
<div class="sunburst-chart">
<div class="sunburst-explanation" style="visibility:hidden;"></div>
</div>
</div>
<div class="sunburst-sidebar">
<input type="checkbox" class="sunburst-togglelegend" style="visibility:hidden;">Legend
<div class="sunburst-legend" style="visibility:hidden;"></div>
</div>
</div>
</div>
<script type="application/json" data-for="htmlwidget-03a8578f9f38dae3e1b8">{"x":{"data":{"children":[{"name":"Aspirin","children":[{"name":"Clopidogrel","children":[{"name":"Clopidogrel","children":[{"name":"cilostazol","children":[{"name":"Aspirin","size":"8","colname":"st2level3"}],"colname":"st2level2"},{"name":"Aspirin","children":[{"name":"Triflusal","size":"2","colname":"st2level3"}],"colname":"st2level2"}],"colname":"st2level1"}],"size":"61","colname":"st1level2"},{"name":"Aspirin","children":[{"name":"Clopidogrel","children":[{"name":"Aspirin","children":[{"name":"Aspirin","size":"7","colname":"st2level3"}],"colname":"st2level2"},{"name":"Clopidogrel","children":[{"name":"Clopidogrel","size":"1","colname":"st2level3"}],"colname":"st2level2"}],"colname":"st2level1"},{"name":"cilostazol","children":[{"name":"Aspirin","children":[{"name":"Aspirin","size":"3","colname":"st2level3"}],"colname":"st2level2"}],"colname":"st2level1"}],"size":"36","colname":"st1level2"},{"name":"cilostazol","children":[{"name":"Clopidogrel","children":[{"name":"cilostazol","children":[{"name":"Aspirin","size":"2","colname":"st2level3"}],"colname":"st2level2"}],"colname":"st2level1"}],"size":"4","colname":"st1level2"}],"colname":"st1level1"},{"name":"Clopidogrel","children":[{"name":"Clopidogrel","children":[{"name":"Clopidogrel","children":[{"name":"Aspirin","children":[{"name":"Aspirin","size":"5","colname":"st2level3"}],"colname":"st2level2"},{"name":"cilostazol","children":[{"name":"cilostazol","size":"2","colname":"st2level3"}],"colname":"st2level2"}],"colname":"st2level1"}],"size":"11","colname":"st1level2"}],"colname":"st1level1"},{"name":"cilostazol","children":[{"name":"cilostazol","children":[],"size":"6","colname":"st1level2"}],"colname":"st1level1"},{"name":"Triflusal","children":[{"name":"Triflusal","children":[{"name":"Clopidogrel","children":[{"name":"Aspirin","children":[{"name":"Triflusal","size":"1","colname":"st2level3"}],"colname":"st2level2"}],"colname":"st2level1"}],"colname":"st1level2"}],"colname":"st1level1"}],"name":"root"},"options":{"legendOrder":null,"colors":{"range":["#FFAA00","#2D5F91","#91D4D2","#E8655F"],"domain":["KYR_Aspirin_20230414","KYR_Clopidogrel_20230414","KYR_cilostazol_20230414","KYR_Triflusal_20230414"]},"valueField":"size","percent":true,"count":true,"explanation":null,"breadcrumb":[],"legend":true,"sortFunction":null,"sumNodes":true}},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<p>차트의 오른쪽 위에 <code>Legend</code>를 누르면 색깔별 약 종류에 대해서 볼 수 있다.</p>
</section></section><section id="shiny에-sunburstr-사용하기" class="level2"><h2 class="anchored" data-anchor-id="shiny에-sunburstr-사용하기">3. Shiny에 sunburstr 사용하기</h2>
<p>Shiny에 sunburstr를 적용하는 방법은 <a href="https://cran.nexr.com/web/packages/sunburstR/sunburstR.pdf">여기에</a> 잘 설명 되어있다. Shiny의 기초는 <a href="https://thisis05.github.io/ShinyBasic/textbook.html">여기를</a> 참고해주세요.</p>
<p><br> Shiny의 목적은 유저가 R을 사용하지 않고도 제공된 UI를 통해 통계 분석을 (지금의 경우 선버스트 차트와 데이터 테이블을 보여주는) 진행할 수 있도록 하는 것이다.</p>
<p>위에서 배운 sunburstr을 이용해 shiny를 만들어 보자.</p>
<section id="shiny-setup" class="level3"><h3 class="anchored" data-anchor-id="shiny-setup">3.1. Shiny setup</h3>
<p>우선 R studio에서 New file에서 Shiny Web app을 선택한 뒤, Single File (app.R)을 생성한다. 필요한 패키지들을 불러오고 위에서 정리한 데이터들을 가져오기 위해, 코드를 <code>global</code> 파일에 저장해 두자.</p>
<div class="line-block">새 Shiny 파일 생성</div>
<p><img src="https://blog.zarathu.com/jp/posts/2023-04-21-sunburst/img/shinymaking.png" width="677"></p>
<div class="line-block">
<code>app.R</code>에 필요한 library와 global R code 불러오기</div>
<div class="cell">
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://shiny.posit.co/">shiny</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://github.com/timelyportfolio/sunburstR">sunburstR</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://r-datatable.com">data.table</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://github.com/rstudio/DT">DT</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/source.html">source</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"global.R"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<div class="line-block">
<code>global.R</code> 에는 아래 코드 작성:</div>
<div class="cell">
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#in global.R</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdatatable.gitlab.io/data.table/reference/fread.html">fread</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/seodaegal/blog-sy/main/blog_example_data/sunburst_example.csv"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/names.html">names</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/lapply.html">lapply</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.SD</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/grep.html">gsub</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\\+"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, .SDcols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/names.html">names</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">personCount</span>, Step.1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Step.1</span>, Step.2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Step.2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"st1level2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"st1level1"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdatatable.gitlab.io/data.table/reference/tstrsplit.html">tstrsplit</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Step.1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" - "</span>, fixed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, type.convert <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/NA.html">is.na</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">st1level1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">st1level1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">st1level2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Step.1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"st2level1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"st2level2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"st2level3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdatatable.gitlab.io/data.table/reference/tstrsplit.html">tstrsplit</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Step.2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" - "</span>, fixed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, type.convert <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/NA.html">is.na</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">st2level2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">st2level2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">st2level1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/NA.html">is.na</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">st2level3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">st2level3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">st2level2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>,<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">Step.2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdatatable.gitlab.io/data.table/reference/setcolorder.html">setcolorder</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"st1level1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"st1level2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"st2level1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"st2level2"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"st2level3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"size"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"><a href="https://magrittr.tidyverse.org/reference/pipe.html">%&gt;%</a></span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span></span>
<span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://github.com/timelyportfolio/d3r">d3r</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hierarchy</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/d3r/man/d3_nest.html">d3_nest</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data2</span>, value_cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"size"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#colors</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colors</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#FFAA00'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#2D5F91'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#91D4D2'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#E8655F'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">labels</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/c.html">c</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KYR_Aspirin_20230414"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KYR_Clopidogrel_20230414"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KYR_cilostazol_20230414"</span>,  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KYR_Triflusal_20230414"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
</section><section id="table-panel" class="level3"><h3 class="anchored" data-anchor-id="table-panel">3.2. Table panel</h3>
<p>우리가 보여주고 싶은 Web App은 Table Panel이 2 개이다: 데이터 테이블과 선버스트.</p>
<p><br></p>
<p>우선 navbar을 이용해 두 개의 table panel을 생성해보자.</p>
<div class="cell">
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># using navbar to create table panel</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/navbarPage.html">navbarPage</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SUNBURST"</span>,</span>
<span>                 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/tabPanel.html">tabPanel</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>                 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/tabPanel.html">tabPanel</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sunburst"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span>     </span></code></pre></div>
</div>
<p>navbarPage( ) 함수를 통해 Title name과 table panel 이름들을 지정해준다.</p>
<p>▶️Run App을 실행하면 아래와 같이 탭 3 개가 생긴 것을 확인할 수 있다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-04-21-sunburst/img/tablepanel.png" width="624"></p>
</section><section id="data-panel-설정" class="level3"><h3 class="anchored" data-anchor-id="data-panel-설정">3.3. Data Panel 설정</h3>
<p><br></p>
<p>생성한 Data Panel에서는 메인 패널에 기존 약을 복용한 환자들의 예제 data set을 보여주면 된다.</p>
<div class="cell">
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/navbarPage.html">navbarPage</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SUNBURST"</span>,</span>
<span>                 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/tabPanel.html">tabPanel</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data"</span>,</span>
<span>                          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/sidebarLayout.html">mainPanel</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>                            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/DT/man/dataTableOutput.html">DTOutput</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>                          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>                 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>                 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/tabPanel.html">tabPanel</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Plot"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  </span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/DT/man/dataTableOutput.html">renderDT</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DT</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/DT/man/datatable.html">datatable</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span>, rownames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">F</span>,  caption <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pathway 리포트"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>▶️Run App을 실행하면 데이터 테이블이 나오는 것을 확인할 수 있다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-04-21-sunburst/img/shiny datatable.png" width="875"></p>
</section><section id="plot-panel-설정" class="level3"><h3 class="anchored" data-anchor-id="plot-panel-설정">3.4. Plot Panel 설정</h3>
<p>Plot panel에서는 선버스트 차트를 보여주면 된다. 마우스를 차트 위에 올렸을 때, 약의 종류, 퍼센트 그리고 count가 나오도록 설정해야 한다.</p>
<div class="cell">
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/navbarPage.html">navbarPage</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SUNBURST"</span>,</span>
<span>                 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/tabPanel.html">tabPanel</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data"</span>,</span>
<span>                          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/sidebarLayout.html">mainPanel</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>                            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/DT/man/dataTableOutput.html">DTOutput</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>                          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>                 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>                 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/tabPanel.html">tabPanel</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Plot"</span>,</span>
<span>                          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/sidebarLayout.html">mainPanel</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span>                            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/sunburstR/man/sunburst-shiny.html">sunburstOutput</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sunburst"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>,</span>
<span>                            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/textOutput.html">textOutput</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"selection"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>                          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>                 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>선버스트 차트를 output으로 보여줄 것이기 때문에 <code><a href="https://rdrr.io/pkg/sunburstR/man/sunburst-shiny.html">sunburstOutput( )</a></code> 함수를 사용한다. <code><a href="https://rdrr.io/pkg/shiny/man/textOutput.html">textOutput( )</a></code>은 <code>selection</code>을 문자열 인수로 설정한다.</p>
<div class="cell">
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  </span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/DT/man/dataTableOutput.html">renderDT</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DT</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/DT/man/datatable.html">datatable</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">a</span>, rownames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">F</span>,  caption <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pathway 리포트"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  </span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sunburst</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/sunburstR/man/sunburst-shiny.html">renderSunburst</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/sunburstR/man/add_shiny.html">add_shiny</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/sunburstR/man/sunburst.html">sunburst</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">hierarchy</span>, legend <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100%"</span>, colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/list.html">list</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">colors</span>, domain <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">labels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>, count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  </span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">selection</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/reactive.html">reactive</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">input</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sunburst_mouseover</span></span>
<span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">output</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">selection</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/renderPrint.html">renderText</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selection</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span>  </span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/shinyApp.html">shinyApp</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ui <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ui</span>, server <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">server</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p><code><a href="https://rdrr.io/pkg/sunburstR/man/add_shiny.html">add_shiny( )</a></code> 함수를 통해 sunburst 차트를 shiny 앱에 추가한다. <code>selection</code>은 <code>input$sunburst_mouseover</code> 값에 반응하여 업데이트되도록 설정되어 있다. <code>output$selection</code> 은 sunburst 차트에서 유저가 선택한 항목의 이름을 출력한다.</p>
<p>▶️Run App을 실행하면 선버스트 차트가 잘 나오는 것을 확인할 수 있다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-04-21-sunburst/img/shiny sunburst.png" width="701"></p>
</section></section><section id="마치며" class="level2"><h2 class="anchored" data-anchor-id="마치며">마치며</h2>
<p>지금까지 <code>sunburstr</code> 패키지 사용법을 알아보고 Shiny에서 직접 작동시켜 Web App을 제작해 보았다. 선버스트 차트는 계층적 데이터를 시각화하는데 강력한 도구이지만, 사용할 때 고려해야 할 부분들도 있다. 일례로, 선버스트의 세그먼트가 많아지거나 레이블이 길어지는 경우 가독성이 떨어질 수 있다. 또, 각도를 이용해 각 그룹의 크기를 나타내는 특성상, 작은 각도 차이도 큰 크기 차이를 나타낼 수 있어 그룹 간 비교가 다소 부정확할 수 있다. 선버스트 차트의 이러한 사항들을 고려하고 필요에 따라 대안적인 시각화 방법을 탐색하는 것도 필요 할 것 같다.</p>
<hr>
<section id="references" class="level6"><h6 class="anchored" data-anchor-id="references">References</h6>
<p><small></small></p>
<ul>
<li><p>“Sunburst 2.0.0.” <em>Sunburst 2.0.0 • sunburstR</em>, 5 Feb.&nbsp;2023, timelyportfolio.github.io/sunburstR/articles/sunburst-2-0-0.html.</p></li>
<li><p>“Add Shiny Events — Add_Shiny.” <em>Add Shiny Events — Add_Shiny • sunburstR</em>, timelyportfolio.github.io/sunburstR/reference/add_shiny.html.</p></li>
</ul>
<p></p>


</section></section><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/">CC BY-NC 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{kim2023,
  author = {Kim, Seoyoon},
  title = {Sunburstr {패키지} {소개}},
  date = {2023-04-21},
  url = {https://blog.zarathu.com/jp/posts/2023-04-21-sunburst},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-kim2023" class="csl-entry quarto-appendix-citeas">
Kim, Seoyoon. 2023. <span>“Sunburstr 패키지 소개.”</span> April 21,
2023. <a href="https://blog.zarathu.com/jp/posts/2023-04-21-sunburst">https://blog.zarathu.com/jp/posts/2023-04-21-sunburst</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>rpackage</category>
  <guid>https://blog.zarathu.com/jp/posts/2023-04-21-sunburst/</guid>
  <pubDate>Thu, 20 Apr 2023 15:00:00 GMT</pubDate>
  <media:content url="https://blog.zarathu.com/jp/posts/2023-04-21-sunburst/img/sunburstpackage.png" medium="image" type="image/png" height="53" width="144"/>
</item>
<item>
  <title>pkgdown을 활용한 R 패키지 문서화</title>
  <dc:creator>Jinhwan Kim</dc:creator>
  <link>https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown/</link>
  <description><![CDATA[ <!-- Google tag (gtag.js) --><script async="" src="https://www.googletagmanager.com/gtag/js?id=G-L0DYYSH9KM"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L0DYYSH9KM');
</script><section id="introduction" class="level1"><h1>Introduction</h1>
<p><img src="https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown/img/logo.png" width="150px"></p>
<p>R 패키지를 개발할 때, 개발 자체도 힘들지만, 패키지를 잘 설명하는 <strong>문서화</strong> 역시 매우 중요합니다.</p>
<p>아무리 좋은 기능을 개발해두었어도, 어떤 기능이 있는지, 어떤 방식으로 사용할 수 있는지… 등을 작성해 두지 않으면 (코드를 열어보기 전까진 모르기 때문에) 패키지를 사용하려는 사람들로부터 사랑받기 어렵습니다.</p>
<p>특히나, 패키지를 설치해서 <code>?</code> 를 통해 확인할 수 있는 것과, 설치 하기 전에 깃헙의 패키지 리포지토리에서 확인할 수 있는 것은 꽤 차이가 큽니다.</p>
<p>하지만 문서화와 이 결과물을 웹페이지로 만드는 것은 많은 시간과 노력이 필요한 작업입니다.</p>
<p>이런 문제를 해결하기 위해 <code>pkgdown</code>이라는 R 패키지가 등장했습니다. 이번 글에서는 <code>pkgdown</code>을 사용하여 R 패키지를 문서화하는 페이지를 만드는 방법을 소개합니다.</p>
<hr></section><section id="pkgdown이란" class="level1"><h1>pkgdown이란</h1>
<blockquote class="blockquote">
<p>pkgdown is designed to make it quick and easy to build a website for your package.</p>
</blockquote>
<p>공식 홈페이지의 설명에 따르면, <code>pkgdown</code>은 패키지를 위한 웹사이트를 쉽고 빠르게 제작하게 합니다.</p>
<p>혹은 <strong>pkg</strong> + (Rmark)<strong>down</strong> 으로 이해하는 것도 개인적으로는 괜찮다고 생각합니다.</p>
<p>그렇다면 <strong>패키지를 위한 웹사이트</strong>는 어떤 것을 의미할까요?</p>
<p>이를 알기 위해 <code>pkgdown</code>의 결과물 예시를 하나 소개해보겠습니다.</p>
<p><code>pkgdown</code>을 사용한 R 패키지의 좋은 예시는 (당연히) <code>tidyverse</code>에서 확인할 수 있습니다.</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><img src="https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown/img/dplyr1.png" width="600px"></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><img src="https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown/img/dplyr2.png" width="600px"></p>
</div>
</div>
</div>
<p>많은 R 패키지가 위의 이미지처럼 <code>pkgdown</code>을 사용한 <a href="https://dplyr.tidyverse.org/" target="_blank"> 웹페이지</a>를 제공하는 것은 아니지만, 유사한 기능을 제공하는 R 패키지들이 여러 종류가 있다면 그 중에서 <strong>설명이 잘 되어있는 패키지</strong>를 사용하게 되는 것은 사용자의 입장에서 자연스러운 일입니다.</p>
<p>패키지를 개발하는 사람의 입장으로 한번 생각해보면 어떨까요?</p>
<ul>
<li><p>R 패키지를 만드는 것도 익숙해지기 전까진 꽤나 많은 리소스를 필요로 하는데</p></li>
<li><p>R 패키지를 설명하는 웹사이트까지 만들려고 한다면, (심지어 R 외에도 웹 개발 관련 지식이 필요한데!) 너무 피곤한 하루가 될 것입니다.</p></li>
</ul>
<p>그런데 만약 <code>pkgdown</code>을 사용한다면 <strong>Rmarkdown</strong>만으로도 충분히 피곤한 하루를 피할 수 있습니다.</p>
<p><code>pkgdown</code>은 R 패키지의 소스코드(<code>.R</code>)와 메타데이터(<code>.yml</code>)를 기반으로 웹페이지를 생성하며, 이를 통해 사용자들이 패키지의 <strong>함수</strong>와 <strong>데이터셋</strong>, 그리고 <strong>함수</strong>와 사용 방법, <strong>아티클</strong>등을 쉽게 이해할 수 있습니다. (이 과정중에서 <code>roxygen2</code>를 활용하기도 합니다.)</p>
<p>그리고 최종적으로, 만든 웹페이지를 <code>Github</code>을 활용하여 (<code>Github Pages</code>) 온라인에 공유 할 수 있습니다.</p>
<p><em>단, 공유는 pkgdown의 기능은 아니고, 공유할 수 있는 형태의 결과물을 만드는 것이 pkgdown의 역할이라고 보면 좋습니다.</em></p>
<p>오늘 만들 결과물은 패키지 <a href="https://github.com/jhk0530/pkgdown.tutorial/" target="_blank">링크</a>와 이 <a href="https://jhk0530.github.io/pkgdown.tutorial/" target="_blank">링크</a>에서 확인할 수 있습니다.</p>
<section id="pkgdown-설치-및-환경-설정" class="level2"><h2 class="anchored" data-anchor-id="pkgdown-설치-및-환경-설정">pkgdown 설치 및 환경 설정</h2>
<p>위에서 서술한 것처럼 pkgdown 또한 하나의 R package이기 때문에 설치를 해야합니다.</p>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install.packages('pkgdown') CRAN version</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">remotes</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://remotes.r-lib.org/reference/install_github.html">install_github</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r-lib/pkgdown'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Github version</span></span>
<span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://pkgdown.r-lib.org">pkgdown</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://usethis.r-lib.org">usethis</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> </span></code></pre></div>
</div>
<p><code>pkgdown</code>은 패키지의 웹페이지를 만드는 역할을 하기 때문에 <code>pkgdown</code>의 <strong>“대상이 되는”</strong> R 패키지로 <code>pkgdown.tutorial</code>이라는 간단한 패키지를 먼저 만들었습니다. (위 링크 참조)</p>
<section id="pkgdown.tutorial" class="level3"><h3 class="anchored" data-anchor-id="pkgdown.tutorial">pkgdown.tutorial</h3>
<blockquote class="blockquote">
<p>💡 <code>ttest</code>와 <code>ttest2</code>는 동일한 내용의 함수이며, <code>roxygen2</code>의 효과를 보기 위해 비교용도로 사용합니다.</p>
</blockquote>
<div class="cell">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ttest.R (= ttest2.R)</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ttest</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">alternative</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'two.sided'</span>, </span>
<span>                  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">mu</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">paired</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">var.equal</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, </span>
<span>                  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">conf.level</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">...</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/stats/t.test.html">t.test</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">x</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">y</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">alternative</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">mu</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">paired</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">var.equal</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">conf.level</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">...</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<p>패키지에 <code>ttest</code>와 <code>ttest2</code>라는 함수를 만들고 패키지 빌드 직후의 구성 상태는 아래와 같습니다.</p>
<pre><code>/pkgdown.tutorial
  - .gitignore
  - .Rbuildignore
  - DESCRIPTION
  - NAMESPACE
  - pkgdown.tutorial.Rproj
  - /R
    - ttest.R
    - ttest2.R</code></pre>
<p>이후 <code>pkgdown.tutorial</code>의 작업 디렉토리에서 (.Rproj를 열어) <code><a href="https://usethis.r-lib.org/reference/use_pkgdown.html">usethis::use_pkgdown()</a></code>을 실행합니다.</p>
<p>그 결과 아래 이미지처럼 <code>_pkgdown.yml</code>이라는 파일이 생기는 것을 확인 할 수 있습니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown/img/pkgdown1.png" width="600px"></p>
<blockquote class="blockquote">
<p>💡 <code>.gitignore</code>에서 <code>docs</code>를 삭제해주세요.</p>
</blockquote>
</section><section id="build_site" class="level3"><h3 class="anchored" data-anchor-id="build_site">build_site</h3>
<p><code>pkgdown</code>의 핵심 코드를 하나만 고르라면 <code><a href="https://pkgdown.r-lib.org/reference/build_site.html">pkgdown::build_site()</a></code>입니다.</p>
<p>이는 현재 작업된 내용들을 기반으로 <strong>웹사이트를 만드는 역할을 하는 함수</strong>입니다.</p>
<p>바로 실행해보면 아래와 같은 결과를 확인할 수 있습니다.</p>
<blockquote class="blockquote">
<p>💡 <code><a href="https://pkgdown.r-lib.org">library(pkgdown)</a></code>을 실행했다면 앞의 <code>pkgdown::</code>은 붙이지 않아도 좋습니다</p>
</blockquote>
<p><img src="https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown/img/pkgdown2.png" width="600px"></p>
</section></section><section id="pkgdown의-구성-요소" class="level2"><h2 class="anchored" data-anchor-id="pkgdown의-구성-요소">pkgdown의 구성 요소</h2>
<p><code>pkgdown</code>에서 웹페이지 제작을 위해 제공하는 주요 요소들을 소개하겠습니다.</p>
<section id="yml" class="level3"><h3 class="anchored" data-anchor-id="yml">_yml</h3>
<p><code>_pkgdown.yml</code>은 보여지는 웹사이트를 구성하는 파일입니다.</p>
<blockquote class="blockquote">
<p>💡 yml은 들여쓰기 (indent)를 깐깐하게 사용하기 때문에 에러가 난다면 이를 확인해보는 것이 좋습니다.</p>
<p>들여쓰기를 하나도 하지 않은 (처음 <code>url</code>과 같은 위치) 경우를 <strong>lv0</strong>이라 표현합니다.</p>
</blockquote>
<section id="template-lv0" class="level4"><h4 class="anchored" data-anchor-id="template-lv0">1. template (lv0)</h4>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">template</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb4-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bootstrap</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb4-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bootswatch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> flatly </span></span></code></pre></div>
<p>처럼 변경하여 웹사이트의 테마를 바꿀 수 있습니다. 아래의 예시에서는 <code>flatly</code>를 사용했습니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown/img/pkgdown2.png" width="600px"></p>
<p>theme에서 사용할 수 있는 옵션은 bootswatch의 <a href="https://bootswatch.com/">theme</a>를 소문자로 입력한 값이며, 필요한 경우 <a href="https://rstudio.github.io/bslib/articles/bslib.html"><code>bslib</code></a> 옵션을 활용하여 더 자세한 커스터마이즈를 할 수 있습니다.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">template</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bootstrap</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb5-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bslib</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb5-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bg</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#202123"</span></span>
<span id="cb5-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fg</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#B8BCC2"</span></span>
<span id="cb5-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">primary</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#306cc9"</span></span></code></pre></div>
</section><section id="navbar-lv0" class="level4"><h4 class="anchored" data-anchor-id="navbar-lv0">2. navbar (lv0)</h4>
<p><code>navbar</code>는 웹페이지 윗부분의 네비게이션 바 구성을 설정할 수 있는 옵션입니다.</p>
<p>만약 yml의 내용을</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navbar</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb6-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">structure</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb6-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">intro</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> reference</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> articles</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> tutorials</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> news</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb6-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">right</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">search</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> github</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
<p>처럼 작성한다면</p>
<ul>
<li>
<code>navbar</code>의 <strong>왼쪽정렬</strong>로 <code>intro</code>, <code>reference</code>., <code>articles</code>, <code>tutorials</code>, <code>news</code>
</li>
<li>
<strong>오른쪽 정렬</strong>로 <code>search</code>, <code>github</code>를 배치할 수 있습니다.</li>
</ul>
<p>위의 예시에서 표기된 기본 제공되는 구성요소의 설명은 이러합니다.</p>
<ul>
<li>
<code>intro</code>: <strong>Get Started</strong> 페이지</li>
<li>
<code>reference</code>: R패키지의 함수(예시의 <code>ttest</code>) 기능 설명</li>
<li>
<code>articles</code>: 추가로 만든 rmd 아티클 파일</li>
<li>
<code>tutorials</code>: 튜토리얼 (개인적으로는 헷갈리니 <code>articles</code>로의 사용을 권장합니다)</li>
<li>
<code>news</code>: NEWS.md 설명</li>
<li>
<code>search</code>: 웹페이지의 검색창</li>
<li>
<code>github</code>: 패키지를 담고 있는 깃헙 리포지토리 링크 (패키지 <code>DESCRIPTION</code> 에서 설정)</li>
</ul></section><section id="intro" class="level4"><h4 class="anchored" data-anchor-id="intro">2-1. intro</h4>
<p><strong>Get Started</strong> 페이지는 패키지와 동일한 이름을 갖는 rmd(예시는 <code>pkgdown.tutorial.rmd</code>)로 아티클을 추가해야만 합니다.</p>
<p>아티클을 추가하는 것에 대해서는 아래에서 자세하게 다루겠습니다. (<em>지금은 아래 코드를 실행만 하면 됩니다.</em>)</p>
<blockquote class="blockquote">
<p>💡 usethis::use_article(“pkgdown.tutorial”, “intro”)</p>
</blockquote>
</section><section id="reference" class="level4"><h4 class="anchored" data-anchor-id="reference">2-2. reference</h4>
<p><strong>ttest.R</strong>에서 <code>roxygen2</code>를 활용하여 함수 description을 만들고 나면 그 결과가 reference에 나타납니다. (<code>/man</code> 디렉토리에 <code>.rd</code> 파일을 생성합니다.)</p>
<p><code>roxygen2</code>에서 사용 가능한 태그의 종류는 다양하며, 보통은 <code>@import</code>, <code>@export</code>, <code>@title</code>, <code>@description</code>, <code>@details</code>, <code>@param</code>, <code>@returns</code>, <code>@examples</code> 정도가 <a href="https://roxygen2.r-lib.org/articles/rd.html">권장</a>됩니다.</p>
<p>앞서 만들었던 <strong>ttest.R</strong>에 아래 내용을 코드의 맨 위에 추가한 다음, <code>CTRL/CMD + SHIFT + D</code>를 통해 일부 내용만 reference를 만들어 보겠습니다. (<strong>ttest2.R</strong>은 비교용)</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @title ttest</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @description run t test</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @details</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' alternative = "greater" is the alternative that x has a larger mean than y. For the one-sample case: that the mean is positive.</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' If paired is TRUE then both x and y must be specified and they must be the same length. </span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' Missing values are silently removed (in pairs if paired is TRUE). </span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' If var.equal is TRUE then the pooled estimate of the variance is used. </span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' By default, if var.equal is FALSE then the variance is estimated separately </span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' for both groups and the Welch modification to the degrees of freedom is used.</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' If the input data are effectively constant (compared to the larger of the two means) </span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' an error is generated.</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param x a (non-empty) numeric vector of data values.</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param y an optional (non-empty) numeric vector of data values.</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @returns A list with class "htest" containing the following components:</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @examples t.test(1:10, y = c(7:20))      # P = .00001855</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @export</span></span></code></pre></div>
<p>이후 <code><a href="https://pkgdown.r-lib.org/reference/build_site.html">pkgdown::build_site()</a></code>를 실행하면 아래 이미지처럼 reference 페이지가 navbar에 생성 되는 것을 확인할 수 있습니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown/img/pkgdown3.png" width="600px"></p>
</section><section id="articles" class="level4"><h4 class="anchored" data-anchor-id="articles">2-3. articles</h4>
<p><code>usethis::use_article(&lt;ARTICLENAME&gt;, &lt;PAGETITLE&gt;)</code>의 형태로 사용 할 수 있습니다.</p>
<blockquote class="blockquote">
<p>💡 여기서 <strong>ARTICLENAME</strong>에는 숫자, 문자 그리고 <code>-</code>와 <code>_</code> 만 활용할 수 있습니다. (소문자를 권장합니다)</p>
</blockquote>
<p><code>usethis::use_article("using-ttest", "perform t-test")</code> 코드를 실행하면 <code>using-ttest.Rmd</code>라는 파일이 생성되며 <code><a href="https://pkgdown.r-lib.org/reference/build_site.html">build_site()</a></code>를 통해 그 결과를 반영 할 수 있습니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown/img/pkgdown4.png" width="600px"></p>
</section><section id="components-navbar-lv1" class="level4"><h4 class="anchored" data-anchor-id="components-navbar-lv1">3. components (navbar &gt; lv1)</h4>
<p>navbar에서 소개 되지 않은, 기본 제공 되지 않는 구성요소는 아래처럼 작성하여 사용할 수 있습니다.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">navbar</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb8-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">components</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb8-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">articles</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb8-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Articles</span></span>
<span id="cb8-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">menu</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb8-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Category A</span></span>
<span id="cb8-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Title A1</span></span>
<span id="cb8-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> articles/a1.html</span></span>
<span id="cb8-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Title A2</span></span>
<span id="cb8-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> articles/a2.html</span></span>
<span id="cb8-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> -------</span></span>
<span id="cb8-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Category B"</span></span>
<span id="cb8-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Article B1</span></span>
<span id="cb8-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">href</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> articles/b1.html</span></span></code></pre></div>
<p>이는 이렇게 해석할 수 있습니다.</p>
<p>Articles라는 (<strong>text:</strong>) 메뉴의 하위 구성요소로</p>
<ul>
<li>Category A (그룹)</li>
<li>Title A1 (a1.rmd에서 생성)</li>
<li>Title A2 (a2.rmd에서 생성)</li>
<li>구분선 (——)</li>
<li>Category B (그룹)</li>
<li>Article B1 (b1.rmd에서 생성)</li>
</ul>
<blockquote class="blockquote">
<p>💡 usethis::use_article(“a1”,“A1 article”)…로 a1,a2,b1 아티클을 추가하세요</p>
</blockquote>
</section><section id="footer-lv0" class="level4"><h4 class="anchored" data-anchor-id="footer-lv0">4. footer (lv0)</h4>
<p>크게 중요한 것은 아니지만, 모든 페이지에 공통으로 나타날 수 있게 하는 역할을 합니다.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">footer</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">structure</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb9-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> developed_by</span></span>
<span id="cb9-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">right</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> built_with</span></span></code></pre></div>
<p><img src="https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown/img/pkgdown5.png" width="600px"></p>
</section><section id="description" class="level4"><h4 class="anchored" data-anchor-id="description">5. DESCRIPTION</h4>
<p>자세한 설명은 <a href="https://r-pkgs.org/description.html">링크</a>를 참조하세요.</p>
<p>원래는 패키지 개발을 하면서 채워졌어야 하지만, <code>pkgdown.tutorial</code>에서는 미처 채워지지 못한 부분들로 아래와 같이 채우겠습니다.</p>
<blockquote class="blockquote">
<p>💡 먼저 usethis::use_mit_license()등을 통해 라이센스를 설정하고, 그 다음 DESCRIPTION을 채우는 것을 권장합니다.</p>
</blockquote>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Package</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> pkgdown.tutorial</span></span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Title</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> tutorial pkgdown</span></span>
<span id="cb10-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Version</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0.1</span></span>
<span id="cb10-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Authors@R</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb10-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    person("Jinhwan", "Kim", , "jinhwan@zarathu.com", role = c("aut", "cre"))</span></span>
<span id="cb10-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Description</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> contains base ttest function </span></span>
<span id="cb10-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">License</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> MIT + file LICENSE</span></span>
<span id="cb10-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Encoding</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> UTF-8</span></span>
<span id="cb10-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Roxygen</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> list(markdown = TRUE)</span></span>
<span id="cb10-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RoxygenNote</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.2.3</span></span>
<span id="cb10-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Suggests</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb10-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    rmarkdown</span></span>
<span id="cb10-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">URL</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> https://github.com/jhk0530/pkgdown.tutorial</span></span></code></pre></div>
<p><code>URL</code>을 추가 한 것에 유의하세요 (navbar의 <strong>github 버튼</strong>에 사용됩니다)</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown/img/pkgdown6.png" width="600px"></p>
<ul>
<li>오른쪽의 <code>Links</code>, <code>License</code>, <code>Developers</code> 등이 채워졌음을 확인할 수 있습니다.</li>
</ul></section></section></section><section id="메인-페이지-추가" class="level2"><h2 class="anchored" data-anchor-id="메인-페이지-추가">메인 페이지 추가</h2>
<p>여기까지 잘 따라왔다면, 패키지의 구조는 아래 이미지와 같습니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown/img/pkgdown7.png" width="600px"></p>
<p>이제 <code><a href="https://usethis.r-lib.org/reference/use_readme_rmd.html">usethis::use_readme_md()</a></code>를 사용하여 README.MD를 추가하여 메인 페이지를 만들어줍니다.</p>
<p><em>github repository를 만들면서, add readme를 통해 만들었어도 상관 없지만, 위 함수를 사용하면 최소 템플릿을 만들어 주기 때문에 조금 더 편리할 수 있습니다.</em></p>
<blockquote class="blockquote">
<p>💡 rmd를 선호한다면 <code><a href="https://usethis.r-lib.org/reference/use_readme_rmd.html">usethis::use_readme_rmd()</a></code>를 사용해도 좋습니다.</p>
</blockquote>
<p>최종 결과는 아래 이미지와 같습니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown/img/pkgdown8.png" width="600px"></p>
<p>단, 지금은 주소창이 <code>https://</code>로 시작하지 않는, 작업자의 pc에서만 확인 할 수 있는 형태라는 것을 확인해야합니다.</p>
<hr></section></section><section id="웹사이트-빌드-배포" class="level1"><h1>웹사이트 빌드 &amp; 배포</h1>
<p><code>pkgdown</code>을 활용해서 만든 웹사이트를 github을 이용해 배포 하는 방법을 공유하겠습니다.</p>
<p>예시에서는 패키지를 먼저 만들고 <a href="https://github.com/jhk0530/pkgdown.tutorial/">github repo</a>를 만들었기 때문에 github desktop에서 -&gt; <strong>add existing repository</strong>를 통해 github에 올렸습니다. (private 가 아닌 public)</p>
<p>깃헙에 올린 이후 <strong>settings</strong> -&gt; <strong>pages</strong> 로 이동합니다.</p>
<div>

</div>
<div class="quarto-layout-panel" data-layout-ncol="2">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><img src="https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown/img/settings.png" width="600px"></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: flex-start;">
<p><img src="https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown/img/pages.png" width="600px"></p>
</div>
</div>
</div>
<p>이후 <strong>Branch</strong>에서 <strong>main</strong>, <strong>/docs</strong>를 선택한뒤 <strong>save</strong>를 클릭합니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown/img/docs.png" width="600px"></p>
<p>이제 github에서는 <code>pkgdown</code>이 <code><a href="https://pkgdown.r-lib.org/reference/build_site.html">build_site()</a></code>로 <strong>/docs</strong>에 만든 html 파일들을 github page로 배포하는 작업을 시작합니다.</p>
<blockquote class="blockquote">
<p>💡 페이지 반영에는 시간이 걸리기 때문에 몇분이 지난 후 새로고침을 해야 합니다.</p>
</blockquote>
<p>몇 분 후, 아래 이미지처럼 페이지 URL 주소가 나타나면 <code>pkgdown</code>으로 만든 웹페이지를 누구나 확인 할 수 있습니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown/img/pages.png" width="600px"></p>
<p>마지막으로 리포지토리의 about (오른쪽 톱니바퀴)에서 website에 주소를 입력하면 끝입니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown/img/about.png" width="600px"></p>
</section><section id="마치며" class="level1"><h1>마치며</h1>
<p>이번 글에서는 <strong>Rmarkdown</strong> 기반으로, R 패키지 문서화 / 웹페이지 제작하는 R 패키지인 <code>pkgdown</code>과 이를 github을 이용해서 배포 하는 방법을 소개했습니다. <code>pkgdown</code>을 사용하면 많은 리소스를 절약하면서도, 멋진 웹사이트를 만들어 낼 수 있습니다.</p>
<p>글에서는 아주 간단한 예시만을 다뤘지만, 여러 R 패키지를 사용하다보면 pkgdown을 이렇게도 쓸 수 있구나… 라는 생각이 드는 경우가 많습니다.</p>
<p>추후에 여러분이 <code>pkgdown</code>을 사용하여 좋은 문서를 만들 수 있기를 기대하며 글을 마치겠습니다.</p>
<blockquote class="blockquote">
<p>💡 pkgdown 관련 도움이 필요한 경우, 저희 zarathu로 문의주세요 !</p>
</blockquote>


</section><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/">CC BY-NC 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{kim2023,
  author = {Kim, Jinhwan},
  title = {Pkgdown을 {활용한} {R} {패키지} {문서화}},
  date = {2023-03-17},
  url = {https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-kim2023" class="csl-entry quarto-appendix-citeas">
Kim, Jinhwan. 2023. <span>“Pkgdown을 활용한 R 패키지 문서화.”</span>
March 17, 2023. <a href="https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown">https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>rpackage</category>
  <category>pkgdown</category>
  <category>github page</category>
  <category>documentation</category>
  <category>website</category>
  <guid>https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown/</guid>
  <pubDate>Thu, 16 Mar 2023 15:00:00 GMT</pubDate>
  <media:content url="https://blog.zarathu.com/jp/posts/2023-03-17-pkgdown/img/logo.png" medium="image" type="image/png" height="167" width="144"/>
</item>
<item>
  <title>shiny.likert 패키지 소개</title>
  <dc:creator>Jinhwan Kim</dc:creator>
  <link>https://blog.zarathu.com/jp/posts/2023-02-14-shiny.likert/</link>
  <description><![CDATA[ <!-- Google tag (gtag.js) --><script async="" src="https://www.googletagmanager.com/gtag/js?id=G-L0DYYSH9KM"></script><script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L0DYYSH9KM');
</script><section id="개요" class="level1"><h1>개요</h1>
<blockquote class="blockquote">
<p><a href="https://blog.zarathu.com/posts/2023-02-05-likert/">이전 글</a>을 보고 오면 이해에 조금 더 도움이 됩니다*</p>
</blockquote>
<p>순서를 가진 범주형 데이터는 <code>A</code>~ <code>E</code>, <code>좋음</code> ~ <code>안좋음</code>. <code>상위 10%</code> ~ <code>하위 10%</code>, NPS <code>1</code>-<code>10</code>과 같은 예시들로 꼭 의료 도메인이 아니더라도 다양한 분야에서 활용되고 있습니다.</p>
<p>이러한 데이터를 수집하는 방법은 보통, 설문조사를 위해 쓰이는 <a href="https://www.google.com/intl/ko_kr/forms/about/">Google Forms</a>나 <a href="https://www.typeform.com/">Typeform</a>과 같은 온라인 설문조사 도구를 활용할 수 있습니다.</p>
<p>이제 이 결과를 활용하기 위한 방법은 정말 많지만, 설문 데이터를 시각화를 하는 방법은 대부분 의 경우 pie chart 혹은 barchart 정도만 활용하게 됩니다.</p>
<div>

</div>
<div class="cell quarto-layout-panel" data-layout-nrow="1">
<div class="quarto-layout-row">
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://blog.zarathu.com/jp/posts/2023-02-14-shiny.likert/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
<div class="quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<p><img src="https://blog.zarathu.com/jp/posts/2023-02-14-shiny.likert/index_files/figure-html/unnamed-chunk-1-2.png" class="img-fluid" width="672"></p>
</div>
</div>
</div>
<p>R이나 Python 과 같은 프로그래밍 경험이 없거나 혹은 google studio, tableau public과 같이 “상용 시각화 툴”에서 제공하지 않는 차트라면 likert chart와 같은 방법을 활용하는 것은 꽤나 골치 아픈 일입니다.</p>
<p>다행히 R에서는 Shiny라는 R의 기능을 웹으로 보내주는 라이브러리가 있고, 이를 활용하면 누구나 web application의 주소만 알고 있으면 해당 페이지에 접속하여 R의 기능을 사용하여 likert chart를 만들어 낼 수 있습니다.</p>
<p>이 글에서는 likert 패키지를 웹에서 사용할 수 있게 하는 shiny app을 만드는 과정에 대하여 가볍게 다뤄보겠습니다.</p>
</section><section id="shiny-design" class="level1"><h1>shiny design</h1>
<blockquote class="blockquote">
<p>UI 디자인에 대한 내용은 언급하지 않습니다.</p>
</blockquote>
<p>shiny application에 제일 먼저 필요한 기능은 사용자의 설문조사 결과 데이터 (csv)를 업로드 하는 기능입니다.</p>
<p>처음에는 <code>googlesheets4</code>라이브러리를 사용하여 많이 쓰이는 google sheets를 url만 복사하여 사용하게 만드는 것도 고려했으나, 이렇게 하기 위해서는 해당 시트를 외부에 노출 하거나, 구글 권한 문제를 shiny에서 같이 해결해야하기 때문에 너무 복잡하여 고려하지 않고, 대신 다운로드 받은 csv만 작업할 수 있게 합니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-02-14-shiny.likert/img/shiny1.png" width="600px"></p>
<p>이후 사용자의 혹은 예시로 <a href="https://github.com/zarathucorp/shiny.likert/blob/main/Test%20Survey%20Data(Response).csv">github에 올려둔 데이터</a>를 사용자가 업로드 하면 여러 column 중에 어떤 부분을 차트로 그릴지 선택해야 합니다.</p>
<p>다행히 likert 패키지에서는 항목만 같다면 여러개의 차트도 동시에 그릴수 있기 때문에 multiple select의 형태로 만들어줍니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-02-14-shiny.likert/img/shiny2.png" width="400px"></p>
<p>column을 선택하고 나면, column의 내용과 차트 옵션이 나타납니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-02-14-shiny.likert/img/shiny3.png" width="600px"></p>
<p>단, column의 내용. 데이터의 경우 <code>좋음</code> ~ <code>안좋음</code>. <code>동의함</code> ~ <code>동의하지 않음</code> 등과 같이 사용자가 설계한 내용에 따라 다른 항목을 가질 수 있고, 이러한 항목의 순서가 likert에서는 중요하기 때문에 입력한 column의 순서를 사용자가 다시 바꿀 수 있게 구현합니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-02-14-shiny.likert/img/shiny4.gif" width="300px"></p>
<p>이후 옵션을 조절한 후 <strong>draw</strong> button 을 클릭하여 차트를 만들어낼 수 있습니다.</p>
<p>그러나 사용자는 처음에 어떤 옵션이 어떤 역할을 하는지 알 수 없기 때문에 차트가 만들어지고 난 이후에 옵션을 변경해도 차트에 반영되도록 구현합니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-02-14-shiny.likert/img/shiny5.gif" width="600px"></p>
<p>차트는 ggplot + plotly를 같이 활용하여 interactive하게 만들어 지기 때문에 사용자가 png로 다운로드하여 활용할 수 있게 구현합니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-02-14-shiny.likert/img/shiny6.png" width="600px"></p>
<p>이 상태에서의 shiny application은 말 그대로 “works-on-my-machine ¯_(ツ)_/¯” 이기 때문에 이를 다른 사람도 웹에서 사용할 수 있게 배포를 해야합니다.</p>
</section><section id="deploy-shinyapps" class="level1"><h1>deploy shinyapps</h1>
<p>shiny application을 배포하는 방법은 shinyapps.io, shiny server, Rstudio connect 3가지로 볼 수 있는데 각각의 특징은 이러합니다.</p>
<ol type="1">
<li>shinyapps.io:</li>
</ol>
<ul>
<li>posit의 클라우드 인프라를 이용한 배포 방식. Rstudio와 바로 연동하여 편리하게 올릴 수 있다는 장점이 있다.</li>
<li>다양한 요금제를 제공하며 무료 요금제의 경우 사이즈가 작은 shiny application을 5개까지 운영할 수 있다.</li>
</ul>
<ol start="2" type="1">
<li>shiny server:</li>
</ol>
<ul>
<li>자체 서버/인프라를 가지고 있는 경우(온프레미스) 이를 설치하여 배포하는 방법</li>
<li>비용이 들지 않음.</li>
</ul>
<ol start="3" type="1">
<li>Rstudio connect:</li>
</ol>
<ul>
<li>이전의 shiny server pro에 몇 기능을 더 추가한 옵션.</li>
<li>Rstudio와 바로 연동하여 편리하게 배포 할 수 있다.</li>
<li>commercial product이기 때문에 팀 단위로 비용이 든다.</li>
</ul>
<p>다행히 <a href="shiny.likert">shiny.likert</a>는 복잡한 기능, 많은 패키지 등을 사용하지 않는 <strong>“가벼운”</strong> Application이기 때문에, 그냥 제 개인 shinyapps.io 계정에 배포를 해도 문제가 없습니다.</p>
<p>이 app을 배포하는 방법은 간단합니다. Rstudio에서 편집한, 잘 돌아가는 app.R로 이동하여 오른쪽 위의 connect 버튼을 누르고 이후의 몇번 더 클릭만 하면 됩니다. 물론 shinyapps.io 계정은 미리 만들어두어야 합니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-02-14-shiny.likert/img/shiny7.png" width="600px"></p>
<p>몇분 정도 지난 후 배포를 마치고 나면 <a href="https://jhkim.shinyapps.io/shiny-likert/" class="uri">https://jhkim.shinyapps.io/shiny-likert/</a> 와 같은 주소를 통해 누구나 shiny.likert 패키지를 활용하여 likert chart를 만들 수 있습니다.</p>
<p><em>아래의 이미지는 shiny.likert를 이용하여 만든 이미지 입니다.</em></p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-02-14-shiny.likert/img/newplot.png" width="600px"></p>
</section><section id="shiny-app-to-r-package" class="level1"><h1>shiny app to R package</h1>
<p>shinyapps를 통해 배포하는 방법은 편리하지만, 3가지 문제점을 가지고 있습니다.</p>
<ol type="1">
<li>사용량이 많은 경우 요금제가 막힘</li>
<li>클라우드 무료 요금제의 인스턴스는 로컬에 비해 성능이 많이 모자람 (물론 제약이 생길 정도까진 아닙니다)</li>
<li>R을 사용할 수 있는 사람도 shiny.likert를 사용하기 위해 shinyapps만 사용해야함</li>
</ol>
<p>물론 이 외에도 나중에 유지보수를 위해 로컬에서 작업해야하는 경우를 위해 package의 형태로도 개발하겠습니다.</p>
<p><em>이전에 만든 shiny package 중 하나는 끌어다 사용하는 라이브러리의 api 변화로 로컬에서 작동하게 하려면 최근 버전에 맞추어 수정을 해야합니다.</em></p>
<p>이 방법은 <a href="https://deanattali.com/2015/04/21/r-package-shiny-app/">dean attali님의 아티클</a>을 참조하였습니다.</p>
<ol type="1">
<li>현재 작업중인 디렉토리에 R Package를 생성</li>
</ol>
<div class="cell">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">devtools</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_package</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/getwd.html">getwd</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<ol start="2" type="1">
<li>R package의 <code>Description</code>을 변경.</li>
</ol>
<ul>
<li>
<code>Imports</code>를 추가합니다.</li>
</ul>
<ol start="3" type="1">
<li>
<code>inst</code> 디렉토리를 만들고, <code>shinyApp</code>이라는 디렉토리를 만들어 작업했던 <code>app.R</code>이나 <code>www/styles.css</code>를 이동합니다.</li>
</ol>
<ul>
<li>
<code>inst</code>는 고정이고, <code>shinyApp</code>은 이름을 바꾸어도 상관없습니다.</li>
</ul>
<ol start="4" type="1">
<li>
<code>R</code> 디렉토리에 <code>shiny.likert</code>라는 함수를 추가합니다. 내용은 아래와 같습니다.</li>
</ol>
<ul>
<li>
<code>shinyApp</code>과 package 이름 <code>shiny.likert</code>에 주의합니다.</li>
</ul>
<div class="cell">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @importFrom shiny runApp</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @export</span></span>
<span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">shiny.likert</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>  </span>
<span>    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">appDir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/system.file.html">system.file</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shinyApp"</span>, package <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'shiny.likert'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>  </span>
<span>    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shiny</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/pkg/shiny/man/runApp.html">runApp</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">appDir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
<ol start="5" type="1">
<li>이후 roxygen2를 활용하여 export등의 documentation을 하고, package를 build합니다.</li>
</ol>
<p>그 결과, 아래의 코드를 통해 누구나 로컬에서도 shiny.likert를 활용할 수 있습니다.</p>
<div class="cell">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">remotes</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://remotes.r-lib.org/reference/install_github.html">install_github</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'zarathucorp/shiny.likert'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;"><a href="https://rdrr.io/r/base/library.html">library</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;"><a href="https://github.com/zarathucorp/shiny.likert">shiny.likert</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shiny.likert</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
</section><section id="github-package" class="level1"><h1>github package</h1>
<p>shiny.likert는 github에 올려진 R package이기 때문에 <a href="https://github.com/jhk0530/shinyReadme">shinyreadme</a>와 <a href="https://github.com/jhk0530/polaroid">polaroid</a>를 사용하여 readme.md를 수정하고, <a href="https://pkgdown.r-lib.org/">pkgdown</a>을 활용해 사이트를 제작합니다.</p>
<p>pkgdown에서의 <strong>Get started</strong>는</p>
<div class="cell">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pkgdown</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://pkgdown.r-lib.org/reference/build_articles.html">build_article</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shiny.likert"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shiny.likert"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>를 통해 만들 수 있습니다. 이외의 과정들은 별도로 설명하지 않으며, 결과는 아래와 같습니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-02-14-shiny.likert/img/shiny8.png" width="600px"></p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-02-14-shiny.likert/img/shiny9.png" width="600px"></p>


</section><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/">CC BY-NC 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{kim2023,
  author = {Kim, Jinhwan},
  title = {Shiny.likert {패키지} {소개}},
  date = {2023-02-15},
  url = {https://blog.zarathu.com/jp/posts/2023-02-14-shiny.likert},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-kim2023" class="csl-entry quarto-appendix-citeas">
Kim, Jinhwan. 2023. <span>“Shiny.likert 패키지 소개.”</span> February
15, 2023. <a href="https://blog.zarathu.com/jp/posts/2023-02-14-shiny.likert">https://blog.zarathu.com/jp/posts/2023-02-14-shiny.likert</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>rpackage</category>
  <category>shiny</category>
  <category>plotly</category>
  <category>shinyapps</category>
  <category>likert</category>
  <category>datavis</category>
  <category>nocode</category>
  <guid>https://blog.zarathu.com/jp/posts/2023-02-14-shiny.likert/</guid>
  <pubDate>Tue, 14 Feb 2023 15:00:00 GMT</pubDate>
  <media:content url="https://blog.zarathu.com/jp/posts/2023-02-14-shiny.likert/img/hex.png" medium="image" type="image/png" height="167" width="144"/>
</item>
<item>
  <title>Python을 이용한 검색포털 API 활용</title>
  <dc:creator>Won Kim</dc:creator>
  <link>https://blog.zarathu.com/jp/posts/2023-02-15-searchAPI-with-python/</link>
  <description><![CDATA[ 
<!-- Google tag (gtag.js) -->
<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-L0DYYSH9KM"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-L0DYYSH9KM');
</script>





<section id="task의-목적" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Task의 목적</h1>
<p><img src="https://blog.zarathu.com/jp/posts/2023-02-15-searchAPI-with-python/img/GND.png" width="800"></p>
<p>이번 태스크의 목적은 바로 구글, 네이버, 다음 API를 모두 이용하여 검색결과를 DB화 시키는 작업입니다.</p>
<p>사용자로 부터 query와 크롤링 원하는 검색 글 수를 인풋으로 입력받아서, API로 부터 제공받은 데이터를 가공하여 새로운 데이터프레임으로 만드는 작업을 수행합니다. 데이터 프레임의 컬럼은</p>
<p>[Title] - 글 제목, [Link] - 글 링크 , [Description] - 글 미리보기 내용, [Search engine] - 검색결과를 제공한 포털 (naver,google,daumkakao), [search_date] -글을 검색한 날짜</p>
<p>입니다.</p>
<p>전체 JupyterNoteBook Source Code</p>
<p><a href="https://github.com/zarathucorp/blog/blob/master/source_code/Custom_Search_Zarathu.ipynb" class="uri">https://github.com/zarathucorp/blog/blob/master/source_code/Custom_Search_Zarathu.ipynb</a></p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-02-15-searchAPI-with-python/img/final_data.png" width="1000"></p>
<section id="왜-크롤링을-하지-않았는지" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="왜-크롤링을-하지-않았는지"><span class="header-section-number">1.1</span> 왜 크롤링을 하지 않았는지</h2>
<p>흔히 동적 크롤러로 Selenium을 많이 활용합니다. 하지만 이런 크롤링에는 기업의 자산인 데이터 자산을 침해한다는 문제점이 있습니다. 이와 관련하여 부동산 정보 플랫폼 직방의 데이터를 크롤링한 경위로 스타트업 방픽은 소송에서 얻은 데이터를 폐기하고, 직방에 2000만원을 지급하도록 2월 3일에 판결을 내려졌습니다. 따라서 홈페이지를 통해 정보가 공개됐다고 하더라도, 이런 타 사이트에 대한 데이터 베이스를 수집하는 행위는 위험하다고 생각합니다. 따라서 크롤링을 해야한다면 해도 되는지 확인을 하고 하거나, 개발자를 위한 도구로 제공된 API가 먼저 있는지 없는지 검토를 하는 것이 안전해 보입니다. (특히 얻은 데이터로 수익을 창출하는 경우는 더 더욱)</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-02-15-searchAPI-with-python/img/dangerous_crawling.png" width="800"></p>
<p><a href="https://www.joongang.co.kr/article/25139935#home" class="uri">https://www.joongang.co.kr/article/25139935#home</a></p>
</section>
<section id="api란" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="api란"><span class="header-section-number">1.2</span> API란?</h2>
<p>API란 무엇인지 위키백과의 설명을 통하면, “API(application programming interface 애플리케이션 프로그래밍 인터페이스[*], 응용 프로그램 프로그래밍 인터페이스)는 컴퓨터나 컴퓨터 프로그램 사이의 연결이다. 일종의 소프트웨어 인터페이스이며 다른 종류의 소프트웨어에 서비스를 제공한다”라고 설명하고 있습니다. 즉 컴퓨터끼리 연결하고 소통하는 방식인데, 주로 우리가 API를 연결해서 쓸 때는 클라이언트와 서버를 연결하여 원하는 요청을 처리하는 것이 보통입니다. 오늘 이 글에서 사용할 API는 REST API라고 합니다. API와 구별되는 REST API의 특징으로는 API를 이용할 때 규칙이 정해져 있다는 특징이 있습니다.</p>
<p>URL을 통해 소통할 방법을 서버와 클라이언트 사이에 주고 받는다. 그때 어떤 자원에 대해 어떤 행위를 요청받을지 URL에 명시를 해주는 것이 원칙입니다.</p>
<ul>
<li>GET : 리소스 생성</li>
<li>POST: 조회</li>
<li>PUT : 수정</li>
<li>DELETE: 삭제</li>
</ul>
<p>등이 있고, 서버는 요청에 대해 상태코드로 응답합니다</p>
<p>상태코드에 따라 정상과 비정상적으로 처리했는지 response 개체를 받아옵니다.</p>
<ul>
<li>200: 정상</li>
<li>400: 비정상</li>
</ul>
<p><img src="https://blog.zarathu.com/jp/posts/2023-02-15-searchAPI-with-python/img/how_api_works.png" width="800"></p>
</section>
</section>
<section id="구글-api-사용법" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> 구글 API 사용법</h1>
<p>API를 통해 서버로 부터 응답을 받기 위해선 api key가 필요합니다. 구글에서는 검색한 내용을 반환시켜주는 API로 custom_search_engine cse를 사용해서 검색 결과를 가져올 수 있습니다. (일일 100개의 쿼리제한이 걸려있습니다.)</p>
<p>구글 API 키 발급받는 방법은 아래 링크를 참조하세요</p>
<ul>
<li><a href="https://gomgomi.tistory.com/3" class="uri">https://gomgomi.tistory.com/3</a></li>
</ul>
<hr>
<p>구글 CSE 공식문서를 참고하여 작성하였습니다.</p>
<p><a href="https://developers.google.com/custom-search/v1/using_rest?hl=ko" class="uri">https://developers.google.com/custom-search/v1/using_rest?hl=ko</a></p>
<p>예시코드로</p>
<pre class="{terminal}"><code>GET https://www.googleapis.com/customsearch/v1?key=INSERT_YOUR_API_KEY&amp;cx=017576662512468239146:omuauf_lfve&amp;q=lectures</code></pre>
<p>이런 코드가 적혀있는 것을 알 수 있습니다. 이것은 터미널에서 리눅스 명령어로 앞에 curl을 호출해서 url로 부터 응답을 받아오는 코드를 의미합니다</p>
<p>자세히 보시면 중간에 key=INSERT_YOUR_API_KEY로 발급받은 키가 들어가는 자리이고, cx= google_search_engine의 id값이 들어갑니다. 또 &amp;q= query로 검색할 검색어를 입력하는 것을 알 수 있습니다.</p>
<p>이외에도 request 요청을 할 때 다양한 인자들을 줄 수 있습니다.</p>
<p>더욱 자세한 인자들을 모두 소개하는 것은 한계가 있으니 링크를 통하여 <a href="https://developers.google.com/custom-search/v1/reference/rest/v1/cse/list?hl=ko&amp;apix_params=%7B%22cx%22%3A%22sadasda%22%2C%22q%22%3A%22react%22%2C%22start%22%3A1%7D" class="uri">https://developers.google.com/custom-search/v1/reference/rest/v1/cse/list?hl=ko&amp;apix_params=%7B%22cx%22%3A%22sadasda%22%2C%22q%22%3A%22react%22%2C%22start%22%3A1%7D</a> 확인하시기 바랍니다.</p>
<p>파이썬에서는 curl이라는 명령어가 없습니다. 따라서 우리는 url에 대한 응답을 요청하고 받아오기 위해서 python의 패키지인 urllib와 requests를 활용해야합니다.</p>
<p>curl에 대한 명렁어는 파이썬에서 requests 패키지와 urllib을 통해서 요청할 수 있습니다.</p>
<p>요청을 보내는 코드는 아래와 같습니다.</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> requests</span>
<span id="cb2-2"></span>
<span id="cb2-3"></span>
<span id="cb2-4">Google_SEARCH_ENGINE_ID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Search Engine ID </span></span>
<span id="cb2-5">Google_API_KEY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Custom Search Engine API KEY </span></span>
<span id="cb2-6">query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 검색할 쿼리</span></span>
<span id="cb2-7">start_page <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 몇 페이지를 검색할 것인지. 한 페이지 당 10개의 게시물을 받아들일 수 있습니다. </span></span>
<span id="cb2-8"></span>
<span id="cb2-9">url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://www.googleapis.com/customsearch/v1?key=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>Google_API_KEY<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">&amp;cx=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>Google_SEARCH_ENGINE_ID<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">&amp;q=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>query<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">&amp;start=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>start_page<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-10"></span>
<span id="cb2-11">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get(url).json()</span></code></pre></div>
</div>
<p>이렇게 요청하는 url을 우리는 작성하면 얻는 response를 한번 확인해 보겠습니다.</p>
<p><a href="https://developers.google.com/custom-search/v1/reference/rest/v1/Search?hl=ko" class="uri">https://developers.google.com/custom-search/v1/reference/rest/v1/Search?hl=ko</a> 응답에 대한 양식에 대한 링크이며 응답을 테스트 해볼 수 있습니다.</p>
<p>이때 우리는 응답에 대해서 response 객체로 JSON 형식의 데이터를 반환하는 것을 알 수 있습니다. JSON 형식의 데이터는 key-value로 이루어진 딕셔너리 형태의 데이터 타입으로, value 값을 얻기 위해 get 메서드를 많이 사용합니다.</p>
<p>이렇게 서버로 부터 응답해온 결과 중 우리가 원하는 정보를 추출해서, 데이터프레임에 담아내는 것이 목적입니다. response 객체 중, items의 키값을 통해 요청한 결과물들이 담겨 있는 것을 확인했습니다.</p>
<p><img src="https://blog.zarathu.com/jp/posts/2023-02-15-searchAPI-with-python/img/response_google.png" width="800"></p>
<section id="구글-크롤링-코드-전체" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="구글-크롤링-코드-전체"><span class="header-section-number">2.1</span> 구글 크롤링 코드 전체</h2>
<p>응답받은 response 이 코드에선 data로 변수명을 저장했습니다. 이 객체에 접근해서 우리의 목표에 맞게 데이터에 접근해서 한 줄 한 줄 데이터 프레임에 입력하여 저장하는 작업을 하겠습니다.</p>
<section id="url에-내용의-신뢰도가-낮은-사이트의-검색결과는-저장하지-않도록-예외처리를-합니다.-선택사항" class="level3" data-number="2.1.1">
<h3 data-number="2.1.1" class="anchored" data-anchor-id="url에-내용의-신뢰도가-낮은-사이트의-검색결과는-저장하지-않도록-예외처리를-합니다.-선택사항"><span class="header-section-number">2.1.1</span> url에 내용의 신뢰도가 낮은 사이트의 검색결과는 저장하지 않도록 예외처리를 합니다. (선택사항)</h3>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">Trash_Link <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tistory"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kin"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"youtube"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blog"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"book"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"news"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dcinside"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fmkorea"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ruliweb"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"theqoo"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"clien"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mlbpark"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"instiz"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"todayhumor"</span>] </span></code></pre></div>
</div>
<p>url 링크에, 티스토리, 지식인,유튜브, 블로그,책,뉴스,디시인사이드,에펨코리아,루리엡,더쿠,클리앙,엠엘비파크,인스티즈,오늘의유머의 검색결과는 제거하도록 했습니다.</p>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> Google_API(query, wanted_row):</span>
<span id="cb4-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    input : </span></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        query : str  검색하고 싶은 검색어 </span></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        wanted_row : str 검색 결과를 몇 행 저장할 것인지 </span></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    output : </span></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        df_google : dataframe / column = title, link,description  </span></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        사용자로 부터 입력받은 쿼리문을 통해 나온 검색 결과를 wanted_row만큼 (100행을 입력받았으면) 100행이 저장된 데이터 프레임을 return합니다.</span></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb4-10"></span>
<span id="cb4-11">    query<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> query.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OR"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#쿼리에서 입력받은 | 기호를 OR 로 바꿉니다 </span></span>
<span id="cb4-12">    query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-filetype:pdf"</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 검색식을 사용하여 file type이 pdf가 아닌 것을 제외시켰습니다 </span></span>
<span id="cb4-13">    start_pages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># start_pages 라는 리스트를 생성합니다. </span></span>
<span id="cb4-14"></span>
<span id="cb4-15">    df_google<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Title'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Link'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Description'</span>]) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># df_Google이라는 데이터 프레임에 컬럼명은 Title, Link, Description으로 설정했습니다.</span></span>
<span id="cb4-16"></span>
<span id="cb4-17">    row_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dataframe에 정보가 입력되는 것을 카운트 하기 위해 만든 변수입니다. </span></span>
<span id="cb4-18"></span>
<span id="cb4-19"></span>
<span id="cb4-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,wanted_row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>):</span>
<span id="cb4-21">        start_pages.append(i) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#구글 api는 1페이지당 10개의 결과물을 보여줘서 1,11,21순으로 로드한 페이지를 리스트에 담았습니다. </span></span>
<span id="cb4-22"></span>
<span id="cb4-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> start_page <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> start_pages:</span>
<span id="cb4-24">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1페이지, 11페이지,21페이지 마다, </span></span>
<span id="cb4-25">        url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://www.googleapis.com/customsearch/v1?key=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>Google_API_KEY<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">&amp;cx=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>Google_SEARCH_ENGINE_ID<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">&amp;q=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>query<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">&amp;start=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>start_page<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb4-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 요청할 URL에 사용자 정보인 API key, CSE ID를 저장합니다. </span></span>
<span id="cb4-27">        data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get(url).json()</span>
<span id="cb4-28">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># request를 requests 라이브러리를 통해서 요청하고, 결과를 json을 호출하여 데이터에 담습니다.</span></span>
<span id="cb4-29">        search_items <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"items"</span>)</span>
<span id="cb4-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># data의 하위에 items키로 저장돼있는 값을 불러옵니다. </span></span>
<span id="cb4-31">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># search_items엔 검색결과 [1~ 10]개의 아이템들이 담겨있다.  start_page = 11 ~ [11~20] </span></span>
<span id="cb4-32">        </span>
<span id="cb4-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb4-34">          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#try 구문을 하는 이유: 검색 결과가 null인 경우 link를 가져올 수가 없어서 없으면 없는대로 예외처리</span></span>
<span id="cb4-35">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, search_item <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(search_items, start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb4-36">              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># link 가져오기 </span></span>
<span id="cb4-37">                link <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> search_item.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"link"</span>)</span>
<span id="cb4-38">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">any</span>(trash <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> link <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> trash <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> Trash_Link):</span>
<span id="cb4-39">                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 링크에 dcinside, News 등을 포함하고 있으면 데이터를 데이터프레임에 담지 않고, 다음 검색결과로 </span></span>
<span id="cb4-40">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">pass</span></span>
<span id="cb4-41">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>: </span>
<span id="cb4-42">                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 제목저장</span></span>
<span id="cb4-43">                    title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> search_item.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>)</span>
<span id="cb4-44">                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 설명 저장 </span></span>
<span id="cb4-45">                    descripiton <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> search_item.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"snippet"</span>)</span>
<span id="cb4-46">                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># df_google에 한줄한줄 append </span></span>
<span id="cb4-47">                    df_google.loc[start_page <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [title,link,descripiton] </span>
<span id="cb4-48">                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 저장하면 행 갯수 카운트 </span></span>
<span id="cb4-49">                    row_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb4-50">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (row_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> wanted_row) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> (row_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>) :</span>
<span id="cb4-51">                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#원하는 갯수만큼 저장끝나면</span></span>
<span id="cb4-52">                        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df_google</span>
<span id="cb4-53">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span>:</span>
<span id="cb4-54">          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 더 이상 검색결과가 없으면 df_google 리턴 후 종료 </span></span>
<span id="cb4-55">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df_google</span>
<span id="cb4-56"></span>
<span id="cb4-57">    </span>
<span id="cb4-58">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df_google</span></code></pre></div>
</div>
<p>link를 입력 받을 때 try except구문을 활용하여 예외처리를 하였습니다.이를 자세히 설명하게 되면, 특정 키워드로 검색했을 때 나오는 검색결과가 충분하지 않는 경우 response객체에 items 값이 null이 되게 됩니다. 따라서 이후의 작업들이 문제가 생기게 되는데, 이를 try except 구문을 통해 처리했습니다.</p>
</section>
</section>
</section>
<section id="네이버-검색-api-사용법" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> 네이버 검색 API 사용법</h1>
<p>네이버 API 키를 발급받는 방법은 아래를 참고하세요.</p>
<p>일 허용 한도 25000건을 제공합니다 더 많은 요청을 보내기 위해선 제휴를 신청해야합니다.</p>
<ul>
<li><a href="https://zerosecu.tistory.com/18" class="uri">https://zerosecu.tistory.com/18</a></li>
</ul>
<p>네이버 웹문서 검색 API 공식문서</p>
<p><a href="https://developers.naver.com/docs/serviceapi/search/web/web.md#%EC%9B%B9%EB%AC%B8%EC%84%9C" class="uri">https://developers.naver.com/docs/serviceapi/search/web/web.md#%EC%9B%B9%EB%AC%B8%EC%84%9C</a></p>
<section id="네이버-크롤링-코드" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="네이버-크롤링-코드"><span class="header-section-number">3.1</span> 네이버 크롤링 코드</h2>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Naver_client_id = '~~~~' # 발급받은 ID를 입력해주세요 </span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Naver_client_secret = '~~~' </span></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> Naver_API(query,wanted_row):</span>
<span id="cb5-5">    query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> urllib.parse.quote(query)</span>
<span id="cb5-6"></span>
<span id="cb5-7">    display<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> </span>
<span id="cb5-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#네이버 검색 API는 한 페이지를 요청했을 때 몇개의 건수를 보여줄 것인지 인자로 표시할 수 있습니다. </span></span>
<span id="cb5-9">    start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb5-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># start page를 1로 설정합니다.</span></span>
<span id="cb5-11">    end<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>wanted_row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span></span>
<span id="cb5-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 끝내는 페이지를 원하는 행의 갯수보다 더 많이 설정했는데 이유는 , trashlink 보다 많은 데이터를 저장합니다.  </span></span>
<span id="cb5-13">    sort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sim'</span></span>
<span id="cb5-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 네이버 API 검색 결과는 검색결과 데이터를 정렬하는 순서의 기준을 정합니다. </span></span>
<span id="cb5-15"></span>
<span id="cb5-16">    df<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Title'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Link'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Description'</span>])</span>
<span id="cb5-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 마찬가지로 title,link,description의 컬럼을 가진 데이터프레임을 생성합니다. </span></span>
<span id="cb5-18">    row_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> </span>
<span id="cb5-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dataframe에 정보가 입력되는 것을 카운트 하기 위해 만든 변수입니다. </span></span>
<span id="cb5-20">    </span>
<span id="cb5-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> start_index <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(start,end,display):</span>
<span id="cb5-22">        url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://openapi.naver.com/v1/search/webkr?query="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> query <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+\</span></span>
<span id="cb5-23">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&amp;display="</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(display)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-24">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&amp;start="</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(start_index) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-25">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&amp;sort="</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sort</span>
<span id="cb5-26"></span>
<span id="cb5-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#url에 요청할 정보에 대한 내용을 담아 변수 선언하고, </span></span>
<span id="cb5-28">        request <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> urllib.request.Request(url)</span>
<span id="cb5-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#urllib.request 모듈을 통해 요청을만들고,  </span></span>
<span id="cb5-30">        request.add_header(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X-Naver-Client-Id"</span>,Naver_client_id)</span>
<span id="cb5-31">        request.add_header(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X-Naver-Client-Secret"</span>,Naver_client_secret)</span>
<span id="cb5-32">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 그 요청에 헤더를 만들어서 클라이언트 아이디와, 비밀번호를 헤더에 입력합니다. </span></span>
<span id="cb5-33">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb5-34">            response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> urllib.request.urlopen(request)</span>
<span id="cb5-35">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 요청하여 받은 내용을 response로 저장합니다.</span></span>
<span id="cb5-36">            rescode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response.getcode()</span>
<span id="cb5-37">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># response 객체에 담긴 응답 코드를 받아옵니다</span></span>
<span id="cb5-38">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(rescode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>):</span>
<span id="cb5-39">                response_body <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> response.read()</span>
<span id="cb5-40">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># response 내용을 읽어들여 response_body에 저장합니다. </span></span>
<span id="cb5-41">                items<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(response_body.decode(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'utf-8'</span>))[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'items'</span>]</span>
<span id="cb5-42">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 전체 response를 json화 한 뒤 key값이 items로 되어있는 값에 저장을 합니다. </span></span>
<span id="cb5-43">                remove_tag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;.*?&gt;'</span>)</span>
<span id="cb5-44">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># html문법의 태그들을 제거하는 컴파일러를 정규식을 패키지를 통해 생성합니다.</span></span>
<span id="cb5-45">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> item_index <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(items)):</span>
<span id="cb5-46">                    link <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> items[item_index][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'link'</span>]</span>
<span id="cb5-47">                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 아이템에 링크에 접근합니다</span></span>
<span id="cb5-48">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">any</span>(trash <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> link <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> trash <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> Trash_Link):</span>
<span id="cb5-49">                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># link url에 출처가 신뢰도가 낮은 사이트의 정보라면 데이터프레임에 저장하지 않고 넘어갑니다. </span></span>
<span id="cb5-50">                        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">pass</span></span>
<span id="cb5-51">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb5-52">                        title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.sub(remove_tag, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>, items[item_index][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'title'</span>])</span>
<span id="cb5-53">                        description <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.sub(remove_tag, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>, items[item_index][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'description'</span>])</span>
<span id="cb5-54">                        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># html 태그를 제거한 후, 제목 설명,링크 저장 </span></span>
<span id="cb5-55">                        df.loc[row_count] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[title,link,description]</span>
<span id="cb5-56">                        row_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb5-57">                        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (row_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> wanted_row) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> (row_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>):</span>
<span id="cb5-58">                            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df</span>
<span id="cb5-59">                        </span>
<span id="cb5-60">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span>:</span>
<span id="cb5-61">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df</span></code></pre></div>
</div>
<p>큰 흐름은 구글에서 작성한 코드와 유사합니다.</p>
<p>먼저 네이버 클라이언트 ID와 KEY값을 변수로 넣어줍니다. 경우에 따라 자기 혼자 쓰는 건 상관없겠지만 , 보통 키를 저렇게 코드에 보이게 노출하는 것 보다는 INPUT을 통해 보이지 않게 입력하는 것이 좋을 것 같습니다. 그리고 구글에서는 URL에 서비스 요청할 정보와 요청자의 신원을 확인할 수 있는 정보들을 모두 입력했습니다. 네이버에서는 조금 다르게 URL에 넣는 인자로는 어떤 검색결과를 받을지 표시하고, 몇 건이 출력될지 등 파라미터를 줘서 코드를 작성할 수 있습니다. 또 URL에 통해 사용자를 키값 정보를 같이 담지 않고 요청에 헤더를 추가하여 그곳에 담아 요청합니다.</p>
<p>이후는 이전과 동일하게 네이버 웹문서 검색 API가 제공하는 JSON 데이터 형식을 보고 필요한 키-밸류값에 접근하여 데이터를 수집한 뒤 데이터프레임을 반환합니다.</p>
<p>구글에서는 요청에 대한 응답(response) items에 데이터가 불용어와 html문법의 태그로 돼있는 것들이 나와있지 않았지만, 네이버에서 보낸 응답에는 불용어가 많이 섞여있어서 그것을 제거하기 위해 re 패키지의 정규식을 이용하여 글자만 남기도록 했습니다.</p>
</section>
</section>
<section id="다음-검색-api-사용법" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> 다음 검색 API 사용법</h1>
<p>카카오 API 키 발급받는 방법은 해당 링크름 참조하세요</p>
<ul>
<li><a href="https://kadosholy.tistory.com/25" class="uri">https://kadosholy.tistory.com/25</a></li>
</ul>
<p>다음 검색 API 공식문서</p>
<p><a href="https://developers.kakao.com/docs/latest/ko/daum-search/dev-guide" class="uri">https://developers.kakao.com/docs/latest/ko/daum-search/dev-guide</a></p>
<section id="다음-api-활용-파이썬-코드" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="다음-api-활용-파이썬-코드"><span class="header-section-number">4.1</span> 다음 API 활용 파이썬 코드</h2>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Kakao_API_key = '~~~~' # 발급받은 api키를 입력해주세요 </span></span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> Daum_API(query,wanted_row):</span>
<span id="cb6-4">    pages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> wanted_row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> </span>
<span id="cb6-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 검색해야할 페이지를 10으로 나눈 몫으로 구합니다 </span></span>
<span id="cb6-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 예: 100 행 검색이면 10페이지</span></span>
<span id="cb6-7"></span>
<span id="cb6-8">    method <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GET"</span></span>
<span id="cb6-9">    url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://dapi.kakao.com/v2/search/web"</span></span>
<span id="cb6-10">    header <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'authorization'</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'KakaoAK </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>Kakao_API_key<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>}</span>
<span id="cb6-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다음 카카오 API를 호출할 때는, header 딕셔너리로 생성하여 정해진 형식으로  API키를 넘겨줘야합니다. 형식은 위와 같습니다. </span></span>
<span id="cb6-12"></span>
<span id="cb6-13">    df<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Title'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Link'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Description'</span>])</span>
<span id="cb6-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#데이터프레임을 생성합니다 </span></span>
<span id="cb6-15">    row_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb6-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># row_count 변수를 생성합니다</span></span>
<span id="cb6-17"></span>
<span id="cb6-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> page <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,pages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>):</span>
<span id="cb6-19">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#여유있게 10페이지더 검색합니다 이유는 Link가 버려지는 경우를 위해서입니다. </span></span>
<span id="cb6-20">        params <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'query'</span> : query, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'page'</span> : page}</span>
<span id="cb6-21">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 다른 API 호출방식과 달리 url string에 담아서 넘겨주는 형식이 아니라, 딕셔너리형태로 </span></span>
<span id="cb6-22">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># params와 header에 담아서 리퀘스트를 요청합니다. </span></span>
<span id="cb6-23">        request <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> requests.get( url, params<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> params, headers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>header)</span>
<span id="cb6-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#요청한 내용을 받은 것을 request에 저장합니다. 변수명 request이지만 사실은 response</span></span>
<span id="cb6-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, item <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(request.json()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"documents"</span>], start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb6-26">          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#아이템 객체에서 url을 받아옵니다.</span></span>
<span id="cb6-27">            link <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> item[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'url'</span>]</span>
<span id="cb6-28">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span>:</span>
<span id="cb6-29">              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># date time이 null인 경우가 많아서 예외처리를 해서 경우를 나눴습니다. 앞의 4글자 년도 YYYY를 저장합니다. </span></span>
<span id="cb6-30">                written_year<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(item[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'datetime'</span>][:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>])</span>
<span id="cb6-31">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">except</span>:</span>
<span id="cb6-32">              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 작성일자가 null인 경우, 2023년으로 저장합니다.  </span></span>
<span id="cb6-33">                written_year <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2023</span></span>
<span id="cb6-34"></span>
<span id="cb6-35">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">any</span>(trash <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> link <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> trash <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> Trash_Link) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> (written_year <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2020</span>)):</span>
<span id="cb6-36">              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 출처가 신뢰도가 낮은 사이트거나, 작성된지 오래된 글의 경우</span></span>
<span id="cb6-37">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">pass</span></span>
<span id="cb6-38">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb6-39">                title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> item[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>]</span>
<span id="cb6-40">                description <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> item[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"contents"</span>]</span>
<span id="cb6-41">                df.loc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>page<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[title,link,description]</span>
<span id="cb6-42">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#title과  본문 설명을 담아서 데이터프레임에 한줄한줄 append합니다. </span></span>
<span id="cb6-43">                row_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb6-44">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (row_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> wanted_row) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> (row_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>):</span>
<span id="cb6-45">                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 행수가 원하는 로우만큼 채워지거나, Maximum_row개수인 300에 도달하면</span></span>
<span id="cb6-46">                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># html태그들을 제거한 후 반환합니다.</span></span>
<span id="cb6-47">                    remove_tag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;.*?&gt;'</span>)</span>
<span id="cb6-48">                    df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Title'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Title'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x :re.sub(remove_tag, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>,x))</span>
<span id="cb6-49">                    df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Description'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Description'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x :re.sub(remove_tag, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>,x))</span>
<span id="cb6-50"></span>
<span id="cb6-51">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df</span>
<span id="cb6-52"></span>
<span id="cb6-53">                </span>
<span id="cb6-54"></span>
<span id="cb6-55">    remove_tag <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;.*?&gt;'</span>)</span>
<span id="cb6-56">    df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Title'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Title'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x :re.sub(remove_tag, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>,x))</span>
<span id="cb6-57">    df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Description'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Description'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x :re.sub(remove_tag, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>,x))</span>
<span id="cb6-58">    </span>
<span id="cb6-59">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df </span></code></pre></div>
</div>
<p>카카오 API는 요청을 하면 보내주는 response 중 우리가 원하는 내용을 구글과 네이버는 items에 내용들이 담겨있었습니다. 카카오 다음검색 api는 보낸 응답에 documents라는 키값에 저장돼있음을 문서를 통해 확인할 수 있습니다. 문서를 통해 확인할 수 있고, 보통 api를 제공하는 사이트에서 테스트해볼 수 있어 입력물과 결과물의 형식을 요청해보지 않아도 확인가능합니다. 조금 다른 점이라면 이번에는 카카오 api에서 담겨있는 내용 중 작성일자를 Document-datetime에 저장돼있어서 검색 기간을 설정할 수 있는 기능을 구현했습니다.</p>
<p>이렇게 나온 결과물에서 한번 더 필터링하는 것도 있을 수 있지만, 애초에 검색식을 이용하여 검색결과로 반환해야할 데이터를 줄일 수 있는데, 기간검색은 검색식으로 제어가 되지 않았습니다.</p>
</section>
</section>
<section id="최종-코드" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> 최종 코드</h1>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> final(query,wanted_row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>):</span>
<span id="cb7-2">    df_google <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Google_API(query,wanted_row)</span>
<span id="cb7-3">    df_google[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'search_engine'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Google'</span></span>
<span id="cb7-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 서치엔진 구글을 통해 얻었음을 기록 </span></span>
<span id="cb7-5">    df_naver <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Naver_API(query,wanted_row)</span>
<span id="cb7-6">    df_naver[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'search_engine'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Naver'</span></span>
<span id="cb7-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 서치엔진 기록 </span></span>
<span id="cb7-8">    df_daum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Daum_API(query,wanted_row)</span>
<span id="cb7-9">    df_daum[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'search_engine'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Daum'</span></span>
<span id="cb7-10">    df_final<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat([df_google,df_naver,df_daum])</span>
<span id="cb7-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 전체 네이버 구글 카카오에서 크롤링한 내용을 수평으로 결합 rowbind </span></span>
<span id="cb7-12">    df_final[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'search_date'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> today</span>
<span id="cb7-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 검색한 날자 저장 </span></span>
<span id="cb7-14">    df_final.reset_index(inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,drop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb7-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#인덱스 초기화 </span></span>
<span id="cb7-16">    </span>
<span id="cb7-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> df_final</span>
<span id="cb7-18"></span>
<span id="cb7-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">############### 검색할 검색어를 query에, 검색엔진당 추출할 문서의 개수를 wanted_row 에 적어주세요####################</span></span>
<span id="cb7-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## 아래 코드를 실행시키기 위해선 위의 함수들이 모두 불러와져 있어야 합니다!</span></span>
<span id="cb7-21"></span>
<span id="cb7-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># today = datetime.today().strftime("%Y%m%d")</span></span>
<span id="cb7-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># query = "뇌진탕 | 외상성 뇌손상 | 두부외상" </span></span>
<span id="cb7-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># wanted_row = 100</span></span>
<span id="cb7-25"></span>
<span id="cb7-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># df = final(query=query, wanted_row=wanted_row) #최종함수를 호출하여 dataframe을 받습니다.</span></span>
<span id="cb7-27"></span>
<span id="cb7-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># query_filename =  re.sub(r"[^\uAC00-\uD7A30-9a-zA-Z\s]", "", query) #저장할때 파일명에는 특수문자 제거  </span></span>
<span id="cb7-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># df.to_csv(f'{query_filename}_{today}.csv',index=False)  #파일이름을 지정하여 저장합니다.</span></span></code></pre></div>
</div>
</section>
<section id="개발-후기" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> 개발 후기</h1>
<p>역시 데이터 분석가의 업무 중 가장 시간이 오래걸리는 것은 전처리가 아닐까 싶습니다. 이 API를 호출하는 과정을 통해서 API에 어떻게 요청하고 응답의 형태를 고려해서 원하는 데이터를 저장하기 위해 어떤 코드를 작성해야하는지 알게됐습니다.</p>
<p>저는 컴퓨터공학 비전공자로 먼저 API라는 것이 이름을 들으면 잘 모르는 것이였어서 두려운 마음이 컸었습니다. 하지만 이번에 실제로 사용을해보니, API 기술의 무엇인지와 이것이 왜 필요한지에 대해서 알게 됐고, 어떤 원리로 동작하는지 알 수 있어서 좋았습니다. 하지만 본문의 내용에서 RESTful한 API, API에 대해서 설명이 깊이있지 못하여 조금 아쉬움이 남습니다.</p>
<p>또 이렇게 앞으로 API를 직접 만들일이 생긴다면, FAST API를 통해 만들 수 있다는 것을 알게됐고 추후에 그 쪽에 대해서도 나중에 더 깊게 공부해보고 싶어졌습니다.</p>
<p>그리고 검색API마다 결국 기본적으로 타이틀과 url ,설명들을 제공하고 있어서 검색 API들이 검색 포털 별로 데이터 규격을 쉽게 맞출 수 있어서 좋았습니다. 공식문서를 정독하는 것이 다른 개발의 과정에서도 중요하지만 특히 API를 사용하는데 있어서 가장 중요한 역할을 한다는 것을 느꼈습니다.</p>
<p>모든 소스코드는 차라투 깃허브에 같이 포스팅 해놓았고 아래 링크에서 확인 가능합니다.</p>
<p>Source Code</p>
<p><a href="https://github.com/zarathucorp/blog/blob/master/source_code/Custom_Search_Zarathu.ipynb" class="uri">https://github.com/zarathucorp/blog/blob/master/source_code/Custom_Search_Zarathu.ipynb</a></p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{kim2023,
  author = {Kim, Won},
  title = {Python을 {이용한} {검색포털} {API} {활용}},
  date = {2023-02-15},
  url = {https://blog.zarathu.com/jp/posts/2023-02-15-searchAPI-with-python},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-kim2023" class="csl-entry quarto-appendix-citeas">
Kim, Won. 2023. <span>“Python을 이용한 검색포털 API 활용.”</span>
February 15, 2023. <a href="https://blog.zarathu.com/jp/posts/2023-02-15-searchAPI-with-python">https://blog.zarathu.com/jp/posts/2023-02-15-searchAPI-with-python</a>.
</div></div></section></div> ]]></description>
  <category>python</category>
  <category>API</category>
  <guid>https://blog.zarathu.com/jp/posts/2023-02-15-searchAPI-with-python/</guid>
  <pubDate>Tue, 14 Feb 2023 15:00:00 GMT</pubDate>
  <media:content url="https://blog.zarathu.com/jp/posts/2023-02-15-searchAPI-with-python/img/GND.png" medium="image" type="image/png" height="96" width="144"/>
</item>
</channel>
</rss>
